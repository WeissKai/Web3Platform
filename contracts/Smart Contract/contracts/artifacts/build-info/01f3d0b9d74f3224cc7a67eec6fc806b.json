{
	"id": "01f3d0b9d74f3224cc7a67eec6fc806b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract SimpleNFT is ERC721URIStorage, Ownable {\r\n    using Counters for Counters.Counter;\r\n    mapping(address => bool) public whitelist;\r\n    Counters.Counter private _tokenIdCounter;\r\n    // [[\"101\",\"0x8a3BC7f5fE946f5827112cd9830028F078C9B142\",\"https://example.com/metadata/123\"],[\"102\",\"0x8a3BC7f5fE946f5827112cd9830028F078C9B142\",\"https://example.com/metadata/345\"]]\r\n    // [[\"103\",\"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\",\"https://example.com/metadata/456\"],[\"104\",\"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\",\"https://example.com/metadata/789\"]]\r\n    struct BadgeInfo {\r\n        uint badgeID;\r\n        address recipient;\r\n        string metadataURI;\r\n    }\r\n\r\n    struct BadgeTokenPair {\r\n        uint badgeID;\r\n        uint256 tokenID;\r\n    }\r\n\r\n    constructor() ERC721(\"SimpleNFT\", \"SNFT\") Ownable(msg.sender) {}\r\n\r\n    function addToWhitelist(address _address) external  {\r\n        whitelist[_address] = true;\r\n    }\r\n\r\n    function removeFromWhitelist(address _address) external  {\r\n        whitelist[_address] = false;\r\n    }\r\n\r\n    event TokenMinted(uint256 badgeID, uint256 tokenID, address recipient);\r\n\r\n    function mintNFT(BadgeInfo[] memory badges)\r\n        public \r\n        returns (BadgeTokenPair[] memory)\r\n    {\r\n    require(whitelist[msg.sender], \"Neither sender nor recipient is whitelisted\");\r\n    BadgeTokenPair[] memory badgeTokenPairs = new BadgeTokenPair[](badges.length);\r\n    for (uint i = 0; i < badges.length; i++) {\r\n        uint256 tokenId = _tokenIdCounter.current();\r\n        _tokenIdCounter.increment();\r\n        _mint(badges[i].recipient, tokenId);\r\n        _setTokenURI(tokenId, badges[i].metadataURI);\r\n        badgeTokenPairs[i] = BadgeTokenPair({\r\n            badgeID: badges[i].badgeID,\r\n            tokenID: tokenId\r\n        });\r\n\r\n        // Emit an event for each new minted token\r\n        emit TokenMinted(badges[i].badgeID, tokenId, badges[i].recipient);\r\n    }\r\n    return badgeTokenPairs; // This return value is only useful for calls, not transactions\r\n}\r\n\r\n    // Function to view the msg.sender address\r\n    function getMsgSender() external view returns (address) {\r\n        return msg.sender;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE BASEFEE EXTCODECOPY PUSH17 0xB1F77F2DEFABE845C3DBEA0CDD3580C566 0x29 CODECOPY 0x24 0x22 0x2A PUSH29 0xBF5A5FC0E264736F6C6343000816003300000000000000000000000000 ",
							"sourceMap": "424:971:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122031483c70b1f77f2defabe845c3dbea0cdd3580c566293924222a7cbf5a5fc0e264736f6c63430008160033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SimpleNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH22 0x84B6A38E353DC92FE4869A4BAAA25214F6DBE08EB5BD 0xDA SWAP2 CALLDATACOPY 0x4E TIMESTAMP PUSH24 0x352A64736F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c7584b6a38e353dc92fe4869a4baaa25214f6dbe08eb5bdda91374e4277352a64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SimpleNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0x4B SUB LT PUSH26 0x118EE086B8E724E4100BD9DAAA7591B2D4B433CD795F53CD545 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "203:14914:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220214b0310790118ee086b8e724e4100bd9daaa7591b2d4b433cd795f53cd545df64736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SimpleNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP12 0x28 0xAB SWAP7 SWAP8 0x2C 0xAB PUSH31 0x8078502BACDCAC7F4CDCD0908F5518AF7BC602CD74350864736F6C63430008 AND STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220379b28ab96972cab7e8078502bacdcac7f4cdcd0908f5518af7bc602cd74350864736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SimpleNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleNFT.sol": {
				"SimpleNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "badgeID",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "TokenMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMsgSender",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "badgeID",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "metadataURI",
											"type": "string"
										}
									],
									"internalType": "struct SimpleNFT.BadgeInfo[]",
									"name": "badges",
									"type": "tuple[]"
								}
							],
							"name": "mintNFT",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "badgeID",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenID",
											"type": "uint256"
										}
									],
									"internalType": "struct SimpleNFT.BadgeTokenPair[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleNFT.sol\":250:2415  contract SimpleNFT is ERC721URIStorage, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleNFT.sol\":1014:1078  constructor() ERC721(\"SimpleNFT\", \"SNFT\") Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/SimpleNFT.sol\":1064:1074  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x53696d706c654e46540000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x534e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/SimpleNFT.sol\":250:2415  contract SimpleNFT is ERC721URIStorage, Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SimpleNFT.sol\":250:2415  contract SimpleNFT is ERC721URIStorage, Ownable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleNFT.sol\":250:2415  contract SimpleNFT is ERC721URIStorage, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a6ce2e1\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x7a6ce2e1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x42842e0e\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f6c96a0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/SimpleNFT.sol\":1381:2264  function mintNFT(BadgeInfo[] memory badges)... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/SimpleNFT.sol\":2320:2412  function getMsgSender() external view returns (address) {... */\n    tag_13:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleNFT.sol\":1191:1294  function removeFromWhitelist(address _address) external  {... */\n    tag_14:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleNFT.sol\":347:388  mapping(address => bool) public whitelist */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleNFT.sol\":1086:1183  function addToWhitelist(address _address) external  {... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_117\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_123:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleNFT.sol\":1381:2264  function mintNFT(BadgeInfo[] memory badges)... */\n    tag_57:\n        /* \"contracts/SimpleNFT.sol\":1460:1483  BadgeTokenPair[] memory */\n      0x60\n        /* \"contracts/SimpleNFT.sol\":1505:1514  whitelist */\n      0x08\n        /* \"contracts/SimpleNFT.sol\":1505:1526  whitelist[msg.sender] */\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1515:1525  msg.sender */\n      caller\n        /* \"contracts/SimpleNFT.sol\":1505:1526  whitelist[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleNFT.sol\":1497:1574  require(whitelist[msg.sender], \"Neither sender nor recipient is whitelisted\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"contracts/SimpleNFT.sol\":1581:1620  BadgeTokenPair[] memory badgeTokenPairs */\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1644:1650  badges */\n      dup3\n        /* \"contracts/SimpleNFT.sol\":1644:1657  badges.length */\n      mload\n        /* \"contracts/SimpleNFT.sol\":1623:1658  new BadgeTokenPair[](badges.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n    tag_147:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup2\n      0x20\n      add\n    tag_151:\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_151\n      jumpi\n      swap1\n      pop\n    tag_150:\n      pop\n        /* \"contracts/SimpleNFT.sol\":1581:1658  BadgeTokenPair[] memory badgeTokenPairs = new BadgeTokenPair[](badges.length) */\n      swap1\n      pop\n        /* \"contracts/SimpleNFT.sol\":1670:1676  uint i */\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1665:2168  for (uint i = 0; i < badges.length; i++) {... */\n    tag_154:\n        /* \"contracts/SimpleNFT.sol\":1686:1692  badges */\n      dup4\n        /* \"contracts/SimpleNFT.sol\":1686:1699  badges.length */\n      mload\n        /* \"contracts/SimpleNFT.sol\":1682:1683  i */\n      dup2\n        /* \"contracts/SimpleNFT.sol\":1682:1699  i < badges.length */\n      lt\n        /* \"contracts/SimpleNFT.sol\":1665:2168  for (uint i = 0; i < badges.length; i++) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"contracts/SimpleNFT.sol\":1717:1732  uint256 tokenId */\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1735:1760  _tokenIdCounter.current() */\n      tag_157\n        /* \"contracts/SimpleNFT.sol\":1735:1750  _tokenIdCounter */\n      0x09\n        /* \"contracts/SimpleNFT.sol\":1735:1758  _tokenIdCounter.current */\n      tag_158\n        /* \"contracts/SimpleNFT.sol\":1735:1760  _tokenIdCounter.current() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/SimpleNFT.sol\":1717:1760  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/SimpleNFT.sol\":1771:1798  _tokenIdCounter.increment() */\n      tag_159\n        /* \"contracts/SimpleNFT.sol\":1771:1786  _tokenIdCounter */\n      0x09\n        /* \"contracts/SimpleNFT.sol\":1771:1796  _tokenIdCounter.increment */\n      tag_160\n        /* \"contracts/SimpleNFT.sol\":1771:1798  _tokenIdCounter.increment() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/SimpleNFT.sol\":1809:1844  _mint(badges[i].recipient, tokenId) */\n      tag_161\n        /* \"contracts/SimpleNFT.sol\":1815:1821  badges */\n      dup6\n        /* \"contracts/SimpleNFT.sol\":1822:1823  i */\n      dup4\n        /* \"contracts/SimpleNFT.sol\":1815:1824  badges[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n    tag_162:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":1815:1834  badges[i].recipient */\n      0x20\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":1836:1843  tokenId */\n      dup3\n        /* \"contracts/SimpleNFT.sol\":1809:1814  _mint */\n      tag_165\n        /* \"contracts/SimpleNFT.sol\":1809:1844  _mint(badges[i].recipient, tokenId) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/SimpleNFT.sol\":1855:1899  _setTokenURI(tokenId, badges[i].metadataURI) */\n      tag_166\n        /* \"contracts/SimpleNFT.sol\":1868:1875  tokenId */\n      dup2\n        /* \"contracts/SimpleNFT.sol\":1877:1883  badges */\n      dup7\n        /* \"contracts/SimpleNFT.sol\":1884:1885  i */\n      dup5\n        /* \"contracts/SimpleNFT.sol\":1877:1886  badges[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_168\n      tag_164\n      jump\t// in\n    tag_168:\n    tag_167:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":1877:1898  badges[i].metadataURI */\n      0x40\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":1855:1867  _setTokenURI */\n      tag_169\n        /* \"contracts/SimpleNFT.sol\":1855:1899  _setTokenURI(tokenId, badges[i].metadataURI) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/SimpleNFT.sol\":1931:2030  BadgeTokenPair({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SimpleNFT.sol\":1970:1976  badges */\n      dup7\n        /* \"contracts/SimpleNFT.sol\":1977:1978  i */\n      dup5\n        /* \"contracts/SimpleNFT.sol\":1970:1979  badges[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      tag_171\n      tag_164\n      jump\t// in\n    tag_171:\n    tag_170:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":1970:1987  badges[i].badgeID */\n      0x00\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":1931:2030  BadgeTokenPair({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SimpleNFT.sol\":2011:2018  tokenId */\n      dup3\n        /* \"contracts/SimpleNFT.sol\":1931:2030  BadgeTokenPair({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SimpleNFT.sol\":1910:1925  badgeTokenPairs */\n      dup4\n        /* \"contracts/SimpleNFT.sol\":1926:1927  i */\n      dup4\n        /* \"contracts/SimpleNFT.sol\":1910:1928  badgeTokenPairs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_173\n      tag_164\n      jump\t// in\n    tag_173:\n    tag_172:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SimpleNFT.sol\":1910:2030  badgeTokenPairs[i] = BadgeTokenPair({... */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/SimpleNFT.sol\":2100:2160  TokenMinted(badges[i].badgeID, tokenId, badges[i].recipient) */\n      0xf371d67483809edbc84279729528d26a3e37ce67f1e3a911778dbf88ff927ca2\n        /* \"contracts/SimpleNFT.sol\":2112:2118  badges */\n      dup6\n        /* \"contracts/SimpleNFT.sol\":2119:2120  i */\n      dup4\n        /* \"contracts/SimpleNFT.sol\":2112:2121  badges[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_175\n      tag_164\n      jump\t// in\n    tag_175:\n    tag_174:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":2112:2129  badges[i].badgeID */\n      0x00\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":2131:2138  tokenId */\n      dup3\n        /* \"contracts/SimpleNFT.sol\":2140:2146  badges */\n      dup8\n        /* \"contracts/SimpleNFT.sol\":2147:2148  i */\n      dup6\n        /* \"contracts/SimpleNFT.sol\":2140:2149  badges[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_176\n      jumpi\n      tag_177\n      tag_164\n      jump\t// in\n    tag_177:\n    tag_176:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":2140:2159  badges[i].recipient */\n      0x20\n      add\n      mload\n        /* \"contracts/SimpleNFT.sol\":2100:2160  TokenMinted(badges[i].badgeID, tokenId, badges[i].recipient) */\n      mload(0x40)\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SimpleNFT.sol\":1706:2168  {... */\n      pop\n        /* \"contracts/SimpleNFT.sol\":1701:1704  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/SimpleNFT.sol\":1665:2168  for (uint i = 0; i < badges.length; i++) {... */\n      jump(tag_154)\n    tag_155:\n      pop\n        /* \"contracts/SimpleNFT.sol\":2181:2196  badgeTokenPairs */\n      dup1\n        /* \"contracts/SimpleNFT.sol\":2174:2196  return badgeTokenPairs */\n      swap2\n      pop\n      pop\n        /* \"contracts/SimpleNFT.sol\":1381:2264  function mintNFT(BadgeInfo[] memory badges)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SimpleNFT.sol\":2320:2412  function getMsgSender() external view returns (address) {... */\n    tag_73:\n        /* \"contracts/SimpleNFT.sol\":2367:2374  address */\n      0x00\n        /* \"contracts/SimpleNFT.sol\":2394:2404  msg.sender */\n      caller\n        /* \"contracts/SimpleNFT.sol\":2387:2404  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/SimpleNFT.sol\":2320:2412  function getMsgSender() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleNFT.sol\":1191:1294  function removeFromWhitelist(address _address) external  {... */\n    tag_77:\n        /* \"contracts/SimpleNFT.sol\":1281:1286  false */\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1259:1268  whitelist */\n      0x08\n        /* \"contracts/SimpleNFT.sol\":1259:1278  whitelist[_address] */\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1269:1277  _address */\n      dup4\n        /* \"contracts/SimpleNFT.sol\":1259:1278  whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1259:1286  whitelist[_address] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleNFT.sol\":1191:1294  function removeFromWhitelist(address _address) external  {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_195\n      swap1\n      tag_117\n      jump\t// in\n    tag_195:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_196\n      swap1\n      tag_117\n      jump\t// in\n    tag_196:\n      dup1\n      iszero\n      tag_197\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_198\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_197)\n    tag_198:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_199:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_199\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleNFT.sol\":347:388  mapping(address => bool) public whitelist */\n    tag_86:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_50\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1283:1296  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1322:1329  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1321  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1308:1330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_209:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1364  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1377  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1378:1385  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1367:1386  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1341:1386  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_210\n      swap1\n      tag_117\n      jump\t// in\n    tag_210:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_117\n      jump\t// in\n    tag_211:\n      dup1\n      iszero\n      tag_212\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_213\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_212)\n    tag_213:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_214:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_214\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1414  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1425  _baseURI */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1417:1427  _baseURI() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1396:1427  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1522:1523  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1506:1510  base */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1518  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1500:1523  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1546:1555  _tokenURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1539:1555  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_208)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1496:1566  if (bytes(base).length == 0) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1691:1692  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1671:1680  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1688  bytes(_tokenURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1665:1692  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1729:1733  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1735:1744  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1715:1745  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_219\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1745  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_208)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1661:1756  if (bytes(_tokenURI).length > 0) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1787  super.tokenURI */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1773:1796  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1766:1796  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1210:1803  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_208:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SimpleNFT.sol\":1086:1183  function addToWhitelist(address _address) external  {... */\n    tag_102:\n        /* \"contracts/SimpleNFT.sol\":1171:1175  true */\n      0x01\n        /* \"contracts/SimpleNFT.sol\":1149:1158  whitelist */\n      0x08\n        /* \"contracts/SimpleNFT.sol\":1149:1168  whitelist[_address] */\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1159:1167  _address */\n      dup4\n        /* \"contracts/SimpleNFT.sol\":1149:1168  whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleNFT.sol\":1149:1175  whitelist[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleNFT.sol\":1086:1183  function addToWhitelist(address _address) external  {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_232\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_233\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2035:2044  _tokenURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2023  _tokenURIs */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2024:2031  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2032  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2013:2044  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_263\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2074:2081  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2059:2082  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_265\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1922:2089  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_276\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_282\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_283\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      0x01\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_285\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_290\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_289)\n    tag_290:\n      0x60\n      swap2\n      pop\n    tag_289:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_299:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_300\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_301\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_302)\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_303\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_305\n      swap3\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_309\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_312\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_313\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_319\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_320\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap3\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_329\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_330\n      jumpi\n      tag_331\n      tag_149\n      jump\t// in\n    tag_331:\n    tag_330:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_332\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_332:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_335\n      jumpi\n      tag_336\n      tag_337\n      jump\t// in\n    tag_336:\n    tag_335:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_333\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_340\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_341\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_342\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_343\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_344\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_347\n      jumpi\n      tag_348\n      tag_337\n      jump\t// in\n    tag_348:\n    tag_347:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_350\n      jumpi\n      tag_351\n      tag_337\n      jump\t// in\n    tag_351:\n    tag_350:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_353\n      jumpi\n      tag_354\n      tag_337\n      jump\t// in\n    tag_354:\n    tag_353:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_356\n      jumpi\n      tag_357\n      tag_337\n      jump\t// in\n    tag_357:\n    tag_356:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_359\n      jumpi\n      tag_360\n      tag_337\n      jump\t// in\n    tag_360:\n    tag_359:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_361\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_362\n      jumpi\n      tag_363\n      tag_337\n      jump\t// in\n    tag_363:\n    tag_362:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_153:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_365:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_366:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_367:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_368:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_369:\n        /* \"#utility.yul\":561:584   */\n      tag_445\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_368\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_446:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_370:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_448\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_369\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_29:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_451\n      tag_366\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":833:952   */\n    tag_450:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_452\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_370\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_371:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_372:\n        /* \"#utility.yul\":1268:1289   */\n      tag_455\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_371\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_32:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_457\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_372\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_373:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_374:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_375:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_461:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_461)\n    tag_463:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_376:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_377:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_466\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_373\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":2329:2400   */\n      tag_467\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_374\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_468\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_375\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":2499:2528   */\n      tag_469\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_376\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_36:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_471\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_377\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_378:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_379:\n        /* \"#utility.yul\":3016:3040   */\n      tag_474\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_378\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_475:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_380:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_477\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_379\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_39:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_480\n      tag_366\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3292:3411   */\n    tag_479:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_481\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_380\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_381:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_382:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_484\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_381\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_383:\n        /* \"#utility.yul\":3872:3896   */\n      tag_486\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_382\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_42:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_488\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_383\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_384:\n        /* \"#utility.yul\":4210:4234   */\n      tag_490\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_382\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_491:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_385:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_493\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_384\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_45:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_496\n      tag_366\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":4503:4622   */\n    tag_495:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_497\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_385\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_498\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_380\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_49:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_501\n      tag_366\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":5000:5119   */\n    tag_500:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_502\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_385\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_503\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_385\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_504\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_380\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5632   */\n    tag_386:\n        /* \"#utility.yul\":5624:5625   */\n      0x00\n        /* \"#utility.yul\":5621:5622   */\n      dup1\n        /* \"#utility.yul\":5614:5626   */\n      revert\n        /* \"#utility.yul\":5638:5818   */\n    tag_149:\n        /* \"#utility.yul\":5686:5763   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5683:5684   */\n      0x00\n        /* \"#utility.yul\":5676:5764   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x41\n        /* \"#utility.yul\":5780:5781   */\n      0x04\n        /* \"#utility.yul\":5773:5788   */\n      mstore\n        /* \"#utility.yul\":5807:5811   */\n      0x24\n        /* \"#utility.yul\":5804:5805   */\n      0x00\n        /* \"#utility.yul\":5797:5812   */\n      revert\n        /* \"#utility.yul\":5824:6105   */\n    tag_387:\n        /* \"#utility.yul\":5907:5934   */\n      tag_508\n        /* \"#utility.yul\":5929:5933   */\n      dup3\n        /* \"#utility.yul\":5907:5934   */\n      tag_376\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":5899:5905   */\n      dup2\n        /* \"#utility.yul\":5895:5935   */\n      add\n        /* \"#utility.yul\":6037:6043   */\n      dup2\n        /* \"#utility.yul\":6025:6035   */\n      dup2\n        /* \"#utility.yul\":6022:6044   */\n      lt\n        /* \"#utility.yul\":6001:6019   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5989:5999   */\n      dup3\n        /* \"#utility.yul\":5986:6020   */\n      gt\n        /* \"#utility.yul\":5983:6045   */\n      or\n        /* \"#utility.yul\":5980:6068   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":6048:6066   */\n      tag_510\n      tag_149\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":5980:6068   */\n    tag_509:\n        /* \"#utility.yul\":6088:6098   */\n      dup1\n        /* \"#utility.yul\":6084:6086   */\n      0x40\n        /* \"#utility.yul\":6077:6099   */\n      mstore\n        /* \"#utility.yul\":5867:6105   */\n      pop\n        /* \"#utility.yul\":5824:6105   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6111:6240   */\n    tag_388:\n        /* \"#utility.yul\":6145:6151   */\n      0x00\n        /* \"#utility.yul\":6172:6192   */\n      tag_512\n      tag_365\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":6162:6192   */\n      swap1\n      pop\n        /* \"#utility.yul\":6201:6234   */\n      tag_513\n        /* \"#utility.yul\":6229:6233   */\n      dup3\n        /* \"#utility.yul\":6221:6227   */\n      dup3\n        /* \"#utility.yul\":6201:6234   */\n      tag_387\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":6111:6240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6246:6584   */\n    tag_389:\n        /* \"#utility.yul\":6350:6354   */\n      0x00\n        /* \"#utility.yul\":6440:6458   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6432:6438   */\n      dup3\n        /* \"#utility.yul\":6429:6459   */\n      gt\n        /* \"#utility.yul\":6426:6482   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":6462:6480   */\n      tag_516\n      tag_149\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6426:6482   */\n    tag_515:\n        /* \"#utility.yul\":6512:6516   */\n      0x20\n        /* \"#utility.yul\":6504:6510   */\n      dup3\n        /* \"#utility.yul\":6500:6517   */\n      mul\n        /* \"#utility.yul\":6492:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6572:6576   */\n      0x20\n        /* \"#utility.yul\":6566:6570   */\n      dup2\n        /* \"#utility.yul\":6562:6577   */\n      add\n        /* \"#utility.yul\":6554:6577   */\n      swap1\n      pop\n        /* \"#utility.yul\":6246:6584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6590:6707   */\n    tag_390:\n        /* \"#utility.yul\":6699:6700   */\n      0x00\n        /* \"#utility.yul\":6696:6697   */\n      dup1\n        /* \"#utility.yul\":6689:6701   */\n      revert\n        /* \"#utility.yul\":6713:6830   */\n    tag_391:\n        /* \"#utility.yul\":6822:6823   */\n      0x00\n        /* \"#utility.yul\":6819:6820   */\n      dup1\n        /* \"#utility.yul\":6812:6824   */\n      revert\n        /* \"#utility.yul\":6836:6953   */\n    tag_392:\n        /* \"#utility.yul\":6945:6946   */\n      0x00\n        /* \"#utility.yul\":6942:6943   */\n      dup1\n        /* \"#utility.yul\":6935:6947   */\n      revert\n        /* \"#utility.yul\":6959:7076   */\n    tag_393:\n        /* \"#utility.yul\":7068:7069   */\n      0x00\n        /* \"#utility.yul\":7065:7066   */\n      dup1\n        /* \"#utility.yul\":7058:7070   */\n      revert\n        /* \"#utility.yul\":7082:7390   */\n    tag_394:\n        /* \"#utility.yul\":7144:7148   */\n      0x00\n        /* \"#utility.yul\":7234:7252   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7226:7232   */\n      dup3\n        /* \"#utility.yul\":7223:7253   */\n      gt\n        /* \"#utility.yul\":7220:7276   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7256:7274   */\n      tag_523\n      tag_149\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":7220:7276   */\n    tag_522:\n        /* \"#utility.yul\":7294:7323   */\n      tag_524\n        /* \"#utility.yul\":7316:7322   */\n      dup3\n        /* \"#utility.yul\":7294:7323   */\n      tag_376\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":7286:7323   */\n      swap1\n      pop\n        /* \"#utility.yul\":7378:7382   */\n      0x20\n        /* \"#utility.yul\":7372:7376   */\n      dup2\n        /* \"#utility.yul\":7368:7383   */\n      add\n        /* \"#utility.yul\":7360:7383   */\n      swap1\n      pop\n        /* \"#utility.yul\":7082:7390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:7542   */\n    tag_395:\n        /* \"#utility.yul\":7493:7499   */\n      dup3\n        /* \"#utility.yul\":7488:7491   */\n      dup2\n        /* \"#utility.yul\":7483:7486   */\n      dup4\n        /* \"#utility.yul\":7470:7500   */\n      calldatacopy\n        /* \"#utility.yul\":7534:7535   */\n      0x00\n        /* \"#utility.yul\":7525:7531   */\n      dup4\n        /* \"#utility.yul\":7520:7523   */\n      dup4\n        /* \"#utility.yul\":7516:7532   */\n      add\n        /* \"#utility.yul\":7509:7536   */\n      mstore\n        /* \"#utility.yul\":7396:7542   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7548:7973   */\n    tag_396:\n        /* \"#utility.yul\":7626:7631   */\n      0x00\n        /* \"#utility.yul\":7651:7717   */\n      tag_527\n        /* \"#utility.yul\":7667:7716   */\n      tag_528\n        /* \"#utility.yul\":7709:7715   */\n      dup5\n        /* \"#utility.yul\":7667:7716   */\n      tag_394\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":7651:7717   */\n      tag_388\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":7642:7717   */\n      swap1\n      pop\n        /* \"#utility.yul\":7740:7746   */\n      dup3\n        /* \"#utility.yul\":7733:7738   */\n      dup2\n        /* \"#utility.yul\":7726:7747   */\n      mstore\n        /* \"#utility.yul\":7778:7782   */\n      0x20\n        /* \"#utility.yul\":7771:7776   */\n      dup2\n        /* \"#utility.yul\":7767:7783   */\n      add\n        /* \"#utility.yul\":7816:7819   */\n      dup5\n        /* \"#utility.yul\":7807:7813   */\n      dup5\n        /* \"#utility.yul\":7802:7805   */\n      dup5\n        /* \"#utility.yul\":7798:7814   */\n      add\n        /* \"#utility.yul\":7795:7820   */\n      gt\n        /* \"#utility.yul\":7792:7904   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":7823:7902   */\n      tag_530\n      tag_393\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":7792:7904   */\n    tag_529:\n        /* \"#utility.yul\":7913:7967   */\n      tag_531\n        /* \"#utility.yul\":7960:7966   */\n      dup5\n        /* \"#utility.yul\":7955:7958   */\n      dup3\n        /* \"#utility.yul\":7950:7953   */\n      dup6\n        /* \"#utility.yul\":7913:7967   */\n      tag_395\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7632:7973   */\n      pop\n        /* \"#utility.yul\":7548:7973   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7993:8333   */\n    tag_397:\n        /* \"#utility.yul\":8049:8054   */\n      0x00\n        /* \"#utility.yul\":8098:8101   */\n      dup3\n        /* \"#utility.yul\":8091:8095   */\n      0x1f\n        /* \"#utility.yul\":8083:8089   */\n      dup4\n        /* \"#utility.yul\":8079:8096   */\n      add\n        /* \"#utility.yul\":8075:8102   */\n      slt\n        /* \"#utility.yul\":8065:8187   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":8106:8185   */\n      tag_534\n      tag_386\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":8065:8187   */\n    tag_533:\n        /* \"#utility.yul\":8223:8229   */\n      dup2\n        /* \"#utility.yul\":8210:8230   */\n      calldataload\n        /* \"#utility.yul\":8248:8327   */\n      tag_535\n        /* \"#utility.yul\":8323:8326   */\n      dup5\n        /* \"#utility.yul\":8315:8321   */\n      dup3\n        /* \"#utility.yul\":8308:8312   */\n      0x20\n        /* \"#utility.yul\":8300:8306   */\n      dup7\n        /* \"#utility.yul\":8296:8313   */\n      add\n        /* \"#utility.yul\":8248:8327   */\n      tag_396\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":8239:8327   */\n      swap2\n      pop\n        /* \"#utility.yul\":8055:8333   */\n      pop\n        /* \"#utility.yul\":7993:8333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8373:9295   */\n    tag_398:\n        /* \"#utility.yul\":8449:8454   */\n      0x00\n        /* \"#utility.yul\":8493:8497   */\n      0x60\n        /* \"#utility.yul\":8481:8490   */\n      dup3\n        /* \"#utility.yul\":8476:8479   */\n      dup5\n        /* \"#utility.yul\":8472:8491   */\n      sub\n        /* \"#utility.yul\":8468:8498   */\n      slt\n        /* \"#utility.yul\":8465:8582   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":8501:8580   */\n      tag_538\n      tag_391\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":8465:8582   */\n    tag_537:\n        /* \"#utility.yul\":8600:8621   */\n      tag_539\n        /* \"#utility.yul\":8616:8620   */\n      0x60\n        /* \"#utility.yul\":8600:8621   */\n      tag_388\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":8591:8621   */\n      swap1\n      pop\n        /* \"#utility.yul\":8683:8684   */\n      0x00\n        /* \"#utility.yul\":8723:8772   */\n      tag_540\n        /* \"#utility.yul\":8768:8771   */\n      dup5\n        /* \"#utility.yul\":8759:8765   */\n      dup3\n        /* \"#utility.yul\":8748:8757   */\n      dup6\n        /* \"#utility.yul\":8744:8766   */\n      add\n        /* \"#utility.yul\":8723:8772   */\n      tag_380\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":8716:8720   */\n      0x00\n        /* \"#utility.yul\":8709:8714   */\n      dup4\n        /* \"#utility.yul\":8705:8721   */\n      add\n        /* \"#utility.yul\":8698:8773   */\n      mstore\n        /* \"#utility.yul\":8631:8784   */\n      pop\n        /* \"#utility.yul\":8848:8850   */\n      0x20\n        /* \"#utility.yul\":8889:8938   */\n      tag_541\n        /* \"#utility.yul\":8934:8937   */\n      dup5\n        /* \"#utility.yul\":8925:8931   */\n      dup3\n        /* \"#utility.yul\":8914:8923   */\n      dup6\n        /* \"#utility.yul\":8910:8932   */\n      add\n        /* \"#utility.yul\":8889:8938   */\n      tag_385\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8882:8886   */\n      0x20\n        /* \"#utility.yul\":8875:8880   */\n      dup4\n        /* \"#utility.yul\":8871:8887   */\n      add\n        /* \"#utility.yul\":8864:8939   */\n      mstore\n        /* \"#utility.yul\":8794:8950   */\n      pop\n        /* \"#utility.yul\":9044:9046   */\n      0x40\n        /* \"#utility.yul\":9033:9042   */\n      dup3\n        /* \"#utility.yul\":9029:9047   */\n      add\n        /* \"#utility.yul\":9016:9048   */\n      calldataload\n        /* \"#utility.yul\":9075:9093   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9067:9073   */\n      dup2\n        /* \"#utility.yul\":9064:9094   */\n      gt\n        /* \"#utility.yul\":9061:9178   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":9097:9176   */\n      tag_543\n      tag_392\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":9061:9178   */\n    tag_542:\n        /* \"#utility.yul\":9217:9276   */\n      tag_544\n        /* \"#utility.yul\":9272:9275   */\n      dup5\n        /* \"#utility.yul\":9263:9269   */\n      dup3\n        /* \"#utility.yul\":9252:9261   */\n      dup6\n        /* \"#utility.yul\":9248:9270   */\n      add\n        /* \"#utility.yul\":9217:9276   */\n      tag_397\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":9210:9214   */\n      0x40\n        /* \"#utility.yul\":9203:9208   */\n      dup4\n        /* \"#utility.yul\":9199:9215   */\n      add\n        /* \"#utility.yul\":9192:9277   */\n      mstore\n        /* \"#utility.yul\":8960:9288   */\n      pop\n        /* \"#utility.yul\":8373:9295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9337:10333   */\n    tag_399:\n        /* \"#utility.yul\":9460:9465   */\n      0x00\n        /* \"#utility.yul\":9485:9593   */\n      tag_546\n        /* \"#utility.yul\":9501:9592   */\n      tag_547\n        /* \"#utility.yul\":9585:9591   */\n      dup5\n        /* \"#utility.yul\":9501:9592   */\n      tag_389\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":9485:9593   */\n      tag_388\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":9476:9593   */\n      swap1\n      pop\n        /* \"#utility.yul\":9613:9618   */\n      dup1\n        /* \"#utility.yul\":9642:9648   */\n      dup4\n        /* \"#utility.yul\":9635:9640   */\n      dup3\n        /* \"#utility.yul\":9628:9649   */\n      mstore\n        /* \"#utility.yul\":9676:9680   */\n      0x20\n        /* \"#utility.yul\":9669:9674   */\n      dup3\n        /* \"#utility.yul\":9665:9681   */\n      add\n        /* \"#utility.yul\":9658:9681   */\n      swap1\n      pop\n        /* \"#utility.yul\":9729:9733   */\n      0x20\n        /* \"#utility.yul\":9721:9727   */\n      dup5\n        /* \"#utility.yul\":9717:9734   */\n      mul\n        /* \"#utility.yul\":9709:9715   */\n      dup4\n        /* \"#utility.yul\":9705:9735   */\n      add\n        /* \"#utility.yul\":9758:9761   */\n      dup6\n        /* \"#utility.yul\":9750:9756   */\n      dup2\n        /* \"#utility.yul\":9747:9762   */\n      gt\n        /* \"#utility.yul\":9744:9866   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":9777:9856   */\n      tag_549\n      tag_390\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":9744:9866   */\n    tag_548:\n        /* \"#utility.yul\":9892:9898   */\n      dup4\n        /* \"#utility.yul\":9875:10327   */\n    tag_550:\n        /* \"#utility.yul\":9909:9915   */\n      dup2\n        /* \"#utility.yul\":9904:9907   */\n      dup2\n        /* \"#utility.yul\":9901:9916   */\n      lt\n        /* \"#utility.yul\":9875:10327   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":9998:10001   */\n      dup1\n        /* \"#utility.yul\":9985:10002   */\n      calldataload\n        /* \"#utility.yul\":10034:10052   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10021:10032   */\n      dup2\n        /* \"#utility.yul\":10018:10053   */\n      gt\n        /* \"#utility.yul\":10015:10137   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":10056:10135   */\n      tag_554\n      tag_386\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":10015:10137   */\n    tag_553:\n        /* \"#utility.yul\":10180:10191   */\n      dup1\n        /* \"#utility.yul\":10172:10178   */\n      dup7\n        /* \"#utility.yul\":10168:10192   */\n      add\n        /* \"#utility.yul\":10218:10282   */\n      tag_555\n        /* \"#utility.yul\":10278:10281   */\n      dup10\n        /* \"#utility.yul\":10266:10276   */\n      dup3\n        /* \"#utility.yul\":10218:10282   */\n      tag_398\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":10213:10216   */\n      dup6\n        /* \"#utility.yul\":10206:10283   */\n      mstore\n        /* \"#utility.yul\":10312:10316   */\n      0x20\n        /* \"#utility.yul\":10307:10310   */\n      dup6\n        /* \"#utility.yul\":10303:10317   */\n      add\n        /* \"#utility.yul\":10296:10317   */\n      swap5\n      pop\n        /* \"#utility.yul\":9951:10327   */\n      pop\n      pop\n        /* \"#utility.yul\":9935:9939   */\n      0x20\n        /* \"#utility.yul\":9930:9933   */\n      dup2\n        /* \"#utility.yul\":9926:9940   */\n      add\n        /* \"#utility.yul\":9919:9940   */\n      swap1\n      pop\n        /* \"#utility.yul\":9875:10327   */\n      jump(tag_550)\n    tag_552:\n        /* \"#utility.yul\":9879:9900   */\n      pop\n        /* \"#utility.yul\":9466:10333   */\n      pop\n      pop\n        /* \"#utility.yul\":9337:10333   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10375:10799   */\n    tag_400:\n        /* \"#utility.yul\":10473:10478   */\n      0x00\n        /* \"#utility.yul\":10522:10525   */\n      dup3\n        /* \"#utility.yul\":10515:10519   */\n      0x1f\n        /* \"#utility.yul\":10507:10513   */\n      dup4\n        /* \"#utility.yul\":10503:10520   */\n      add\n        /* \"#utility.yul\":10499:10526   */\n      slt\n        /* \"#utility.yul\":10489:10611   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":10530:10609   */\n      tag_558\n      tag_386\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":10489:10611   */\n    tag_557:\n        /* \"#utility.yul\":10647:10653   */\n      dup2\n        /* \"#utility.yul\":10634:10654   */\n      calldataload\n        /* \"#utility.yul\":10672:10793   */\n      tag_559\n        /* \"#utility.yul\":10789:10792   */\n      dup5\n        /* \"#utility.yul\":10781:10787   */\n      dup3\n        /* \"#utility.yul\":10774:10778   */\n      0x20\n        /* \"#utility.yul\":10766:10772   */\n      dup7\n        /* \"#utility.yul\":10762:10779   */\n      add\n        /* \"#utility.yul\":10672:10793   */\n      tag_399\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":10663:10793   */\n      swap2\n      pop\n        /* \"#utility.yul\":10479:10799   */\n      pop\n        /* \"#utility.yul\":10375:10799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10805:11398   */\n    tag_56:\n        /* \"#utility.yul\":10916:10922   */\n      0x00\n        /* \"#utility.yul\":10965:10967   */\n      0x20\n        /* \"#utility.yul\":10953:10962   */\n      dup3\n        /* \"#utility.yul\":10944:10951   */\n      dup5\n        /* \"#utility.yul\":10940:10963   */\n      sub\n        /* \"#utility.yul\":10936:10968   */\n      slt\n        /* \"#utility.yul\":10933:11052   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":10971:11050   */\n      tag_562\n      tag_366\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":10933:11052   */\n    tag_561:\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11108:11117   */\n      dup3\n        /* \"#utility.yul\":11104:11121   */\n      add\n        /* \"#utility.yul\":11091:11122   */\n      calldataload\n        /* \"#utility.yul\":11149:11167   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11141:11147   */\n      dup2\n        /* \"#utility.yul\":11138:11168   */\n      gt\n        /* \"#utility.yul\":11135:11252   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":11171:11250   */\n      tag_564\n      tag_367\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":11135:11252   */\n    tag_563:\n        /* \"#utility.yul\":11276:11381   */\n      tag_565\n        /* \"#utility.yul\":11373:11380   */\n      dup5\n        /* \"#utility.yul\":11364:11370   */\n      dup3\n        /* \"#utility.yul\":11353:11362   */\n      dup6\n        /* \"#utility.yul\":11349:11371   */\n      add\n        /* \"#utility.yul\":11276:11381   */\n      tag_400\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11266:11381   */\n      swap2\n      pop\n        /* \"#utility.yul\":11062:11391   */\n      pop\n        /* \"#utility.yul\":10805:11398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11404:11550   */\n    tag_401:\n        /* \"#utility.yul\":11503:11509   */\n      0x00\n        /* \"#utility.yul\":11537:11542   */\n      dup2\n        /* \"#utility.yul\":11531:11543   */\n      mload\n        /* \"#utility.yul\":11521:11543   */\n      swap1\n      pop\n        /* \"#utility.yul\":11404:11550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11556:11772   */\n    tag_402:\n        /* \"#utility.yul\":11687:11698   */\n      0x00\n        /* \"#utility.yul\":11721:11727   */\n      dup3\n        /* \"#utility.yul\":11716:11719   */\n      dup3\n        /* \"#utility.yul\":11709:11728   */\n      mstore\n        /* \"#utility.yul\":11761:11765   */\n      0x20\n        /* \"#utility.yul\":11756:11759   */\n      dup3\n        /* \"#utility.yul\":11752:11766   */\n      add\n        /* \"#utility.yul\":11737:11766   */\n      swap1\n      pop\n        /* \"#utility.yul\":11556:11772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11778:11942   */\n    tag_403:\n        /* \"#utility.yul\":11877:11881   */\n      0x00\n        /* \"#utility.yul\":11900:11903   */\n      dup2\n        /* \"#utility.yul\":11892:11903   */\n      swap1\n      pop\n        /* \"#utility.yul\":11930:11934   */\n      0x20\n        /* \"#utility.yul\":11925:11928   */\n      dup3\n        /* \"#utility.yul\":11921:11935   */\n      add\n        /* \"#utility.yul\":11913:11935   */\n      swap1\n      pop\n        /* \"#utility.yul\":11778:11942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12056   */\n    tag_404:\n        /* \"#utility.yul\":12025:12049   */\n      tag_570\n        /* \"#utility.yul\":12043:12048   */\n      dup2\n        /* \"#utility.yul\":12025:12049   */\n      tag_378\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":12020:12023   */\n      dup3\n        /* \"#utility.yul\":12013:12050   */\n      mstore\n        /* \"#utility.yul\":11948:12056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12136:12653   */\n    tag_405:\n        /* \"#utility.yul\":12287:12291   */\n      0x40\n        /* \"#utility.yul\":12282:12285   */\n      dup3\n        /* \"#utility.yul\":12278:12292   */\n      add\n        /* \"#utility.yul\":12377:12381   */\n      0x00\n        /* \"#utility.yul\":12370:12375   */\n      dup3\n        /* \"#utility.yul\":12366:12382   */\n      add\n        /* \"#utility.yul\":12360:12383   */\n      mload\n        /* \"#utility.yul\":12396:12459   */\n      tag_572\n        /* \"#utility.yul\":12453:12457   */\n      0x00\n        /* \"#utility.yul\":12448:12451   */\n      dup6\n        /* \"#utility.yul\":12444:12458   */\n      add\n        /* \"#utility.yul\":12430:12442   */\n      dup3\n        /* \"#utility.yul\":12396:12459   */\n      tag_404\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":12302:12469   */\n      pop\n        /* \"#utility.yul\":12554:12558   */\n      0x20\n        /* \"#utility.yul\":12547:12552   */\n      dup3\n        /* \"#utility.yul\":12543:12559   */\n      add\n        /* \"#utility.yul\":12537:12560   */\n      mload\n        /* \"#utility.yul\":12573:12636   */\n      tag_573\n        /* \"#utility.yul\":12630:12634   */\n      0x20\n        /* \"#utility.yul\":12625:12628   */\n      dup6\n        /* \"#utility.yul\":12621:12635   */\n      add\n        /* \"#utility.yul\":12607:12619   */\n      dup3\n        /* \"#utility.yul\":12573:12636   */\n      tag_404\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":12479:12646   */\n      pop\n        /* \"#utility.yul\":12256:12653   */\n      pop\n        /* \"#utility.yul\":12136:12653   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12659:12966   */\n    tag_406:\n        /* \"#utility.yul\":12792:12802   */\n      0x00\n        /* \"#utility.yul\":12813:12923   */\n      tag_575\n        /* \"#utility.yul\":12919:12922   */\n      dup4\n        /* \"#utility.yul\":12911:12917   */\n      dup4\n        /* \"#utility.yul\":12813:12923   */\n      tag_405\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":12955:12959   */\n      0x40\n        /* \"#utility.yul\":12950:12953   */\n      dup4\n        /* \"#utility.yul\":12946:12960   */\n      add\n        /* \"#utility.yul\":12932:12960   */\n      swap1\n      pop\n        /* \"#utility.yul\":12659:12966   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12972:13117   */\n    tag_407:\n        /* \"#utility.yul\":13074:13078   */\n      0x00\n        /* \"#utility.yul\":13106:13110   */\n      0x20\n        /* \"#utility.yul\":13101:13104   */\n      dup3\n        /* \"#utility.yul\":13097:13111   */\n      add\n        /* \"#utility.yul\":13089:13111   */\n      swap1\n      pop\n        /* \"#utility.yul\":12972:13117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13201:14189   */\n    tag_408:\n        /* \"#utility.yul\":13384:13387   */\n      0x00\n        /* \"#utility.yul\":13413:13499   */\n      tag_578\n        /* \"#utility.yul\":13493:13498   */\n      dup3\n        /* \"#utility.yul\":13413:13499   */\n      tag_401\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":13515:13633   */\n      tag_579\n        /* \"#utility.yul\":13626:13632   */\n      dup2\n        /* \"#utility.yul\":13621:13624   */\n      dup6\n        /* \"#utility.yul\":13515:13633   */\n      tag_402\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":13508:13633   */\n      swap4\n      pop\n        /* \"#utility.yul\":13657:13745   */\n      tag_580\n        /* \"#utility.yul\":13739:13744   */\n      dup4\n        /* \"#utility.yul\":13657:13745   */\n      tag_403\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":13768:13775   */\n      dup1\n        /* \"#utility.yul\":13799:13800   */\n      0x00\n        /* \"#utility.yul\":13784:14164   */\n    tag_581:\n        /* \"#utility.yul\":13809:13815   */\n      dup4\n        /* \"#utility.yul\":13806:13807   */\n      dup2\n        /* \"#utility.yul\":13803:13816   */\n      lt\n        /* \"#utility.yul\":13784:14164   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":13885:13891   */\n      dup2\n        /* \"#utility.yul\":13879:13892   */\n      mload\n        /* \"#utility.yul\":13912:14039   */\n      tag_584\n        /* \"#utility.yul\":14035:14038   */\n      dup9\n        /* \"#utility.yul\":14020:14033   */\n      dup3\n        /* \"#utility.yul\":13912:14039   */\n      tag_406\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":13905:14039   */\n      swap8\n      pop\n        /* \"#utility.yul\":14062:14154   */\n      tag_585\n        /* \"#utility.yul\":14147:14153   */\n      dup4\n        /* \"#utility.yul\":14062:14154   */\n      tag_407\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":14052:14154   */\n      swap3\n      pop\n        /* \"#utility.yul\":13844:14164   */\n      pop\n        /* \"#utility.yul\":13831:13832   */\n      0x01\n        /* \"#utility.yul\":13828:13829   */\n      dup2\n        /* \"#utility.yul\":13824:13833   */\n      add\n        /* \"#utility.yul\":13819:13833   */\n      swap1\n      pop\n        /* \"#utility.yul\":13784:14164   */\n      jump(tag_581)\n    tag_583:\n        /* \"#utility.yul\":13788:13802   */\n      pop\n        /* \"#utility.yul\":14180:14183   */\n      dup6\n        /* \"#utility.yul\":14173:14183   */\n      swap4\n      pop\n        /* \"#utility.yul\":13389:14189   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13201:14189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14195:14696   */\n    tag_59:\n        /* \"#utility.yul\":14402:14406   */\n      0x00\n        /* \"#utility.yul\":14440:14442   */\n      0x20\n        /* \"#utility.yul\":14429:14438   */\n      dup3\n        /* \"#utility.yul\":14425:14443   */\n      add\n        /* \"#utility.yul\":14417:14443   */\n      swap1\n      pop\n        /* \"#utility.yul\":14489:14498   */\n      dup2\n        /* \"#utility.yul\":14483:14487   */\n      dup2\n        /* \"#utility.yul\":14479:14499   */\n      sub\n        /* \"#utility.yul\":14475:14476   */\n      0x00\n        /* \"#utility.yul\":14464:14473   */\n      dup4\n        /* \"#utility.yul\":14460:14477   */\n      add\n        /* \"#utility.yul\":14453:14500   */\n      mstore\n        /* \"#utility.yul\":14517:14689   */\n      tag_587\n        /* \"#utility.yul\":14684:14688   */\n      dup2\n        /* \"#utility.yul\":14675:14681   */\n      dup5\n        /* \"#utility.yul\":14517:14689   */\n      tag_408\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":14509:14689   */\n      swap1\n      pop\n        /* \"#utility.yul\":14195:14696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14702:15031   */\n    tag_66:\n        /* \"#utility.yul\":14761:14767   */\n      0x00\n        /* \"#utility.yul\":14810:14812   */\n      0x20\n        /* \"#utility.yul\":14798:14807   */\n      dup3\n        /* \"#utility.yul\":14789:14796   */\n      dup5\n        /* \"#utility.yul\":14785:14808   */\n      sub\n        /* \"#utility.yul\":14781:14813   */\n      slt\n        /* \"#utility.yul\":14778:14897   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":14816:14895   */\n      tag_590\n      tag_366\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":14778:14897   */\n    tag_589:\n        /* \"#utility.yul\":14936:14937   */\n      0x00\n        /* \"#utility.yul\":14961:15014   */\n      tag_591\n        /* \"#utility.yul\":15006:15013   */\n      dup5\n        /* \"#utility.yul\":14997:15003   */\n      dup3\n        /* \"#utility.yul\":14986:14995   */\n      dup6\n        /* \"#utility.yul\":14982:15004   */\n      add\n        /* \"#utility.yul\":14961:15014   */\n      tag_385\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":14951:15014   */\n      swap2\n      pop\n        /* \"#utility.yul\":14907:15024   */\n      pop\n        /* \"#utility.yul\":14702:15031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15037:15155   */\n    tag_409:\n        /* \"#utility.yul\":15124:15148   */\n      tag_593\n        /* \"#utility.yul\":15142:15147   */\n      dup2\n        /* \"#utility.yul\":15124:15148   */\n      tag_378\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":15119:15122   */\n      dup3\n        /* \"#utility.yul\":15112:15149   */\n      mstore\n        /* \"#utility.yul\":15037:15155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15161:15383   */\n    tag_69:\n        /* \"#utility.yul\":15254:15258   */\n      0x00\n        /* \"#utility.yul\":15292:15294   */\n      0x20\n        /* \"#utility.yul\":15281:15290   */\n      dup3\n        /* \"#utility.yul\":15277:15295   */\n      add\n        /* \"#utility.yul\":15269:15295   */\n      swap1\n      pop\n        /* \"#utility.yul\":15305:15376   */\n      tag_595\n        /* \"#utility.yul\":15373:15374   */\n      0x00\n        /* \"#utility.yul\":15362:15371   */\n      dup4\n        /* \"#utility.yul\":15358:15375   */\n      add\n        /* \"#utility.yul\":15349:15355   */\n      dup5\n        /* \"#utility.yul\":15305:15376   */\n      tag_409\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":15161:15383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15389:15505   */\n    tag_410:\n        /* \"#utility.yul\":15459:15480   */\n      tag_597\n        /* \"#utility.yul\":15474:15479   */\n      dup2\n        /* \"#utility.yul\":15459:15480   */\n      tag_371\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":15452:15457   */\n      dup2\n        /* \"#utility.yul\":15449:15481   */\n      eq\n        /* \"#utility.yul\":15439:15499   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":15495:15496   */\n      0x00\n        /* \"#utility.yul\":15492:15493   */\n      dup1\n        /* \"#utility.yul\":15485:15497   */\n      revert\n        /* \"#utility.yul\":15439:15499   */\n    tag_598:\n        /* \"#utility.yul\":15389:15505   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15511:15644   */\n    tag_411:\n        /* \"#utility.yul\":15554:15559   */\n      0x00\n        /* \"#utility.yul\":15592:15598   */\n      dup2\n        /* \"#utility.yul\":15579:15599   */\n      calldataload\n        /* \"#utility.yul\":15570:15599   */\n      swap1\n      pop\n        /* \"#utility.yul\":15608:15638   */\n      tag_600\n        /* \"#utility.yul\":15632:15637   */\n      dup2\n        /* \"#utility.yul\":15608:15638   */\n      tag_410\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":15511:15644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15650:16118   */\n    tag_90:\n        /* \"#utility.yul\":15715:15721   */\n      0x00\n        /* \"#utility.yul\":15723:15729   */\n      dup1\n        /* \"#utility.yul\":15772:15774   */\n      0x40\n        /* \"#utility.yul\":15760:15769   */\n      dup4\n        /* \"#utility.yul\":15751:15758   */\n      dup6\n        /* \"#utility.yul\":15747:15770   */\n      sub\n        /* \"#utility.yul\":15743:15775   */\n      slt\n        /* \"#utility.yul\":15740:15859   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":15778:15857   */\n      tag_603\n      tag_366\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":15740:15859   */\n    tag_602:\n        /* \"#utility.yul\":15898:15899   */\n      0x00\n        /* \"#utility.yul\":15923:15976   */\n      tag_604\n        /* \"#utility.yul\":15968:15975   */\n      dup6\n        /* \"#utility.yul\":15959:15965   */\n      dup3\n        /* \"#utility.yul\":15948:15957   */\n      dup7\n        /* \"#utility.yul\":15944:15966   */\n      add\n        /* \"#utility.yul\":15923:15976   */\n      tag_385\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":15913:15976   */\n      swap3\n      pop\n        /* \"#utility.yul\":15869:15986   */\n      pop\n        /* \"#utility.yul\":16025:16027   */\n      0x20\n        /* \"#utility.yul\":16051:16101   */\n      tag_605\n        /* \"#utility.yul\":16093:16100   */\n      dup6\n        /* \"#utility.yul\":16084:16090   */\n      dup3\n        /* \"#utility.yul\":16073:16082   */\n      dup7\n        /* \"#utility.yul\":16069:16091   */\n      add\n        /* \"#utility.yul\":16051:16101   */\n      tag_411\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":16041:16101   */\n      swap2\n      pop\n        /* \"#utility.yul\":15996:16111   */\n      pop\n        /* \"#utility.yul\":15650:16118   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16124:16431   */\n    tag_412:\n        /* \"#utility.yul\":16185:16189   */\n      0x00\n        /* \"#utility.yul\":16275:16293   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16267:16273   */\n      dup3\n        /* \"#utility.yul\":16264:16294   */\n      gt\n        /* \"#utility.yul\":16261:16317   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":16297:16315   */\n      tag_608\n      tag_149\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":16261:16317   */\n    tag_607:\n        /* \"#utility.yul\":16335:16364   */\n      tag_609\n        /* \"#utility.yul\":16357:16363   */\n      dup3\n        /* \"#utility.yul\":16335:16364   */\n      tag_376\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":16327:16364   */\n      swap1\n      pop\n        /* \"#utility.yul\":16419:16423   */\n      0x20\n        /* \"#utility.yul\":16413:16417   */\n      dup2\n        /* \"#utility.yul\":16409:16424   */\n      add\n        /* \"#utility.yul\":16401:16424   */\n      swap1\n      pop\n        /* \"#utility.yul\":16124:16431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16437:16860   */\n    tag_413:\n        /* \"#utility.yul\":16514:16519   */\n      0x00\n        /* \"#utility.yul\":16539:16604   */\n      tag_611\n        /* \"#utility.yul\":16555:16603   */\n      tag_612\n        /* \"#utility.yul\":16596:16602   */\n      dup5\n        /* \"#utility.yul\":16555:16603   */\n      tag_412\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":16539:16604   */\n      tag_388\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":16530:16604   */\n      swap1\n      pop\n        /* \"#utility.yul\":16627:16633   */\n      dup3\n        /* \"#utility.yul\":16620:16625   */\n      dup2\n        /* \"#utility.yul\":16613:16634   */\n      mstore\n        /* \"#utility.yul\":16665:16669   */\n      0x20\n        /* \"#utility.yul\":16658:16663   */\n      dup2\n        /* \"#utility.yul\":16654:16670   */\n      add\n        /* \"#utility.yul\":16703:16706   */\n      dup5\n        /* \"#utility.yul\":16694:16700   */\n      dup5\n        /* \"#utility.yul\":16689:16692   */\n      dup5\n        /* \"#utility.yul\":16685:16701   */\n      add\n        /* \"#utility.yul\":16682:16707   */\n      gt\n        /* \"#utility.yul\":16679:16791   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":16710:16789   */\n      tag_614\n      tag_393\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":16679:16791   */\n    tag_613:\n        /* \"#utility.yul\":16800:16854   */\n      tag_615\n        /* \"#utility.yul\":16847:16853   */\n      dup5\n        /* \"#utility.yul\":16842:16845   */\n      dup3\n        /* \"#utility.yul\":16837:16840   */\n      dup6\n        /* \"#utility.yul\":16800:16854   */\n      tag_395\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":16520:16860   */\n      pop\n        /* \"#utility.yul\":16437:16860   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16879:17217   */\n    tag_414:\n        /* \"#utility.yul\":16934:16939   */\n      0x00\n        /* \"#utility.yul\":16983:16986   */\n      dup3\n        /* \"#utility.yul\":16976:16980   */\n      0x1f\n        /* \"#utility.yul\":16968:16974   */\n      dup4\n        /* \"#utility.yul\":16964:16981   */\n      add\n        /* \"#utility.yul\":16960:16987   */\n      slt\n        /* \"#utility.yul\":16950:17072   */\n      tag_617\n      jumpi\n        /* \"#utility.yul\":16991:17070   */\n      tag_618\n      tag_386\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":16950:17072   */\n    tag_617:\n        /* \"#utility.yul\":17108:17114   */\n      dup2\n        /* \"#utility.yul\":17095:17115   */\n      calldataload\n        /* \"#utility.yul\":17133:17211   */\n      tag_619\n        /* \"#utility.yul\":17207:17210   */\n      dup5\n        /* \"#utility.yul\":17199:17205   */\n      dup3\n        /* \"#utility.yul\":17192:17196   */\n      0x20\n        /* \"#utility.yul\":17184:17190   */\n      dup7\n        /* \"#utility.yul\":17180:17197   */\n      add\n        /* \"#utility.yul\":17133:17211   */\n      tag_413\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":17124:17211   */\n      swap2\n      pop\n        /* \"#utility.yul\":16940:17217   */\n      pop\n        /* \"#utility.yul\":16879:17217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17223:18166   */\n    tag_94:\n        /* \"#utility.yul\":17318:17324   */\n      0x00\n        /* \"#utility.yul\":17326:17332   */\n      dup1\n        /* \"#utility.yul\":17334:17340   */\n      0x00\n        /* \"#utility.yul\":17342:17348   */\n      dup1\n        /* \"#utility.yul\":17391:17394   */\n      0x80\n        /* \"#utility.yul\":17379:17388   */\n      dup6\n        /* \"#utility.yul\":17370:17377   */\n      dup8\n        /* \"#utility.yul\":17366:17389   */\n      sub\n        /* \"#utility.yul\":17362:17395   */\n      slt\n        /* \"#utility.yul\":17359:17479   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":17398:17477   */\n      tag_622\n      tag_366\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":17359:17479   */\n    tag_621:\n        /* \"#utility.yul\":17518:17519   */\n      0x00\n        /* \"#utility.yul\":17543:17596   */\n      tag_623\n        /* \"#utility.yul\":17588:17595   */\n      dup8\n        /* \"#utility.yul\":17579:17585   */\n      dup3\n        /* \"#utility.yul\":17568:17577   */\n      dup9\n        /* \"#utility.yul\":17564:17586   */\n      add\n        /* \"#utility.yul\":17543:17596   */\n      tag_385\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":17533:17596   */\n      swap5\n      pop\n        /* \"#utility.yul\":17489:17606   */\n      pop\n        /* \"#utility.yul\":17645:17647   */\n      0x20\n        /* \"#utility.yul\":17671:17724   */\n      tag_624\n        /* \"#utility.yul\":17716:17723   */\n      dup8\n        /* \"#utility.yul\":17707:17713   */\n      dup3\n        /* \"#utility.yul\":17696:17705   */\n      dup9\n        /* \"#utility.yul\":17692:17714   */\n      add\n        /* \"#utility.yul\":17671:17724   */\n      tag_385\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":17661:17724   */\n      swap4\n      pop\n        /* \"#utility.yul\":17616:17734   */\n      pop\n        /* \"#utility.yul\":17773:17775   */\n      0x40\n        /* \"#utility.yul\":17799:17852   */\n      tag_625\n        /* \"#utility.yul\":17844:17851   */\n      dup8\n        /* \"#utility.yul\":17835:17841   */\n      dup3\n        /* \"#utility.yul\":17824:17833   */\n      dup9\n        /* \"#utility.yul\":17820:17842   */\n      add\n        /* \"#utility.yul\":17799:17852   */\n      tag_380\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":17789:17852   */\n      swap3\n      pop\n        /* \"#utility.yul\":17744:17862   */\n      pop\n        /* \"#utility.yul\":17929:17931   */\n      0x60\n        /* \"#utility.yul\":17918:17927   */\n      dup6\n        /* \"#utility.yul\":17914:17932   */\n      add\n        /* \"#utility.yul\":17901:17933   */\n      calldataload\n        /* \"#utility.yul\":17960:17978   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17952:17958   */\n      dup2\n        /* \"#utility.yul\":17949:17979   */\n      gt\n        /* \"#utility.yul\":17946:18063   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":17982:18061   */\n      tag_627\n      tag_367\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":17946:18063   */\n    tag_626:\n        /* \"#utility.yul\":18087:18149   */\n      tag_628\n        /* \"#utility.yul\":18141:18148   */\n      dup8\n        /* \"#utility.yul\":18132:18138   */\n      dup3\n        /* \"#utility.yul\":18121:18130   */\n      dup9\n        /* \"#utility.yul\":18117:18139   */\n      add\n        /* \"#utility.yul\":18087:18149   */\n      tag_414\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":18077:18149   */\n      swap2\n      pop\n        /* \"#utility.yul\":17872:18159   */\n      pop\n        /* \"#utility.yul\":17223:18166   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18172:18646   */\n    tag_105:\n        /* \"#utility.yul\":18240:18246   */\n      0x00\n        /* \"#utility.yul\":18248:18254   */\n      dup1\n        /* \"#utility.yul\":18297:18299   */\n      0x40\n        /* \"#utility.yul\":18285:18294   */\n      dup4\n        /* \"#utility.yul\":18276:18283   */\n      dup6\n        /* \"#utility.yul\":18272:18295   */\n      sub\n        /* \"#utility.yul\":18268:18300   */\n      slt\n        /* \"#utility.yul\":18265:18384   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":18303:18382   */\n      tag_631\n      tag_366\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":18265:18384   */\n    tag_630:\n        /* \"#utility.yul\":18423:18424   */\n      0x00\n        /* \"#utility.yul\":18448:18501   */\n      tag_632\n        /* \"#utility.yul\":18493:18500   */\n      dup6\n        /* \"#utility.yul\":18484:18490   */\n      dup3\n        /* \"#utility.yul\":18473:18482   */\n      dup7\n        /* \"#utility.yul\":18469:18491   */\n      add\n        /* \"#utility.yul\":18448:18501   */\n      tag_385\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":18438:18501   */\n      swap3\n      pop\n        /* \"#utility.yul\":18394:18511   */\n      pop\n        /* \"#utility.yul\":18550:18552   */\n      0x20\n        /* \"#utility.yul\":18576:18629   */\n      tag_633\n        /* \"#utility.yul\":18621:18628   */\n      dup6\n        /* \"#utility.yul\":18612:18618   */\n      dup3\n        /* \"#utility.yul\":18601:18610   */\n      dup7\n        /* \"#utility.yul\":18597:18619   */\n      add\n        /* \"#utility.yul\":18576:18629   */\n      tag_385\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":18566:18629   */\n      swap2\n      pop\n        /* \"#utility.yul\":18521:18639   */\n      pop\n        /* \"#utility.yul\":18172:18646   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18652:18832   */\n    tag_415:\n        /* \"#utility.yul\":18700:18777   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18697:18698   */\n      0x00\n        /* \"#utility.yul\":18690:18778   */\n      mstore\n        /* \"#utility.yul\":18797:18801   */\n      0x22\n        /* \"#utility.yul\":18794:18795   */\n      0x04\n        /* \"#utility.yul\":18787:18802   */\n      mstore\n        /* \"#utility.yul\":18821:18825   */\n      0x24\n        /* \"#utility.yul\":18818:18819   */\n      0x00\n        /* \"#utility.yul\":18811:18826   */\n      revert\n        /* \"#utility.yul\":18838:19158   */\n    tag_117:\n        /* \"#utility.yul\":18882:18888   */\n      0x00\n        /* \"#utility.yul\":18919:18920   */\n      0x02\n        /* \"#utility.yul\":18913:18917   */\n      dup3\n        /* \"#utility.yul\":18909:18921   */\n      div\n        /* \"#utility.yul\":18899:18921   */\n      swap1\n      pop\n        /* \"#utility.yul\":18966:18967   */\n      0x01\n        /* \"#utility.yul\":18960:18964   */\n      dup3\n        /* \"#utility.yul\":18956:18968   */\n      and\n        /* \"#utility.yul\":18987:19005   */\n      dup1\n        /* \"#utility.yul\":18977:19058   */\n      tag_636\n      jumpi\n        /* \"#utility.yul\":19043:19047   */\n      0x7f\n        /* \"#utility.yul\":19035:19041   */\n      dup3\n        /* \"#utility.yul\":19031:19048   */\n      and\n        /* \"#utility.yul\":19021:19048   */\n      swap2\n      pop\n        /* \"#utility.yul\":18977:19058   */\n    tag_636:\n        /* \"#utility.yul\":19105:19107   */\n      0x20\n        /* \"#utility.yul\":19097:19103   */\n      dup3\n        /* \"#utility.yul\":19094:19108   */\n      lt\n        /* \"#utility.yul\":19074:19092   */\n      dup2\n        /* \"#utility.yul\":19071:19109   */\n      sub\n        /* \"#utility.yul\":19068:19152   */\n      tag_637\n      jumpi\n        /* \"#utility.yul\":19124:19142   */\n      tag_638\n      tag_415\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":19068:19152   */\n    tag_637:\n        /* \"#utility.yul\":18889:19158   */\n      pop\n        /* \"#utility.yul\":18838:19158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19164:19606   */\n    tag_140:\n        /* \"#utility.yul\":19313:19317   */\n      0x00\n        /* \"#utility.yul\":19351:19353   */\n      0x60\n        /* \"#utility.yul\":19340:19349   */\n      dup3\n        /* \"#utility.yul\":19336:19354   */\n      add\n        /* \"#utility.yul\":19328:19354   */\n      swap1\n      pop\n        /* \"#utility.yul\":19364:19435   */\n      tag_640\n        /* \"#utility.yul\":19432:19433   */\n      0x00\n        /* \"#utility.yul\":19421:19430   */\n      dup4\n        /* \"#utility.yul\":19417:19434   */\n      add\n        /* \"#utility.yul\":19408:19414   */\n      dup7\n        /* \"#utility.yul\":19364:19435   */\n      tag_383\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":19445:19517   */\n      tag_641\n        /* \"#utility.yul\":19513:19515   */\n      0x20\n        /* \"#utility.yul\":19502:19511   */\n      dup4\n        /* \"#utility.yul\":19498:19516   */\n      add\n        /* \"#utility.yul\":19489:19495   */\n      dup6\n        /* \"#utility.yul\":19445:19517   */\n      tag_409\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":19527:19599   */\n      tag_642\n        /* \"#utility.yul\":19595:19597   */\n      0x40\n        /* \"#utility.yul\":19584:19593   */\n      dup4\n        /* \"#utility.yul\":19580:19598   */\n      add\n        /* \"#utility.yul\":19571:19577   */\n      dup5\n        /* \"#utility.yul\":19527:19599   */\n      tag_383\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":19164:19606   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19612:19842   */\n    tag_416:\n        /* \"#utility.yul\":19752:19786   */\n      0x4e6569746865722073656e646572206e6f7220726563697069656e7420697320\n        /* \"#utility.yul\":19748:19749   */\n      0x00\n        /* \"#utility.yul\":19740:19746   */\n      dup3\n        /* \"#utility.yul\":19736:19750   */\n      add\n        /* \"#utility.yul\":19729:19787   */\n      mstore\n        /* \"#utility.yul\":19821:19834   */\n      0x77686974656c6973746564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19816:19818   */\n      0x20\n        /* \"#utility.yul\":19808:19814   */\n      dup3\n        /* \"#utility.yul\":19804:19819   */\n      add\n        /* \"#utility.yul\":19797:19835   */\n      mstore\n        /* \"#utility.yul\":19612:19842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19848:20214   */\n    tag_417:\n        /* \"#utility.yul\":19990:19993   */\n      0x00\n        /* \"#utility.yul\":20011:20078   */\n      tag_645\n        /* \"#utility.yul\":20075:20077   */\n      0x2b\n        /* \"#utility.yul\":20070:20073   */\n      dup4\n        /* \"#utility.yul\":20011:20078   */\n      tag_374\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":20004:20078   */\n      swap2\n      pop\n        /* \"#utility.yul\":20087:20180   */\n      tag_646\n        /* \"#utility.yul\":20176:20179   */\n      dup3\n        /* \"#utility.yul\":20087:20180   */\n      tag_416\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":20205:20207   */\n      0x40\n        /* \"#utility.yul\":20200:20203   */\n      dup3\n        /* \"#utility.yul\":20196:20208   */\n      add\n        /* \"#utility.yul\":20189:20208   */\n      swap1\n      pop\n        /* \"#utility.yul\":19848:20214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20220:20639   */\n    tag_146:\n        /* \"#utility.yul\":20386:20390   */\n      0x00\n        /* \"#utility.yul\":20424:20426   */\n      0x20\n        /* \"#utility.yul\":20413:20422   */\n      dup3\n        /* \"#utility.yul\":20409:20427   */\n      add\n        /* \"#utility.yul\":20401:20427   */\n      swap1\n      pop\n        /* \"#utility.yul\":20473:20482   */\n      dup2\n        /* \"#utility.yul\":20467:20471   */\n      dup2\n        /* \"#utility.yul\":20463:20483   */\n      sub\n        /* \"#utility.yul\":20459:20460   */\n      0x00\n        /* \"#utility.yul\":20448:20457   */\n      dup4\n        /* \"#utility.yul\":20444:20461   */\n      add\n        /* \"#utility.yul\":20437:20484   */\n      mstore\n        /* \"#utility.yul\":20501:20632   */\n      tag_648\n        /* \"#utility.yul\":20627:20631   */\n      dup2\n        /* \"#utility.yul\":20501:20632   */\n      tag_417\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":20493:20632   */\n      swap1\n      pop\n        /* \"#utility.yul\":20220:20639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20645:20825   */\n    tag_164:\n        /* \"#utility.yul\":20693:20770   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20690:20691   */\n      0x00\n        /* \"#utility.yul\":20683:20771   */\n      mstore\n        /* \"#utility.yul\":20790:20794   */\n      0x32\n        /* \"#utility.yul\":20787:20788   */\n      0x04\n        /* \"#utility.yul\":20780:20795   */\n      mstore\n        /* \"#utility.yul\":20814:20818   */\n      0x24\n        /* \"#utility.yul\":20811:20812   */\n      0x00\n        /* \"#utility.yul\":20804:20819   */\n      revert\n        /* \"#utility.yul\":20831:21273   */\n    tag_179:\n        /* \"#utility.yul\":20980:20984   */\n      0x00\n        /* \"#utility.yul\":21018:21020   */\n      0x60\n        /* \"#utility.yul\":21007:21016   */\n      dup3\n        /* \"#utility.yul\":21003:21021   */\n      add\n        /* \"#utility.yul\":20995:21021   */\n      swap1\n      pop\n        /* \"#utility.yul\":21031:21102   */\n      tag_651\n        /* \"#utility.yul\":21099:21100   */\n      0x00\n        /* \"#utility.yul\":21088:21097   */\n      dup4\n        /* \"#utility.yul\":21084:21101   */\n      add\n        /* \"#utility.yul\":21075:21081   */\n      dup7\n        /* \"#utility.yul\":21031:21102   */\n      tag_409\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":21112:21184   */\n      tag_652\n        /* \"#utility.yul\":21180:21182   */\n      0x20\n        /* \"#utility.yul\":21169:21178   */\n      dup4\n        /* \"#utility.yul\":21165:21183   */\n      add\n        /* \"#utility.yul\":21156:21162   */\n      dup6\n        /* \"#utility.yul\":21112:21184   */\n      tag_409\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":21194:21266   */\n      tag_653\n        /* \"#utility.yul\":21262:21264   */\n      0x40\n        /* \"#utility.yul\":21251:21260   */\n      dup4\n        /* \"#utility.yul\":21247:21265   */\n      add\n        /* \"#utility.yul\":21238:21244   */\n      dup5\n        /* \"#utility.yul\":21194:21266   */\n      tag_383\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":20831:21273   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21279:21427   */\n    tag_418:\n        /* \"#utility.yul\":21381:21392   */\n      0x00\n        /* \"#utility.yul\":21418:21421   */\n      dup2\n        /* \"#utility.yul\":21403:21421   */\n      swap1\n      pop\n        /* \"#utility.yul\":21279:21427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21433:21823   */\n    tag_419:\n        /* \"#utility.yul\":21539:21542   */\n      0x00\n        /* \"#utility.yul\":21567:21606   */\n      tag_656\n        /* \"#utility.yul\":21600:21605   */\n      dup3\n        /* \"#utility.yul\":21567:21606   */\n      tag_373\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":21622:21711   */\n      tag_657\n        /* \"#utility.yul\":21704:21710   */\n      dup2\n        /* \"#utility.yul\":21699:21702   */\n      dup6\n        /* \"#utility.yul\":21622:21711   */\n      tag_418\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":21615:21711   */\n      swap4\n      pop\n        /* \"#utility.yul\":21720:21785   */\n      tag_658\n        /* \"#utility.yul\":21778:21784   */\n      dup2\n        /* \"#utility.yul\":21773:21776   */\n      dup6\n        /* \"#utility.yul\":21766:21770   */\n      0x20\n        /* \"#utility.yul\":21759:21764   */\n      dup7\n        /* \"#utility.yul\":21755:21771   */\n      add\n        /* \"#utility.yul\":21720:21785   */\n      tag_375\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":21810:21816   */\n      dup1\n        /* \"#utility.yul\":21805:21808   */\n      dup5\n        /* \"#utility.yul\":21801:21817   */\n      add\n        /* \"#utility.yul\":21794:21817   */\n      swap2\n      pop\n        /* \"#utility.yul\":21543:21823   */\n      pop\n        /* \"#utility.yul\":21433:21823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21829:22264   */\n    tag_220:\n        /* \"#utility.yul\":22009:22012   */\n      0x00\n        /* \"#utility.yul\":22031:22126   */\n      tag_660\n        /* \"#utility.yul\":22122:22125   */\n      dup3\n        /* \"#utility.yul\":22113:22119   */\n      dup6\n        /* \"#utility.yul\":22031:22126   */\n      tag_419\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":22024:22126   */\n      swap2\n      pop\n        /* \"#utility.yul\":22143:22238   */\n      tag_661\n        /* \"#utility.yul\":22234:22237   */\n      dup3\n        /* \"#utility.yul\":22225:22231   */\n      dup5\n        /* \"#utility.yul\":22143:22238   */\n      tag_419\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":22136:22238   */\n      swap2\n      pop\n        /* \"#utility.yul\":22255:22258   */\n      dup2\n        /* \"#utility.yul\":22248:22258   */\n      swap1\n      pop\n        /* \"#utility.yul\":21829:22264   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22270:22411   */\n    tag_420:\n        /* \"#utility.yul\":22319:22323   */\n      0x00\n        /* \"#utility.yul\":22342:22345   */\n      dup2\n        /* \"#utility.yul\":22334:22345   */\n      swap1\n      pop\n        /* \"#utility.yul\":22365:22368   */\n      dup2\n        /* \"#utility.yul\":22362:22363   */\n      0x00\n        /* \"#utility.yul\":22355:22369   */\n      mstore\n        /* \"#utility.yul\":22399:22403   */\n      0x20\n        /* \"#utility.yul\":22396:22397   */\n      0x00\n        /* \"#utility.yul\":22386:22404   */\n      keccak256\n        /* \"#utility.yul\":22378:22404   */\n      swap1\n      pop\n        /* \"#utility.yul\":22270:22411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22417:22510   */\n    tag_421:\n        /* \"#utility.yul\":22454:22460   */\n      0x00\n        /* \"#utility.yul\":22501:22503   */\n      0x20\n        /* \"#utility.yul\":22496:22498   */\n      0x1f\n        /* \"#utility.yul\":22489:22494   */\n      dup4\n        /* \"#utility.yul\":22485:22499   */\n      add\n        /* \"#utility.yul\":22481:22504   */\n      div\n        /* \"#utility.yul\":22471:22504   */\n      swap1\n      pop\n        /* \"#utility.yul\":22417:22510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22516:22623   */\n    tag_422:\n        /* \"#utility.yul\":22560:22568   */\n      0x00\n        /* \"#utility.yul\":22610:22615   */\n      dup3\n        /* \"#utility.yul\":22604:22608   */\n      dup3\n        /* \"#utility.yul\":22600:22616   */\n      shl\n        /* \"#utility.yul\":22579:22616   */\n      swap1\n      pop\n        /* \"#utility.yul\":22516:22623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22629:23022   */\n    tag_423:\n        /* \"#utility.yul\":22698:22704   */\n      0x00\n        /* \"#utility.yul\":22748:22749   */\n      0x08\n        /* \"#utility.yul\":22736:22746   */\n      dup4\n        /* \"#utility.yul\":22732:22750   */\n      mul\n        /* \"#utility.yul\":22771:22868   */\n      tag_666\n        /* \"#utility.yul\":22801:22867   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22790:22799   */\n      dup3\n        /* \"#utility.yul\":22771:22868   */\n      tag_422\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":22889:22928   */\n      tag_667\n        /* \"#utility.yul\":22919:22927   */\n      dup7\n        /* \"#utility.yul\":22908:22917   */\n      dup4\n        /* \"#utility.yul\":22889:22928   */\n      tag_422\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":22877:22928   */\n      swap6\n      pop\n        /* \"#utility.yul\":22961:22965   */\n      dup1\n        /* \"#utility.yul\":22957:22966   */\n      not\n        /* \"#utility.yul\":22950:22955   */\n      dup5\n        /* \"#utility.yul\":22946:22967   */\n      and\n        /* \"#utility.yul\":22937:22967   */\n      swap4\n      pop\n        /* \"#utility.yul\":23010:23014   */\n      dup1\n        /* \"#utility.yul\":23000:23008   */\n      dup7\n        /* \"#utility.yul\":22996:23015   */\n      and\n        /* \"#utility.yul\":22989:22994   */\n      dup5\n        /* \"#utility.yul\":22986:23016   */\n      or\n        /* \"#utility.yul\":22976:23016   */\n      swap3\n      pop\n        /* \"#utility.yul\":22705:23022   */\n      pop\n      pop\n        /* \"#utility.yul\":22629:23022   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23028:23088   */\n    tag_424:\n        /* \"#utility.yul\":23056:23059   */\n      0x00\n        /* \"#utility.yul\":23077:23082   */\n      dup2\n        /* \"#utility.yul\":23070:23082   */\n      swap1\n      pop\n        /* \"#utility.yul\":23028:23088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23094:23236   */\n    tag_425:\n        /* \"#utility.yul\":23144:23153   */\n      0x00\n        /* \"#utility.yul\":23177:23230   */\n      tag_670\n        /* \"#utility.yul\":23195:23229   */\n      tag_671\n        /* \"#utility.yul\":23204:23228   */\n      tag_672\n        /* \"#utility.yul\":23222:23227   */\n      dup5\n        /* \"#utility.yul\":23204:23228   */\n      tag_378\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":23195:23229   */\n      tag_424\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":23177:23230   */\n      tag_378\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":23164:23230   */\n      swap1\n      pop\n        /* \"#utility.yul\":23094:23236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23242:23317   */\n    tag_426:\n        /* \"#utility.yul\":23285:23288   */\n      0x00\n        /* \"#utility.yul\":23306:23311   */\n      dup2\n        /* \"#utility.yul\":23299:23311   */\n      swap1\n      pop\n        /* \"#utility.yul\":23242:23317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23323:23592   */\n    tag_427:\n        /* \"#utility.yul\":23433:23472   */\n      tag_675\n        /* \"#utility.yul\":23464:23471   */\n      dup4\n        /* \"#utility.yul\":23433:23472   */\n      tag_425\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":23494:23585   */\n      tag_676\n        /* \"#utility.yul\":23543:23584   */\n      tag_677\n        /* \"#utility.yul\":23567:23583   */\n      dup3\n        /* \"#utility.yul\":23543:23584   */\n      tag_426\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":23535:23541   */\n      dup5\n        /* \"#utility.yul\":23528:23532   */\n      dup5\n        /* \"#utility.yul\":23522:23533   */\n      sload\n        /* \"#utility.yul\":23494:23585   */\n      tag_423\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":23488:23492   */\n      dup3\n        /* \"#utility.yul\":23481:23586   */\n      sstore\n        /* \"#utility.yul\":23399:23592   */\n      pop\n        /* \"#utility.yul\":23323:23592   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23598:23671   */\n    tag_428:\n        /* \"#utility.yul\":23643:23646   */\n      0x00\n        /* \"#utility.yul\":23598:23671   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23677:23866   */\n    tag_429:\n        /* \"#utility.yul\":23754:23786   */\n      tag_680\n      tag_428\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":23795:23860   */\n      tag_681\n        /* \"#utility.yul\":23853:23859   */\n      dup2\n        /* \"#utility.yul\":23845:23851   */\n      dup5\n        /* \"#utility.yul\":23839:23843   */\n      dup5\n        /* \"#utility.yul\":23795:23860   */\n      tag_427\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":23730:23866   */\n      pop\n        /* \"#utility.yul\":23677:23866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23872:24058   */\n    tag_430:\n        /* \"#utility.yul\":23932:24052   */\n    tag_683:\n        /* \"#utility.yul\":23949:23952   */\n      dup2\n        /* \"#utility.yul\":23942:23947   */\n      dup2\n        /* \"#utility.yul\":23939:23953   */\n      lt\n        /* \"#utility.yul\":23932:24052   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":24003:24042   */\n      tag_686\n        /* \"#utility.yul\":24040:24041   */\n      0x00\n        /* \"#utility.yul\":24033:24038   */\n      dup3\n        /* \"#utility.yul\":24003:24042   */\n      tag_429\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":23976:23977   */\n      0x01\n        /* \"#utility.yul\":23969:23974   */\n      dup2\n        /* \"#utility.yul\":23965:23978   */\n      add\n        /* \"#utility.yul\":23956:23978   */\n      swap1\n      pop\n        /* \"#utility.yul\":23932:24052   */\n      jump(tag_683)\n    tag_685:\n        /* \"#utility.yul\":23872:24058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24064:24607   */\n    tag_431:\n        /* \"#utility.yul\":24165:24167   */\n      0x1f\n        /* \"#utility.yul\":24160:24163   */\n      dup3\n        /* \"#utility.yul\":24157:24168   */\n      gt\n        /* \"#utility.yul\":24154:24600   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":24199:24237   */\n      tag_689\n        /* \"#utility.yul\":24231:24236   */\n      dup2\n        /* \"#utility.yul\":24199:24237   */\n      tag_420\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":24283:24312   */\n      tag_690\n        /* \"#utility.yul\":24301:24311   */\n      dup5\n        /* \"#utility.yul\":24283:24312   */\n      tag_421\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":24273:24281   */\n      dup2\n        /* \"#utility.yul\":24269:24313   */\n      add\n        /* \"#utility.yul\":24466:24468   */\n      0x20\n        /* \"#utility.yul\":24454:24464   */\n      dup6\n        /* \"#utility.yul\":24451:24469   */\n      lt\n        /* \"#utility.yul\":24448:24497   */\n      iszero\n      tag_691\n      jumpi\n        /* \"#utility.yul\":24487:24495   */\n      dup2\n        /* \"#utility.yul\":24472:24495   */\n      swap1\n      pop\n        /* \"#utility.yul\":24448:24497   */\n    tag_691:\n        /* \"#utility.yul\":24510:24590   */\n      tag_692\n        /* \"#utility.yul\":24566:24588   */\n      tag_693\n        /* \"#utility.yul\":24584:24587   */\n      dup6\n        /* \"#utility.yul\":24566:24588   */\n      tag_421\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":24556:24564   */\n      dup4\n        /* \"#utility.yul\":24552:24589   */\n      add\n        /* \"#utility.yul\":24539:24550   */\n      dup3\n        /* \"#utility.yul\":24510:24590   */\n      tag_430\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":24169:24600   */\n      pop\n      pop\n        /* \"#utility.yul\":24154:24600   */\n    tag_688:\n        /* \"#utility.yul\":24064:24607   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24613:24730   */\n    tag_432:\n        /* \"#utility.yul\":24667:24675   */\n      0x00\n        /* \"#utility.yul\":24717:24722   */\n      dup3\n        /* \"#utility.yul\":24711:24715   */\n      dup3\n        /* \"#utility.yul\":24707:24723   */\n      shr\n        /* \"#utility.yul\":24686:24723   */\n      swap1\n      pop\n        /* \"#utility.yul\":24613:24730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24736:24905   */\n    tag_433:\n        /* \"#utility.yul\":24780:24786   */\n      0x00\n        /* \"#utility.yul\":24813:24864   */\n      tag_696\n        /* \"#utility.yul\":24861:24862   */\n      0x00\n        /* \"#utility.yul\":24857:24863   */\n      not\n        /* \"#utility.yul\":24849:24854   */\n      dup5\n        /* \"#utility.yul\":24846:24847   */\n      0x08\n        /* \"#utility.yul\":24842:24855   */\n      mul\n        /* \"#utility.yul\":24813:24864   */\n      tag_432\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":24809:24865   */\n      not\n        /* \"#utility.yul\":24894:24898   */\n      dup1\n        /* \"#utility.yul\":24888:24892   */\n      dup4\n        /* \"#utility.yul\":24884:24899   */\n      and\n        /* \"#utility.yul\":24874:24899   */\n      swap2\n      pop\n        /* \"#utility.yul\":24787:24905   */\n      pop\n        /* \"#utility.yul\":24736:24905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24910:25205   */\n    tag_434:\n        /* \"#utility.yul\":24986:24990   */\n      0x00\n        /* \"#utility.yul\":25132:25161   */\n      tag_698\n        /* \"#utility.yul\":25157:25160   */\n      dup4\n        /* \"#utility.yul\":25151:25155   */\n      dup4\n        /* \"#utility.yul\":25132:25161   */\n      tag_433\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":25124:25161   */\n      swap2\n      pop\n        /* \"#utility.yul\":25194:25197   */\n      dup3\n        /* \"#utility.yul\":25191:25192   */\n      0x02\n        /* \"#utility.yul\":25187:25198   */\n      mul\n        /* \"#utility.yul\":25181:25185   */\n      dup3\n        /* \"#utility.yul\":25178:25199   */\n      or\n        /* \"#utility.yul\":25170:25199   */\n      swap1\n      pop\n        /* \"#utility.yul\":24910:25205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25210:26605   */\n    tag_264:\n        /* \"#utility.yul\":25327:25364   */\n      tag_700\n        /* \"#utility.yul\":25360:25363   */\n      dup3\n        /* \"#utility.yul\":25327:25364   */\n      tag_373\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":25429:25447   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25421:25427   */\n      dup2\n        /* \"#utility.yul\":25418:25448   */\n      gt\n        /* \"#utility.yul\":25415:25471   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":25451:25469   */\n      tag_702\n      tag_149\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":25415:25471   */\n    tag_701:\n        /* \"#utility.yul\":25495:25533   */\n      tag_703\n        /* \"#utility.yul\":25527:25531   */\n      dup3\n        /* \"#utility.yul\":25521:25532   */\n      sload\n        /* \"#utility.yul\":25495:25533   */\n      tag_117\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":25580:25647   */\n      tag_704\n        /* \"#utility.yul\":25640:25646   */\n      dup3\n        /* \"#utility.yul\":25632:25638   */\n      dup3\n        /* \"#utility.yul\":25626:25630   */\n      dup6\n        /* \"#utility.yul\":25580:25647   */\n      tag_431\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":25674:25675   */\n      0x00\n        /* \"#utility.yul\":25698:25702   */\n      0x20\n        /* \"#utility.yul\":25685:25702   */\n      swap1\n      pop\n        /* \"#utility.yul\":25730:25732   */\n      0x1f\n        /* \"#utility.yul\":25722:25728   */\n      dup4\n        /* \"#utility.yul\":25719:25733   */\n      gt\n        /* \"#utility.yul\":25747:25748   */\n      0x01\n        /* \"#utility.yul\":25742:26360   */\n      dup2\n      eq\n      tag_706\n      jumpi\n        /* \"#utility.yul\":26404:26405   */\n      0x00\n        /* \"#utility.yul\":26421:26427   */\n      dup5\n        /* \"#utility.yul\":26418:26495   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":26470:26479   */\n      dup3\n        /* \"#utility.yul\":26465:26468   */\n      dup8\n        /* \"#utility.yul\":26461:26480   */\n      add\n        /* \"#utility.yul\":26455:26481   */\n      mload\n        /* \"#utility.yul\":26446:26481   */\n      swap1\n      pop\n        /* \"#utility.yul\":26418:26495   */\n    tag_707:\n        /* \"#utility.yul\":26521:26588   */\n      tag_708\n        /* \"#utility.yul\":26581:26587   */\n      dup6\n        /* \"#utility.yul\":26574:26579   */\n      dup3\n        /* \"#utility.yul\":26521:26588   */\n      tag_434\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":26515:26519   */\n      dup7\n        /* \"#utility.yul\":26508:26589   */\n      sstore\n        /* \"#utility.yul\":26377:26599   */\n      pop\n        /* \"#utility.yul\":25712:26599   */\n      jump(tag_705)\n        /* \"#utility.yul\":25742:26360   */\n    tag_706:\n        /* \"#utility.yul\":25794:25798   */\n      0x1f\n        /* \"#utility.yul\":25790:25799   */\n      not\n        /* \"#utility.yul\":25782:25788   */\n      dup5\n        /* \"#utility.yul\":25778:25800   */\n      and\n        /* \"#utility.yul\":25828:25865   */\n      tag_709\n        /* \"#utility.yul\":25860:25864   */\n      dup7\n        /* \"#utility.yul\":25828:25865   */\n      tag_420\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":25887:25888   */\n      0x00\n        /* \"#utility.yul\":25901:26109   */\n    tag_710:\n        /* \"#utility.yul\":25915:25922   */\n      dup3\n        /* \"#utility.yul\":25912:25913   */\n      dup2\n        /* \"#utility.yul\":25909:25923   */\n      lt\n        /* \"#utility.yul\":25901:26109   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":25994:26003   */\n      dup5\n        /* \"#utility.yul\":25989:25992   */\n      dup10\n        /* \"#utility.yul\":25985:26004   */\n      add\n        /* \"#utility.yul\":25979:26005   */\n      mload\n        /* \"#utility.yul\":25971:25977   */\n      dup3\n        /* \"#utility.yul\":25964:26006   */\n      sstore\n        /* \"#utility.yul\":26045:26046   */\n      0x01\n        /* \"#utility.yul\":26037:26043   */\n      dup3\n        /* \"#utility.yul\":26033:26047   */\n      add\n        /* \"#utility.yul\":26023:26047   */\n      swap2\n      pop\n        /* \"#utility.yul\":26092:26094   */\n      0x20\n        /* \"#utility.yul\":26081:26090   */\n      dup6\n        /* \"#utility.yul\":26077:26095   */\n      add\n        /* \"#utility.yul\":26064:26095   */\n      swap5\n      pop\n        /* \"#utility.yul\":25938:25942   */\n      0x20\n        /* \"#utility.yul\":25935:25936   */\n      dup2\n        /* \"#utility.yul\":25931:25943   */\n      add\n        /* \"#utility.yul\":25926:25943   */\n      swap1\n      pop\n        /* \"#utility.yul\":25901:26109   */\n      jump(tag_710)\n    tag_712:\n        /* \"#utility.yul\":26137:26143   */\n      dup7\n        /* \"#utility.yul\":26128:26135   */\n      dup4\n        /* \"#utility.yul\":26125:26144   */\n      lt\n        /* \"#utility.yul\":26122:26301   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":26195:26204   */\n      dup5\n        /* \"#utility.yul\":26190:26193   */\n      dup10\n        /* \"#utility.yul\":26186:26205   */\n      add\n        /* \"#utility.yul\":26180:26206   */\n      mload\n        /* \"#utility.yul\":26238:26286   */\n      tag_714\n        /* \"#utility.yul\":26280:26284   */\n      0x1f\n        /* \"#utility.yul\":26272:26278   */\n      dup10\n        /* \"#utility.yul\":26268:26285   */\n      and\n        /* \"#utility.yul\":26257:26266   */\n      dup3\n        /* \"#utility.yul\":26238:26286   */\n      tag_433\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":26230:26236   */\n      dup4\n        /* \"#utility.yul\":26223:26287   */\n      sstore\n        /* \"#utility.yul\":26145:26301   */\n      pop\n        /* \"#utility.yul\":26122:26301   */\n    tag_713:\n        /* \"#utility.yul\":26347:26348   */\n      0x01\n        /* \"#utility.yul\":26343:26344   */\n      0x02\n        /* \"#utility.yul\":26335:26341   */\n      dup9\n        /* \"#utility.yul\":26331:26345   */\n      mul\n        /* \"#utility.yul\":26327:26349   */\n      add\n        /* \"#utility.yul\":26321:26325   */\n      dup9\n        /* \"#utility.yul\":26314:26350   */\n      sstore\n        /* \"#utility.yul\":25749:26360   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25712:26599   */\n    tag_705:\n      pop\n        /* \"#utility.yul\":25302:26605   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25210:26605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26611:26709   */\n    tag_435:\n        /* \"#utility.yul\":26662:26668   */\n      0x00\n        /* \"#utility.yul\":26696:26701   */\n      dup2\n        /* \"#utility.yul\":26690:26702   */\n      mload\n        /* \"#utility.yul\":26680:26702   */\n      swap1\n      pop\n        /* \"#utility.yul\":26611:26709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26715:26883   */\n    tag_436:\n        /* \"#utility.yul\":26798:26809   */\n      0x00\n        /* \"#utility.yul\":26832:26838   */\n      dup3\n        /* \"#utility.yul\":26827:26830   */\n      dup3\n        /* \"#utility.yul\":26820:26839   */\n      mstore\n        /* \"#utility.yul\":26872:26876   */\n      0x20\n        /* \"#utility.yul\":26867:26870   */\n      dup3\n        /* \"#utility.yul\":26863:26877   */\n      add\n        /* \"#utility.yul\":26848:26877   */\n      swap1\n      pop\n        /* \"#utility.yul\":26715:26883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26889:27262   */\n    tag_437:\n        /* \"#utility.yul\":26975:26978   */\n      0x00\n        /* \"#utility.yul\":27003:27041   */\n      tag_718\n        /* \"#utility.yul\":27035:27040   */\n      dup3\n        /* \"#utility.yul\":27003:27041   */\n      tag_435\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":27057:27127   */\n      tag_719\n        /* \"#utility.yul\":27120:27126   */\n      dup2\n        /* \"#utility.yul\":27115:27118   */\n      dup6\n        /* \"#utility.yul\":27057:27127   */\n      tag_436\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":27050:27127   */\n      swap4\n      pop\n        /* \"#utility.yul\":27136:27201   */\n      tag_720\n        /* \"#utility.yul\":27194:27200   */\n      dup2\n        /* \"#utility.yul\":27189:27192   */\n      dup6\n        /* \"#utility.yul\":27182:27186   */\n      0x20\n        /* \"#utility.yul\":27175:27180   */\n      dup7\n        /* \"#utility.yul\":27171:27187   */\n      add\n        /* \"#utility.yul\":27136:27201   */\n      tag_375\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":27226:27255   */\n      tag_721\n        /* \"#utility.yul\":27248:27254   */\n      dup2\n        /* \"#utility.yul\":27226:27255   */\n      tag_376\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":27221:27224   */\n      dup5\n        /* \"#utility.yul\":27217:27256   */\n      add\n        /* \"#utility.yul\":27210:27256   */\n      swap2\n      pop\n        /* \"#utility.yul\":26979:27262   */\n      pop\n        /* \"#utility.yul\":26889:27262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27268:27908   */\n    tag_281:\n        /* \"#utility.yul\":27463:27467   */\n      0x00\n        /* \"#utility.yul\":27501:27504   */\n      0x80\n        /* \"#utility.yul\":27490:27499   */\n      dup3\n        /* \"#utility.yul\":27486:27505   */\n      add\n        /* \"#utility.yul\":27478:27505   */\n      swap1\n      pop\n        /* \"#utility.yul\":27515:27586   */\n      tag_723\n        /* \"#utility.yul\":27583:27584   */\n      0x00\n        /* \"#utility.yul\":27572:27581   */\n      dup4\n        /* \"#utility.yul\":27568:27585   */\n      add\n        /* \"#utility.yul\":27559:27565   */\n      dup8\n        /* \"#utility.yul\":27515:27586   */\n      tag_383\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":27596:27668   */\n      tag_724\n        /* \"#utility.yul\":27664:27666   */\n      0x20\n        /* \"#utility.yul\":27653:27662   */\n      dup4\n        /* \"#utility.yul\":27649:27667   */\n      add\n        /* \"#utility.yul\":27640:27646   */\n      dup7\n        /* \"#utility.yul\":27596:27668   */\n      tag_383\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":27678:27750   */\n      tag_725\n        /* \"#utility.yul\":27746:27748   */\n      0x40\n        /* \"#utility.yul\":27735:27744   */\n      dup4\n        /* \"#utility.yul\":27731:27749   */\n      add\n        /* \"#utility.yul\":27722:27728   */\n      dup6\n        /* \"#utility.yul\":27678:27750   */\n      tag_409\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":27797:27806   */\n      dup2\n        /* \"#utility.yul\":27791:27795   */\n      dup2\n        /* \"#utility.yul\":27787:27807   */\n      sub\n        /* \"#utility.yul\":27782:27784   */\n      0x60\n        /* \"#utility.yul\":27771:27780   */\n      dup4\n        /* \"#utility.yul\":27767:27785   */\n      add\n        /* \"#utility.yul\":27760:27808   */\n      mstore\n        /* \"#utility.yul\":27825:27901   */\n      tag_726\n        /* \"#utility.yul\":27896:27900   */\n      dup2\n        /* \"#utility.yul\":27887:27893   */\n      dup5\n        /* \"#utility.yul\":27825:27901   */\n      tag_437\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":27817:27901   */\n      swap1\n      pop\n        /* \"#utility.yul\":27268:27908   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27914:28055   */\n    tag_438:\n        /* \"#utility.yul\":27970:27975   */\n      0x00\n        /* \"#utility.yul\":28001:28007   */\n      dup2\n        /* \"#utility.yul\":27995:28008   */\n      mload\n        /* \"#utility.yul\":27986:28008   */\n      swap1\n      pop\n        /* \"#utility.yul\":28017:28049   */\n      tag_728\n        /* \"#utility.yul\":28043:28048   */\n      dup2\n        /* \"#utility.yul\":28017:28049   */\n      tag_369\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":27914:28055   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28061:28410   */\n    tag_284:\n        /* \"#utility.yul\":28130:28136   */\n      0x00\n        /* \"#utility.yul\":28179:28181   */\n      0x20\n        /* \"#utility.yul\":28167:28176   */\n      dup3\n        /* \"#utility.yul\":28158:28165   */\n      dup5\n        /* \"#utility.yul\":28154:28177   */\n      sub\n        /* \"#utility.yul\":28150:28182   */\n      slt\n        /* \"#utility.yul\":28147:28266   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":28185:28264   */\n      tag_731\n      tag_366\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":28147:28266   */\n    tag_730:\n        /* \"#utility.yul\":28305:28306   */\n      0x00\n        /* \"#utility.yul\":28330:28393   */\n      tag_732\n        /* \"#utility.yul\":28385:28392   */\n      dup5\n        /* \"#utility.yul\":28376:28382   */\n      dup3\n        /* \"#utility.yul\":28365:28374   */\n      dup6\n        /* \"#utility.yul\":28361:28383   */\n      add\n        /* \"#utility.yul\":28330:28393   */\n      tag_438\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":28320:28393   */\n      swap2\n      pop\n        /* \"#utility.yul\":28276:28403   */\n      pop\n        /* \"#utility.yul\":28061:28410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28416:28748   */\n    tag_326:\n        /* \"#utility.yul\":28537:28541   */\n      0x00\n        /* \"#utility.yul\":28575:28577   */\n      0x40\n        /* \"#utility.yul\":28564:28573   */\n      dup3\n        /* \"#utility.yul\":28560:28578   */\n      add\n        /* \"#utility.yul\":28552:28578   */\n      swap1\n      pop\n        /* \"#utility.yul\":28588:28659   */\n      tag_734\n        /* \"#utility.yul\":28656:28657   */\n      0x00\n        /* \"#utility.yul\":28645:28654   */\n      dup4\n        /* \"#utility.yul\":28641:28658   */\n      add\n        /* \"#utility.yul\":28632:28638   */\n      dup6\n        /* \"#utility.yul\":28588:28659   */\n      tag_383\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":28669:28741   */\n      tag_735\n        /* \"#utility.yul\":28737:28739   */\n      0x20\n        /* \"#utility.yul\":28726:28735   */\n      dup4\n        /* \"#utility.yul\":28722:28740   */\n      add\n        /* \"#utility.yul\":28713:28719   */\n      dup5\n        /* \"#utility.yul\":28669:28741   */\n      tag_409\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":28416:28748   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28754:28934   */\n    tag_337:\n        /* \"#utility.yul\":28802:28879   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28799:28800   */\n      0x00\n        /* \"#utility.yul\":28792:28880   */\n      mstore\n        /* \"#utility.yul\":28899:28903   */\n      0x12\n        /* \"#utility.yul\":28896:28897   */\n      0x04\n        /* \"#utility.yul\":28889:28904   */\n      mstore\n        /* \"#utility.yul\":28923:28927   */\n      0x24\n        /* \"#utility.yul\":28920:28921   */\n      0x00\n        /* \"#utility.yul\":28913:28928   */\n      revert\n\n    auxdata: 0xa2646970667358221220ad76c30dd6e338fd6cd7ad6bbaa2112efd07103885789eb5bf4b2ce6ac01b3df64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3204": {
									"entryPoint": null,
									"id": 3204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 302,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:18",
										"nodeType": "YulBlock",
										"src": "0:5817:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:18",
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nativeSrc": "77:22:18",
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nativeSrc": "87:12:18",
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:18",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:18",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nativeSrc": "140:152:18",
													"nodeType": "YulBlock",
													"src": "140:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:18",
																		"nodeType": "YulLiteral",
																		"src": "157:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:18",
																		"nodeType": "YulLiteral",
																		"src": "160:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:18"
																},
																"nativeSrc": "150:88:18",
																"nodeType": "YulFunctionCall",
																"src": "150:88:18"
															},
															"nativeSrc": "150:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:18",
																		"nodeType": "YulLiteral",
																		"src": "254:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:18",
																		"nodeType": "YulLiteral",
																		"src": "257:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:18"
																},
																"nativeSrc": "247:15:18",
																"nodeType": "YulFunctionCall",
																"src": "247:15:18"
															},
															"nativeSrc": "247:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:18",
																		"nodeType": "YulLiteral",
																		"src": "278:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:18",
																		"nodeType": "YulLiteral",
																		"src": "281:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:18"
																},
																"nativeSrc": "271:15:18",
																"nodeType": "YulFunctionCall",
																"src": "271:15:18"
															},
															"nativeSrc": "271:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:18"
											},
											{
												"body": {
													"nativeSrc": "326:152:18",
													"nodeType": "YulBlock",
													"src": "326:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:18",
																		"nodeType": "YulLiteral",
																		"src": "343:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:18",
																		"nodeType": "YulLiteral",
																		"src": "346:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:18"
																},
																"nativeSrc": "336:88:18",
																"nodeType": "YulFunctionCall",
																"src": "336:88:18"
															},
															"nativeSrc": "336:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:18",
																		"nodeType": "YulLiteral",
																		"src": "440:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:18",
																		"nodeType": "YulLiteral",
																		"src": "443:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:18"
																},
																"nativeSrc": "433:15:18",
																"nodeType": "YulFunctionCall",
																"src": "433:15:18"
															},
															"nativeSrc": "433:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:18",
																		"nodeType": "YulLiteral",
																		"src": "464:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:18",
																		"nodeType": "YulLiteral",
																		"src": "467:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:18"
																},
																"nativeSrc": "457:15:18",
																"nodeType": "YulFunctionCall",
																"src": "457:15:18"
															},
															"nativeSrc": "457:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:18"
											},
											{
												"body": {
													"nativeSrc": "535:269:18",
													"nodeType": "YulBlock",
													"src": "535:269:18",
													"statements": [
														{
															"nativeSrc": "545:22:18",
															"nodeType": "YulAssignment",
															"src": "545:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:18",
																		"nodeType": "YulLiteral",
																		"src": "565:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:18"
																},
																"nativeSrc": "555:12:18",
																"nodeType": "YulFunctionCall",
																"src": "555:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:18"
																}
															]
														},
														{
															"nativeSrc": "576:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:18",
																		"nodeType": "YulLiteral",
																		"src": "612:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:18"
																},
																"nativeSrc": "602:12:18",
																"nodeType": "YulFunctionCall",
																"src": "602:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:18",
																	"nodeType": "YulTypedName",
																	"src": "580:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:18",
																"nodeType": "YulBlock",
																"src": "653:51:18",
																"statements": [
																	{
																		"nativeSrc": "667:27:18",
																		"nodeType": "YulAssignment",
																		"src": "667:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:18",
																					"nodeType": "YulLiteral",
																					"src": "689:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:18"
																			},
																			"nativeSrc": "677:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:18"
																},
																"nativeSrc": "626:26:18",
																"nodeType": "YulFunctionCall",
																"src": "626:26:18"
															},
															"nativeSrc": "623:81:18",
															"nodeType": "YulIf",
															"src": "623:81:18"
														},
														{
															"body": {
																"nativeSrc": "756:42:18",
																"nodeType": "YulBlock",
																"src": "756:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:18"
																			},
																			"nativeSrc": "770:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:18"
																		},
																		"nativeSrc": "770:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:18",
																				"nodeType": "YulLiteral",
																				"src": "751:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:18"
																		},
																		"nativeSrc": "740:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:18"
																},
																"nativeSrc": "717:38:18",
																"nodeType": "YulFunctionCall",
																"src": "717:38:18"
															},
															"nativeSrc": "714:84:18",
															"nodeType": "YulIf",
															"src": "714:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:18",
														"nodeType": "YulTypedName",
														"src": "519:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:18",
														"nodeType": "YulTypedName",
														"src": "528:6:18",
														"type": ""
													}
												],
												"src": "484:320:18"
											},
											{
												"body": {
													"nativeSrc": "864:87:18",
													"nodeType": "YulBlock",
													"src": "864:87:18",
													"statements": [
														{
															"nativeSrc": "874:11:18",
															"nodeType": "YulAssignment",
															"src": "874:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:18",
																"nodeType": "YulIdentifier",
																"src": "882:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:18",
																		"nodeType": "YulLiteral",
																		"src": "902:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:18"
																},
																"nativeSrc": "895:14:18",
																"nodeType": "YulFunctionCall",
																"src": "895:14:18"
															},
															"nativeSrc": "895:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:18"
														},
														{
															"nativeSrc": "918:26:18",
															"nodeType": "YulAssignment",
															"src": "918:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:18",
																		"nodeType": "YulLiteral",
																		"src": "936:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:18",
																		"nodeType": "YulLiteral",
																		"src": "939:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:18"
																},
																"nativeSrc": "926:18:18",
																"nodeType": "YulFunctionCall",
																"src": "926:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:18",
														"nodeType": "YulTypedName",
														"src": "851:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:18",
														"nodeType": "YulTypedName",
														"src": "859:4:18",
														"type": ""
													}
												],
												"src": "810:141:18"
											},
											{
												"body": {
													"nativeSrc": "1001:49:18",
													"nodeType": "YulBlock",
													"src": "1001:49:18",
													"statements": [
														{
															"nativeSrc": "1011:33:18",
															"nodeType": "YulAssignment",
															"src": "1011:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:18"
																		},
																		"nativeSrc": "1025:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:18"
																},
																"nativeSrc": "1021:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:18",
														"nodeType": "YulTypedName",
														"src": "984:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:18",
														"nodeType": "YulTypedName",
														"src": "994:6:18",
														"type": ""
													}
												],
												"src": "957:93:18"
											},
											{
												"body": {
													"nativeSrc": "1109:54:18",
													"nodeType": "YulBlock",
													"src": "1109:54:18",
													"statements": [
														{
															"nativeSrc": "1119:37:18",
															"nodeType": "YulAssignment",
															"src": "1119:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:18"
																},
																"nativeSrc": "1140:16:18",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:18",
														"nodeType": "YulTypedName",
														"src": "1084:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:18",
														"nodeType": "YulTypedName",
														"src": "1090:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:18",
														"nodeType": "YulTypedName",
														"src": "1100:8:18",
														"type": ""
													}
												],
												"src": "1056:107:18"
											},
											{
												"body": {
													"nativeSrc": "1245:317:18",
													"nodeType": "YulBlock",
													"src": "1245:317:18",
													"statements": [
														{
															"nativeSrc": "1255:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:18"
																},
																"nativeSrc": "1272:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:18",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:18",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:18"
																},
																"nativeSrc": "1311:97:18",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:18",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:18",
															"nodeType": "YulAssignment",
															"src": "1417:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:18"
																},
																"nativeSrc": "1429:39:18",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:18"
																}
															]
														},
														{
															"nativeSrc": "1477:30:18",
															"nodeType": "YulAssignment",
															"src": "1477:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:18"
																		},
																		"nativeSrc": "1497:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:18"
																},
																"nativeSrc": "1486:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:18"
																}
															]
														},
														{
															"nativeSrc": "1516:40:18",
															"nodeType": "YulAssignment",
															"src": "1516:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:18"
																		},
																		"nativeSrc": "1536:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:18"
																},
																"nativeSrc": "1526:30:18",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:18",
														"nodeType": "YulTypedName",
														"src": "1206:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:18",
														"nodeType": "YulTypedName",
														"src": "1213:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:18",
														"nodeType": "YulTypedName",
														"src": "1225:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:18",
														"nodeType": "YulTypedName",
														"src": "1238:6:18",
														"type": ""
													}
												],
												"src": "1169:393:18"
											},
											{
												"body": {
													"nativeSrc": "1613:32:18",
													"nodeType": "YulBlock",
													"src": "1613:32:18",
													"statements": [
														{
															"nativeSrc": "1623:16:18",
															"nodeType": "YulAssignment",
															"src": "1623:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:18",
																"nodeType": "YulIdentifier",
																"src": "1634:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:18",
														"nodeType": "YulTypedName",
														"src": "1595:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:18",
														"nodeType": "YulTypedName",
														"src": "1605:7:18",
														"type": ""
													}
												],
												"src": "1568:77:18"
											},
											{
												"body": {
													"nativeSrc": "1683:28:18",
													"nodeType": "YulBlock",
													"src": "1683:28:18",
													"statements": [
														{
															"nativeSrc": "1693:12:18",
															"nodeType": "YulAssignment",
															"src": "1693:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:18",
																"nodeType": "YulIdentifier",
																"src": "1700:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:18",
														"nodeType": "YulTypedName",
														"src": "1669:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:18",
														"nodeType": "YulTypedName",
														"src": "1679:3:18",
														"type": ""
													}
												],
												"src": "1651:60:18"
											},
											{
												"body": {
													"nativeSrc": "1777:82:18",
													"nodeType": "YulBlock",
													"src": "1777:82:18",
													"statements": [
														{
															"nativeSrc": "1787:66:18",
															"nodeType": "YulAssignment",
															"src": "1787:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:18"
																				},
																				"nativeSrc": "1827:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:18"
																		},
																		"nativeSrc": "1818:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:18"
																},
																"nativeSrc": "1800:53:18",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:18",
														"nodeType": "YulTypedName",
														"src": "1757:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:18",
														"nodeType": "YulTypedName",
														"src": "1767:9:18",
														"type": ""
													}
												],
												"src": "1717:142:18"
											},
											{
												"body": {
													"nativeSrc": "1912:28:18",
													"nodeType": "YulBlock",
													"src": "1912:28:18",
													"statements": [
														{
															"nativeSrc": "1922:12:18",
															"nodeType": "YulAssignment",
															"src": "1922:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:18",
																"nodeType": "YulIdentifier",
																"src": "1929:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:18",
														"nodeType": "YulTypedName",
														"src": "1898:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:18",
														"nodeType": "YulTypedName",
														"src": "1908:3:18",
														"type": ""
													}
												],
												"src": "1865:75:18"
											},
											{
												"body": {
													"nativeSrc": "2022:193:18",
													"nodeType": "YulBlock",
													"src": "2022:193:18",
													"statements": [
														{
															"nativeSrc": "2032:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:18"
																},
																"nativeSrc": "2056:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:18",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:18"
																				},
																				"nativeSrc": "2145:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:18"
																				},
																				"nativeSrc": "2166:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:18"
																		},
																		"nativeSrc": "2117:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:18"
																},
																"nativeSrc": "2104:105:18",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:18"
															},
															"nativeSrc": "2104:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:18",
														"nodeType": "YulTypedName",
														"src": "1999:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:18",
														"nodeType": "YulTypedName",
														"src": "2005:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:18",
														"nodeType": "YulTypedName",
														"src": "2013:7:18",
														"type": ""
													}
												],
												"src": "1946:269:18"
											},
											{
												"body": {
													"nativeSrc": "2270:24:18",
													"nodeType": "YulBlock",
													"src": "2270:24:18",
													"statements": [
														{
															"nativeSrc": "2280:8:18",
															"nodeType": "YulAssignment",
															"src": "2280:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:18",
																"nodeType": "YulLiteral",
																"src": "2287:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:18",
														"nodeType": "YulTypedName",
														"src": "2266:3:18",
														"type": ""
													}
												],
												"src": "2221:73:18"
											},
											{
												"body": {
													"nativeSrc": "2353:136:18",
													"nodeType": "YulBlock",
													"src": "2353:136:18",
													"statements": [
														{
															"nativeSrc": "2363:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:18"
																},
																"nativeSrc": "2377:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:18"
																},
																"nativeSrc": "2418:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:18"
															},
															"nativeSrc": "2418:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:18",
														"nodeType": "YulTypedName",
														"src": "2339:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:18",
														"nodeType": "YulTypedName",
														"src": "2345:6:18",
														"type": ""
													}
												],
												"src": "2300:189:18"
											},
											{
												"body": {
													"nativeSrc": "2545:136:18",
													"nodeType": "YulBlock",
													"src": "2545:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:18",
																"nodeType": "YulBlock",
																"src": "2612:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:18"
																			},
																			"nativeSrc": "2626:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:18"
																		},
																		"nativeSrc": "2626:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:18"
																},
																"nativeSrc": "2562:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:18"
															},
															"nativeSrc": "2555:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:18",
																"nodeType": "YulBlock",
																"src": "2577:26:18",
																"statements": [
																	{
																		"nativeSrc": "2579:22:18",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:18"
																			},
																			"nativeSrc": "2588:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:18",
																"nodeType": "YulBlock",
																"src": "2559:2:18",
																"statements": []
															},
															"src": "2555:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:18",
														"nodeType": "YulTypedName",
														"src": "2533:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:18",
														"nodeType": "YulTypedName",
														"src": "2540:3:18",
														"type": ""
													}
												],
												"src": "2495:186:18"
											},
											{
												"body": {
													"nativeSrc": "2766:464:18",
													"nodeType": "YulBlock",
													"src": "2766:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:18",
																"nodeType": "YulBlock",
																"src": "2792:431:18",
																"statements": [
																	{
																		"nativeSrc": "2806:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:18"
																			},
																			"nativeSrc": "2822:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:18",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:18"
																					},
																					"nativeSrc": "2906:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:18"
																			},
																			"nativeSrc": "2892:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:18",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:18",
																			"nodeType": "YulBlock",
																			"src": "3093:27:18",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:18",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:18",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:18"
																			},
																			"nativeSrc": "3074:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:18"
																		},
																		"nativeSrc": "3071:49:18",
																		"nodeType": "YulIf",
																		"src": "3071:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:18"
																							},
																							"nativeSrc": "3189:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:18"
																					},
																					"nativeSrc": "3175:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:18"
																			},
																			"nativeSrc": "3133:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:18"
																		},
																		"nativeSrc": "3133:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:18"
																},
																"nativeSrc": "2780:11:18",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:18"
															},
															"nativeSrc": "2777:446:18",
															"nodeType": "YulIf",
															"src": "2777:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:18",
														"nodeType": "YulTypedName",
														"src": "2742:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:18",
														"nodeType": "YulTypedName",
														"src": "2749:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:18",
														"nodeType": "YulTypedName",
														"src": "2754:10:18",
														"type": ""
													}
												],
												"src": "2687:543:18"
											},
											{
												"body": {
													"nativeSrc": "3299:54:18",
													"nodeType": "YulBlock",
													"src": "3299:54:18",
													"statements": [
														{
															"nativeSrc": "3309:37:18",
															"nodeType": "YulAssignment",
															"src": "3309:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:18"
																},
																"nativeSrc": "3330:16:18",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:18",
														"nodeType": "YulTypedName",
														"src": "3274:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:18",
														"nodeType": "YulTypedName",
														"src": "3280:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:18",
														"nodeType": "YulTypedName",
														"src": "3290:8:18",
														"type": ""
													}
												],
												"src": "3236:117:18"
											},
											{
												"body": {
													"nativeSrc": "3410:118:18",
													"nodeType": "YulBlock",
													"src": "3410:118:18",
													"statements": [
														{
															"nativeSrc": "3420:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:18"
																				},
																				"nativeSrc": "3465:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:18"
																				},
																				"nativeSrc": "3480:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:18"
																		},
																		"nativeSrc": "3436:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:18"
																},
																"nativeSrc": "3432:56:18",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:18",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:18",
															"nodeType": "YulAssignment",
															"src": "3497:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:18"
																},
																"nativeSrc": "3507:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:18",
														"nodeType": "YulTypedName",
														"src": "3387:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:18",
														"nodeType": "YulTypedName",
														"src": "3393:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:18",
														"nodeType": "YulTypedName",
														"src": "3403:6:18",
														"type": ""
													}
												],
												"src": "3359:169:18"
											},
											{
												"body": {
													"nativeSrc": "3614:214:18",
													"nodeType": "YulBlock",
													"src": "3614:214:18",
													"statements": [
														{
															"nativeSrc": "3747:37:18",
															"nodeType": "YulAssignment",
															"src": "3747:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:18"
																},
																"nativeSrc": "3755:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:18"
																}
															]
														},
														{
															"nativeSrc": "3793:29:18",
															"nodeType": "YulAssignment",
															"src": "3793:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:18"
																		},
																		"nativeSrc": "3810:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:18"
																},
																"nativeSrc": "3801:21:18",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:18",
														"nodeType": "YulTypedName",
														"src": "3595:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:18",
														"nodeType": "YulTypedName",
														"src": "3601:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:18",
														"nodeType": "YulTypedName",
														"src": "3609:4:18",
														"type": ""
													}
												],
												"src": "3533:295:18"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:18",
													"nodeType": "YulBlock",
													"src": "3925:1303:18",
													"statements": [
														{
															"nativeSrc": "3936:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:18"
																},
																"nativeSrc": "3950:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:18",
																"nodeType": "YulBlock",
																"src": "4072:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:18"
																			},
																			"nativeSrc": "4074:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:18"
																		},
																		"nativeSrc": "4074:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:18"
																},
																"nativeSrc": "4041:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:18"
															},
															"nativeSrc": "4038:56:18",
															"nodeType": "YulIf",
															"src": "4038:56:18"
														},
														{
															"nativeSrc": "4104:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:18"
																		},
																		"nativeSrc": "4144:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:18"
																},
																"nativeSrc": "4118:38:18",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:18"
																},
																"nativeSrc": "4203:67:18",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:18"
															},
															"nativeSrc": "4203:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:18"
														},
														{
															"nativeSrc": "4280:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:18",
																"nodeType": "YulLiteral",
																"src": "4297:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:18",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:18",
															"nodeType": "YulAssignment",
															"src": "4308:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:18",
																"nodeType": "YulLiteral",
																"src": "4321:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:18",
																		"nodeType": "YulBlock",
																		"src": "4372:611:18",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:18",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:18"
																							},
																							"nativeSrc": "4413:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:18"
																					},
																					"nativeSrc": "4401:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:18",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:18"
																					},
																					"nativeSrc": "4451:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:18",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:18",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:18",
																					"nodeType": "YulBlock",
																					"src": "4569:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:18"
																												},
																												"nativeSrc": "4608:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:18"
																										},
																										"nativeSrc": "4602:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:18"
																								},
																								"nativeSrc": "4587:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:18"
																							},
																							"nativeSrc": "4587:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:18"
																						},
																						{
																							"nativeSrc": "4646:24:18",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:18",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:18"
																								},
																								"nativeSrc": "4656:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:18",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:18",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:18"
																								},
																								"nativeSrc": "4700:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:18"
																					},
																					"nativeSrc": "4532:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:18"
																				},
																				"nativeSrc": "4524:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:18",
																					"nodeType": "YulBlock",
																					"src": "4547:21:18",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:18",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:18",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:18"
																								},
																								"nativeSrc": "4554:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:18",
																					"nodeType": "YulBlock",
																					"src": "4528:3:18",
																					"statements": []
																				},
																				"src": "4524:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:18",
																					"nodeType": "YulBlock",
																					"src": "4768:156:18",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:18"
																										},
																										"nativeSrc": "4809:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:18"
																								},
																								"nativeSrc": "4803:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:18",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:18",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:18"
																												},
																												"nativeSrc": "4891:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:18"
																										},
																										"nativeSrc": "4861:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:18"
																								},
																								"nativeSrc": "4846:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:18"
																							},
																							"nativeSrc": "4846:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:18"
																					},
																					"nativeSrc": "4748:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:18"
																				},
																				"nativeSrc": "4745:179:18",
																				"nodeType": "YulIf",
																				"src": "4745:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:18",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:18"
																									},
																									"nativeSrc": "4954:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:18",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:18"
																							},
																							"nativeSrc": "4950:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:18"
																					},
																					"nativeSrc": "4937:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:18"
																				},
																				"nativeSrc": "4937:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:18"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:18",
																	"nodeType": "YulCase",
																	"src": "4365:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:18",
																		"nodeType": "YulBlock",
																		"src": "5000:222:18",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:18",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:18",
																					"nodeType": "YulBlock",
																					"src": "5051:67:18",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:18",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:18"
																										},
																										"nativeSrc": "5084:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:18"
																								},
																								"nativeSrc": "5078:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:18"
																				},
																				"nativeSrc": "5041:77:18",
																				"nodeType": "YulIf",
																				"src": "5041:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:18"
																							},
																							"nativeSrc": "5144:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:18"
																					},
																					"nativeSrc": "5131:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:18"
																				},
																				"nativeSrc": "5131:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:18"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:18",
																	"nodeType": "YulCase",
																	"src": "4992:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:18"
																},
																"nativeSrc": "4342:14:18",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:18"
															},
															"nativeSrc": "4335:887:18",
															"nodeType": "YulSwitch",
															"src": "4335:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:18",
														"nodeType": "YulTypedName",
														"src": "3914:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:18",
														"nodeType": "YulTypedName",
														"src": "3920:3:18",
														"type": ""
													}
												],
												"src": "3833:1395:18"
											},
											{
												"body": {
													"nativeSrc": "5279:81:18",
													"nodeType": "YulBlock",
													"src": "5279:81:18",
													"statements": [
														{
															"nativeSrc": "5289:65:18",
															"nodeType": "YulAssignment",
															"src": "5289:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:18",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:18"
																},
																"nativeSrc": "5300:54:18",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:18",
														"nodeType": "YulTypedName",
														"src": "5261:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:18",
														"nodeType": "YulTypedName",
														"src": "5271:7:18",
														"type": ""
													}
												],
												"src": "5234:126:18"
											},
											{
												"body": {
													"nativeSrc": "5411:51:18",
													"nodeType": "YulBlock",
													"src": "5411:51:18",
													"statements": [
														{
															"nativeSrc": "5421:35:18",
															"nodeType": "YulAssignment",
															"src": "5421:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:18"
																},
																"nativeSrc": "5432:24:18",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:18",
														"nodeType": "YulTypedName",
														"src": "5393:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:18",
														"nodeType": "YulTypedName",
														"src": "5403:7:18",
														"type": ""
													}
												],
												"src": "5366:96:18"
											},
											{
												"body": {
													"nativeSrc": "5533:53:18",
													"nodeType": "YulBlock",
													"src": "5533:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:18"
																		},
																		"nativeSrc": "5555:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:18"
																},
																"nativeSrc": "5543:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:18"
															},
															"nativeSrc": "5543:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:18",
														"nodeType": "YulTypedName",
														"src": "5521:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:18",
														"nodeType": "YulTypedName",
														"src": "5528:3:18",
														"type": ""
													}
												],
												"src": "5468:118:18"
											},
											{
												"body": {
													"nativeSrc": "5690:124:18",
													"nodeType": "YulBlock",
													"src": "5690:124:18",
													"statements": [
														{
															"nativeSrc": "5700:26:18",
															"nodeType": "YulAssignment",
															"src": "5700:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:18"
																},
																"nativeSrc": "5708:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:18"
																		},
																		"nativeSrc": "5789:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:18"
																},
																"nativeSrc": "5736:71:18",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:18"
															},
															"nativeSrc": "5736:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:18",
														"nodeType": "YulTypedName",
														"src": "5662:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:18",
														"nodeType": "YulTypedName",
														"src": "5674:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:18",
														"nodeType": "YulTypedName",
														"src": "5685:4:18",
														"type": ""
													}
												],
												"src": "5592:222:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50336040518060400160405280600981526020017f53696d706c654e465400000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f534e465400000000000000000000000000000000000000000000000000000000815250815f90816200008e919062000455565b508060019081620000a0919062000455565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000116575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200010d91906200057c565b60405180910390fd5b62000127816200012e60201b60201c565b5062000597565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200026d57607f821691505b60208210810362000283576200028262000228565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002aa565b620002f38683620002aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200033d6200033762000331846200030b565b62000314565b6200030b565b9050919050565b5f819050919050565b62000358836200031d565b62000370620003678262000344565b848454620002b6565b825550505050565b5f90565b6200038662000378565b620003938184846200034d565b505050565b5b81811015620003ba57620003ae5f826200037c565b60018101905062000399565b5050565b601f8211156200040957620003d38162000289565b620003de846200029b565b81016020851015620003ee578190505b62000406620003fd856200029b565b83018262000398565b50505b505050565b5f82821c905092915050565b5f6200042b5f19846008026200040e565b1980831691505092915050565b5f6200044583836200041a565b9150826002028217905092915050565b6200046082620001f1565b67ffffffffffffffff8111156200047c576200047b620001fb565b5b62000488825462000255565b62000495828285620003be565b5f60209050601f831160018114620004cb575f8415620004b6578287015190505b620004c2858262000438565b86555062000531565b601f198416620004db8662000289565b5f5b828110156200050457848901518255600182019150602085019450602081019050620004dd565b8683101562000524578489015162000520601f8916826200041a565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620005648262000539565b9050919050565b620005768162000558565b82525050565b5f602082019050620005915f8301846200056b565b92915050565b612beb80620005a55f395ff3fe608060405234801561000f575f80fd5b5060043610610135575f3560e01c80637a6ce2e1116100b6578063a22cb4651161007a578063a22cb4651461034b578063b88d4fde14610367578063c87b56dd14610383578063e43252d7146103b3578063e985e9c5146103cf578063f2fde38b146103ff57610135565b80637a6ce2e1146102a55780638ab1d681146102c35780638da5cb5b146102df57806395d89b41146102fd5780639b19251a1461031b57610135565b806342842e0e116100fd57806342842e0e146101ef5780635f6c96a01461020b5780636352211e1461023b57806370a082311461026b578063715018a61461029b57610135565b806301ffc9a71461013957806306fdde0314610169578063081812fc14610187578063095ea7b3146101b757806323b872dd146101d3575b5f80fd5b610153600480360381019061014e9190611dd0565b61041b565b6040516101609190611e15565b60405180910390f35b61017161047b565b60405161017e9190611eb8565b60405180910390f35b6101a1600480360381019061019c9190611f0b565b61050a565b6040516101ae9190611f75565b60405180910390f35b6101d160048036038101906101cc9190611fb8565b610525565b005b6101ed60048036038101906101e89190611ff6565b61053b565b005b61020960048036038101906102049190611ff6565b61063a565b005b610225600480360381019061022091906122d9565b610659565b6040516102329190612404565b60405180910390f35b61025560048036038101906102509190611f0b565b61088c565b6040516102629190611f75565b60405180910390f35b61028560048036038101906102809190612424565b61089d565b604051610292919061245e565b60405180910390f35b6102a3610953565b005b6102ad610966565b6040516102ba9190611f75565b60405180910390f35b6102dd60048036038101906102d89190612424565b61096d565b005b6102e76109c4565b6040516102f49190611f75565b60405180910390f35b6103056109ec565b6040516103129190611eb8565b60405180910390f35b61033560048036038101906103309190612424565b610a7c565b6040516103429190611e15565b60405180910390f35b610365600480360381019061036091906124a1565b610a99565b005b610381600480360381019061037c919061257d565b610aaf565b005b61039d60048036038101906103989190611f0b565b610acc565b6040516103aa9190611eb8565b60405180910390f35b6103cd60048036038101906103c89190612424565b610bd7565b005b6103e960048036038101906103e491906125fd565b610c2f565b6040516103f69190611e15565b60405180910390f35b61041960048036038101906104149190612424565b610cbd565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610474575061047382610d41565b5b9050919050565b60605f805461048990612668565b80601f01602080910402602001604051908101604052809291908181526020018280546104b590612668565b80156105005780601f106104d757610100808354040283529160200191610500565b820191905f5260205f20905b8154815290600101906020018083116104e357829003601f168201915b5050505050905090565b5f61051482610e22565b5061051e82610ea8565b9050919050565b6105378282610532610ee1565b610ee8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a29190611f75565b60405180910390fd5b5f6105be83836105b9610ee1565b610efa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610634578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062b93929190612698565b60405180910390fd5b50505050565b61065483838360405180602001604052805f815250610aaf565b505050565b606060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db9061273d565b60405180910390fd5b5f825167ffffffffffffffff811115610700576106ff61204a565b5b60405190808252806020026020018201604052801561073957816020015b610726611d52565b81526020019060019003908161071e5790505b5090505f5b8351811015610882575f6107526009611105565b905061075e6009611111565b6107868583815181106107745761077361275b565b5b60200260200101516020015182611125565b6107ae8186848151811061079d5761079c61275b565b5b602002602001015160400151611218565b60405180604001604052808684815181106107cc576107cb61275b565b5b60200260200101515f01518152602001828152508383815181106107f3576107f261275b565b5b60200260200101819052507ff371d67483809edbc84279729528d26a3e37ce67f1e3a911778dbf88ff927ca28583815181106108325761083161275b565b5b60200260200101515f0151828785815181106108515761085061275b565b5b60200260200101516020015160405161086c93929190612788565b60405180910390a150808060010191505061073e565b5080915050919050565b5f61089682610e22565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361090e575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016109059190611f75565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61095b611272565b6109645f6112f9565b565b5f33905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546109fb90612668565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2790612668565b8015610a725780601f10610a4957610100808354040283529160200191610a72565b820191905f5260205f20905b815481529060010190602001808311610a5557829003601f168201915b5050505050905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b610aab610aa4610ee1565b83836113bc565b5050565b610aba84848461053b565b610ac684848484611525565b50505050565b6060610ad782610e22565b505f60065f8481526020019081526020015f208054610af590612668565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2190612668565b8015610b6c5780601f10610b4357610100808354040283529160200191610b6c565b820191905f5260205f20905b815481529060010190602001808311610b4f57829003601f168201915b505050505090505f610b7c6116d7565b90505f815103610b90578192505050610bd2565b5f82511115610bc4578082604051602001610bac9291906127f7565b60405160208183030381529060405292505050610bd2565b610bcd846116ed565b925050505b919050565b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610cc5611272565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d35575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d2c9190611f75565b60405180910390fd5b610d3e816112f9565b50565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610e0b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610e1b5750610e1a82611753565b5b9050919050565b5f80610e2d836117bc565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e9f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e96919061245e565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ef583838360016117f5565b505050565b5f80610f05846117bc565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f4657610f458184866119b4565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fd157610f855f855f806117f5565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461105057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f815f01549050919050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611195575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161118c9190611f75565b60405180910390fd5b5f6111a183835f610efa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611213575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161120a9190611f75565b60405180910390fd5b505050565b8060065f8481526020019081526020015f20908161123691906129b7565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051611266919061245e565b60405180910390a15050565b61127a610ee1565b73ffffffffffffffffffffffffffffffffffffffff166112986109c4565b73ffffffffffffffffffffffffffffffffffffffff16146112f7576112bb610ee1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112ee9190611f75565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361142c57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016114239190611f75565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115189190611e15565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156116d1578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611568610ee1565b8685856040518563ffffffff1660e01b815260040161158a9493929190612ad8565b6020604051808303815f875af19250505080156115c557506040513d601f19601f820116820180604052508101906115c29190612b36565b60015b611646573d805f81146115f3576040519150601f19603f3d011682016040523d82523d5f602084013e6115f8565b606091505b505f81510361163e57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116359190611f75565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146116cf57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116c69190611f75565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606116f882610e22565b505f6117026116d7565b90505f8151116117205760405180602001604052805f81525061174b565b8061172a84611a77565b60405160200161173b9291906127f7565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061182d57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561195f575f61183c84610e22565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118a657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156118b957506118b78184610c2f565b155b156118fb57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118f29190611f75565b60405180910390fd5b811561195d57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6119bf838383611b41565b611a72575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a3357806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a2a919061245e565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a69929190612b61565b60405180910390fd5b505050565b60605f6001611a8584611c01565b0190505f8167ffffffffffffffff811115611aa357611aa261204a565b5b6040519080825280601f01601f191660200182016040528015611ad55781602001600182028036833780820191505090505b5090505f82602001820190505b600115611b36578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611b2b57611b2a612b88565b5b0494505f8503611ae2575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bf857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611bb95750611bb88484610c2f565b5b80611bf757508273ffffffffffffffffffffffffffffffffffffffff16611bdf83610ea8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c5d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c5357611c52612b88565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c9a576d04ee2d6d415b85acef81000000008381611c9057611c8f612b88565b5b0492506020810190505b662386f26fc100008310611cc957662386f26fc100008381611cbf57611cbe612b88565b5b0492506010810190505b6305f5e1008310611cf2576305f5e1008381611ce857611ce7612b88565b5b0492506008810190505b6127108310611d17576127108381611d0d57611d0c612b88565b5b0492506004810190505b60648310611d3a5760648381611d3057611d2f612b88565b5b0492506002810190505b600a8310611d49576001810190505b80915050919050565b60405180604001604052805f81526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611daf81611d7b565b8114611db9575f80fd5b50565b5f81359050611dca81611da6565b92915050565b5f60208284031215611de557611de4611d73565b5b5f611df284828501611dbc565b91505092915050565b5f8115159050919050565b611e0f81611dfb565b82525050565b5f602082019050611e285f830184611e06565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e65578082015181840152602081019050611e4a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e8a82611e2e565b611e948185611e38565b9350611ea4818560208601611e48565b611ead81611e70565b840191505092915050565b5f6020820190508181035f830152611ed08184611e80565b905092915050565b5f819050919050565b611eea81611ed8565b8114611ef4575f80fd5b50565b5f81359050611f0581611ee1565b92915050565b5f60208284031215611f2057611f1f611d73565b5b5f611f2d84828501611ef7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f5f82611f36565b9050919050565b611f6f81611f55565b82525050565b5f602082019050611f885f830184611f66565b92915050565b611f9781611f55565b8114611fa1575f80fd5b50565b5f81359050611fb281611f8e565b92915050565b5f8060408385031215611fce57611fcd611d73565b5b5f611fdb85828601611fa4565b9250506020611fec85828601611ef7565b9150509250929050565b5f805f6060848603121561200d5761200c611d73565b5b5f61201a86828701611fa4565b935050602061202b86828701611fa4565b925050604061203c86828701611ef7565b9150509250925092565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61208082611e70565b810181811067ffffffffffffffff8211171561209f5761209e61204a565b5b80604052505050565b5f6120b1611d6a565b90506120bd8282612077565b919050565b5f67ffffffffffffffff8211156120dc576120db61204a565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f67ffffffffffffffff8211156121175761211661204a565b5b61212082611e70565b9050602081019050919050565b828183375f83830152505050565b5f61214d612148846120fd565b6120a8565b905082815260208101848484011115612169576121686120f9565b5b61217484828561212d565b509392505050565b5f82601f8301126121905761218f612046565b5b81356121a084826020860161213b565b91505092915050565b5f606082840312156121be576121bd6120f1565b5b6121c860606120a8565b90505f6121d784828501611ef7565b5f8301525060206121ea84828501611fa4565b602083015250604082013567ffffffffffffffff81111561220e5761220d6120f5565b5b61221a8482850161217c565b60408301525092915050565b5f612238612233846120c2565b6120a8565b9050808382526020820190506020840283018581111561225b5761225a6120ed565b5b835b818110156122a257803567ffffffffffffffff8111156122805761227f612046565b5b80860161228d89826121a9565b8552602085019450505060208101905061225d565b5050509392505050565b5f82601f8301126122c0576122bf612046565b5b81356122d0848260208601612226565b91505092915050565b5f602082840312156122ee576122ed611d73565b5b5f82013567ffffffffffffffff81111561230b5761230a611d77565b5b612317848285016122ac565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61235281611ed8565b82525050565b604082015f82015161236c5f850182612349565b50602082015161237f6020850182612349565b50505050565b5f6123908383612358565b60408301905092915050565b5f602082019050919050565b5f6123b282612320565b6123bc818561232a565b93506123c78361233a565b805f5b838110156123f75781516123de8882612385565b97506123e98361239c565b9250506001810190506123ca565b5085935050505092915050565b5f6020820190508181035f83015261241c81846123a8565b905092915050565b5f6020828403121561243957612438611d73565b5b5f61244684828501611fa4565b91505092915050565b61245881611ed8565b82525050565b5f6020820190506124715f83018461244f565b92915050565b61248081611dfb565b811461248a575f80fd5b50565b5f8135905061249b81612477565b92915050565b5f80604083850312156124b7576124b6611d73565b5b5f6124c485828601611fa4565b92505060206124d58582860161248d565b9150509250929050565b5f67ffffffffffffffff8211156124f9576124f861204a565b5b61250282611e70565b9050602081019050919050565b5f61252161251c846124df565b6120a8565b90508281526020810184848401111561253d5761253c6120f9565b5b61254884828561212d565b509392505050565b5f82601f83011261256457612563612046565b5b813561257484826020860161250f565b91505092915050565b5f805f806080858703121561259557612594611d73565b5b5f6125a287828801611fa4565b94505060206125b387828801611fa4565b93505060406125c487828801611ef7565b925050606085013567ffffffffffffffff8111156125e5576125e4611d77565b5b6125f187828801612550565b91505092959194509250565b5f806040838503121561261357612612611d73565b5b5f61262085828601611fa4565b925050602061263185828601611fa4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061267f57607f821691505b6020821081036126925761269161263b565b5b50919050565b5f6060820190506126ab5f830186611f66565b6126b8602083018561244f565b6126c56040830184611f66565b949350505050565b7f4e6569746865722073656e646572206e6f7220726563697069656e74206973205f8201527f77686974656c6973746564000000000000000000000000000000000000000000602082015250565b5f612727602b83611e38565b9150612732826126cd565b604082019050919050565b5f6020820190508181035f8301526127548161271b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60608201905061279b5f83018661244f565b6127a8602083018561244f565b6127b56040830184611f66565b949350505050565b5f81905092915050565b5f6127d182611e2e565b6127db81856127bd565b93506127eb818560208601611e48565b80840191505092915050565b5f61280282856127c7565b915061280e82846127c7565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026128767fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261283b565b612880868361283b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6128bb6128b66128b184611ed8565b612898565b611ed8565b9050919050565b5f819050919050565b6128d4836128a1565b6128e86128e0826128c2565b848454612847565b825550505050565b5f90565b6128fc6128f0565b6129078184846128cb565b505050565b5b8181101561292a5761291f5f826128f4565b60018101905061290d565b5050565b601f82111561296f576129408161281a565b6129498461282c565b81016020851015612958578190505b61296c6129648561282c565b83018261290c565b50505b505050565b5f82821c905092915050565b5f61298f5f1984600802612974565b1980831691505092915050565b5f6129a78383612980565b9150826002028217905092915050565b6129c082611e2e565b67ffffffffffffffff8111156129d9576129d861204a565b5b6129e38254612668565b6129ee82828561292e565b5f60209050601f831160018114612a1f575f8415612a0d578287015190505b612a17858261299c565b865550612a7e565b601f198416612a2d8661281a565b5f5b82811015612a5457848901518255600182019150602085019450602081019050612a2f565b86831015612a715784890151612a6d601f891682612980565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f612aaa82612a86565b612ab48185612a90565b9350612ac4818560208601611e48565b612acd81611e70565b840191505092915050565b5f608082019050612aeb5f830187611f66565b612af86020830186611f66565b612b05604083018561244f565b8181036060830152612b178184612aa0565b905095945050505050565b5f81519050612b3081611da6565b92915050565b5f60208284031215612b4b57612b4a611d73565b5b5f612b5884828501612b22565b91505092915050565b5f604082019050612b745f830185611f66565b612b81602083018461244f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220ad76c30dd6e338fd6cd7ad6bbaa2112efd07103885789eb5bf4b2ce6ac01b3df64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696D706C654E46540000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x455 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x455 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x116 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x127 DUP2 PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x597 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x26D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x283 JUMPI PUSH3 0x282 PUSH3 0x228 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x2E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x2F3 DUP7 DUP4 PUSH3 0x2AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x33D PUSH3 0x337 PUSH3 0x331 DUP5 PUSH3 0x30B JUMP JUMPDEST PUSH3 0x314 JUMP JUMPDEST PUSH3 0x30B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x358 DUP4 PUSH3 0x31D JUMP JUMPDEST PUSH3 0x370 PUSH3 0x367 DUP3 PUSH3 0x344 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2B6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x386 PUSH3 0x378 JUMP JUMPDEST PUSH3 0x393 DUP2 DUP5 DUP5 PUSH3 0x34D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3BA JUMPI PUSH3 0x3AE PUSH0 DUP3 PUSH3 0x37C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x399 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x409 JUMPI PUSH3 0x3D3 DUP2 PUSH3 0x289 JUMP JUMPDEST PUSH3 0x3DE DUP5 PUSH3 0x29B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3EE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x406 PUSH3 0x3FD DUP6 PUSH3 0x29B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x398 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x42B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x40E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x445 DUP4 DUP4 PUSH3 0x41A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x460 DUP3 PUSH3 0x1F1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x47C JUMPI PUSH3 0x47B PUSH3 0x1FB JUMP JUMPDEST JUMPDEST PUSH3 0x488 DUP3 SLOAD PUSH3 0x255 JUMP JUMPDEST PUSH3 0x495 DUP3 DUP3 DUP6 PUSH3 0x3BE JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4CB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x4B6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4C2 DUP6 DUP3 PUSH3 0x438 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x531 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4DB DUP7 PUSH3 0x289 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x504 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4DD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x524 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x520 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x41A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x564 DUP3 PUSH3 0x539 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x576 DUP2 PUSH3 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x591 PUSH0 DUP4 ADD DUP5 PUSH3 0x56B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BEB DUP1 PUSH3 0x5A5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A6CE2E1 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FF JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x7A6CE2E1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x31B JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x5F6C96A0 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29B JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1DD0 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x953 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E7 PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x24A1 JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x474 JUMPI POP PUSH2 0x473 DUP3 PUSH2 0xD41 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x500 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x500 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x514 DUP3 PUSH2 0xE22 JUMP JUMPDEST POP PUSH2 0x51E DUP3 PUSH2 0xEA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537 DUP3 DUP3 PUSH2 0x532 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5BE DUP4 DUP4 PUSH2 0x5B9 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0xEFA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x634 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x654 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP1 PUSH2 0x273D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x700 JUMPI PUSH2 0x6FF PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x739 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x726 PUSH2 0x1D52 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x71E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x882 JUMPI PUSH0 PUSH2 0x752 PUSH1 0x9 PUSH2 0x1105 JUMP JUMPDEST SWAP1 POP PUSH2 0x75E PUSH1 0x9 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x786 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x774 JUMPI PUSH2 0x773 PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x7AE DUP2 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CC JUMPI PUSH2 0x7CB PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F3 JUMPI PUSH2 0x7F2 PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH32 0xF371D67483809EDBC84279729528D26A3E37CE67F1E3A911778DBF88FF927CA2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x832 JUMPI PUSH2 0x831 PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP3 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x851 JUMPI PUSH2 0x850 PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x86C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x73E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x896 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95B PUSH2 0x1272 JUMP JUMPDEST PUSH2 0x964 PUSH0 PUSH2 0x12F9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9FB SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA27 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA72 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA49 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA72 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA55 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xAAB PUSH2 0xAA4 PUSH2 0xEE1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x13BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xABA DUP5 DUP5 DUP5 PUSH2 0x53B JUMP JUMPDEST PUSH2 0xAC6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1525 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAD7 DUP3 PUSH2 0xE22 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xAF5 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB21 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB6C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB43 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB6C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB4F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xB7C PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xB90 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xBD2 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xBC4 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBAC SWAP3 SWAP2 SWAP1 PUSH2 0x27F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0xBCD DUP5 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC5 PUSH2 0x1272 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD3E DUP2 PUSH2 0x12F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xE0B JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xE1B JUMPI POP PUSH2 0xE1A DUP3 PUSH2 0x1753 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE2D DUP4 PUSH2 0x17BC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE9F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEF5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x17F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF05 DUP5 PUSH2 0x17BC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF46 JUMPI PUSH2 0xF45 DUP2 DUP5 DUP7 PUSH2 0x19B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD1 JUMPI PUSH2 0xF85 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1050 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1195 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x11A1 DUP4 DUP4 PUSH0 PUSH2 0xEFA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1213 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1236 SWAP2 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x127A PUSH2 0xEE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1298 PUSH2 0x9C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12F7 JUMPI PUSH2 0x12BB PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EE SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x142C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1423 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1518 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x16D1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1568 PUSH2 0xEE1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15C5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C2 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1646 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x163E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1635 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x16CF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C6 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16F8 DUP3 PUSH2 0xE22 JUMP JUMPDEST POP PUSH0 PUSH2 0x1702 PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1720 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x174B JUMP JUMPDEST DUP1 PUSH2 0x172A DUP5 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x173B SWAP3 SWAP2 SWAP1 PUSH2 0x27F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x182D JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x195F JUMPI PUSH0 PUSH2 0x183C DUP5 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18A6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x18B9 JUMPI POP PUSH2 0x18B7 DUP2 DUP5 PUSH2 0xC2F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x18FB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F2 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x195D JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19BF DUP4 DUP4 DUP4 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x1A72 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A33 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A69 SWAP3 SWAP2 SWAP1 PUSH2 0x2B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1A85 DUP5 PUSH2 0x1C01 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA3 JUMPI PUSH2 0x1AA2 PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AD5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B36 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1B2B JUMPI PUSH2 0x1B2A PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1AE2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BF8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BB9 JUMPI POP PUSH2 0x1BB8 DUP5 DUP5 PUSH2 0xC2F JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BF7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BDF DUP4 PUSH2 0xEA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C5D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C9A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C90 JUMPI PUSH2 0x1C8F PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CC9 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1CBF JUMPI PUSH2 0x1CBE PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CF2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1D17 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1D3A JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1D30 JUMPI PUSH2 0x1D2F PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D49 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DAF DUP2 PUSH2 0x1D7B JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DCA DUP2 PUSH2 0x1DA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE5 JUMPI PUSH2 0x1DE4 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E0F DUP2 PUSH2 0x1DFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E28 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E65 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E4A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8A DUP3 PUSH2 0x1E2E JUMP JUMPDEST PUSH2 0x1E94 DUP2 DUP6 PUSH2 0x1E38 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EA4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x1EAD DUP2 PUSH2 0x1E70 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED0 DUP2 DUP5 PUSH2 0x1E80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1ED8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F05 DUP2 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F20 JUMPI PUSH2 0x1F1F PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2D DUP5 DUP3 DUP6 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5F DUP3 PUSH2 0x1F36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6F DUP2 PUSH2 0x1F55 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F88 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F97 DUP2 PUSH2 0x1F55 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FB2 DUP2 PUSH2 0x1F8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FCE JUMPI PUSH2 0x1FCD PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDB DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FEC DUP6 DUP3 DUP7 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x200D JUMPI PUSH2 0x200C PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x201A DUP7 DUP3 DUP8 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x202B DUP7 DUP3 DUP8 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x203C DUP7 DUP3 DUP8 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2080 DUP3 PUSH2 0x1E70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x209E PUSH2 0x204A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B1 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP PUSH2 0x20BD DUP3 DUP3 PUSH2 0x2077 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20DC JUMPI PUSH2 0x20DB PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2117 JUMPI PUSH2 0x2116 PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH2 0x2120 DUP3 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x214D PUSH2 0x2148 DUP5 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2169 JUMPI PUSH2 0x2168 PUSH2 0x20F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2174 DUP5 DUP3 DUP6 PUSH2 0x212D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2190 JUMPI PUSH2 0x218F PUSH2 0x2046 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21A0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x213B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21BE JUMPI PUSH2 0x21BD PUSH2 0x20F1 JUMP JUMPDEST JUMPDEST PUSH2 0x21C8 PUSH1 0x60 PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x21D7 DUP5 DUP3 DUP6 ADD PUSH2 0x1EF7 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x21EA DUP5 DUP3 DUP6 ADD PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x220E JUMPI PUSH2 0x220D PUSH2 0x20F5 JUMP JUMPDEST JUMPDEST PUSH2 0x221A DUP5 DUP3 DUP6 ADD PUSH2 0x217C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2238 PUSH2 0x2233 DUP5 PUSH2 0x20C2 JUMP JUMPDEST PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x225B JUMPI PUSH2 0x225A PUSH2 0x20ED JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22A2 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2280 JUMPI PUSH2 0x227F PUSH2 0x2046 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x228D DUP10 DUP3 PUSH2 0x21A9 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x225D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22C0 JUMPI PUSH2 0x22BF PUSH2 0x2046 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2226 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22EE JUMPI PUSH2 0x22ED PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230B JUMPI PUSH2 0x230A PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH2 0x2317 DUP5 DUP3 DUP6 ADD PUSH2 0x22AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2352 DUP2 PUSH2 0x1ED8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x236C PUSH0 DUP6 ADD DUP3 PUSH2 0x2349 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x237F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2349 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2390 DUP4 DUP4 PUSH2 0x2358 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B2 DUP3 PUSH2 0x2320 JUMP JUMPDEST PUSH2 0x23BC DUP2 DUP6 PUSH2 0x232A JUMP JUMPDEST SWAP4 POP PUSH2 0x23C7 DUP4 PUSH2 0x233A JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23F7 JUMPI DUP2 MLOAD PUSH2 0x23DE DUP9 DUP3 PUSH2 0x2385 JUMP JUMPDEST SWAP8 POP PUSH2 0x23E9 DUP4 PUSH2 0x239C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23CA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x241C DUP2 DUP5 PUSH2 0x23A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2439 JUMPI PUSH2 0x2438 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2446 DUP5 DUP3 DUP6 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2458 DUP2 PUSH2 0x1ED8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2471 PUSH0 DUP4 ADD DUP5 PUSH2 0x244F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2480 DUP2 PUSH2 0x1DFB JUMP JUMPDEST DUP2 EQ PUSH2 0x248A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x249B DUP2 PUSH2 0x2477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24B7 JUMPI PUSH2 0x24B6 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24C4 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24D5 DUP6 DUP3 DUP7 ADD PUSH2 0x248D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24F9 JUMPI PUSH2 0x24F8 PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH2 0x2502 DUP3 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2521 PUSH2 0x251C DUP5 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x253D JUMPI PUSH2 0x253C PUSH2 0x20F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2548 DUP5 DUP3 DUP6 PUSH2 0x212D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2564 JUMPI PUSH2 0x2563 PUSH2 0x2046 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2574 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x250F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2595 JUMPI PUSH2 0x2594 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25A2 DUP8 DUP3 DUP9 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x25B3 DUP8 DUP3 DUP9 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x25C4 DUP8 DUP3 DUP9 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25E5 JUMPI PUSH2 0x25E4 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH2 0x25F1 DUP8 DUP3 DUP9 ADD PUSH2 0x2550 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2613 JUMPI PUSH2 0x2612 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2620 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2631 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x267F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2692 JUMPI PUSH2 0x2691 PUSH2 0x263B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26AB PUSH0 DUP4 ADD DUP7 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x26B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x26C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6569746865722073656E646572206E6F7220726563697069656E7420697320 PUSH0 DUP3 ADD MSTORE PUSH32 0x77686974656C6973746564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2727 PUSH1 0x2B DUP4 PUSH2 0x1E38 JUMP JUMPDEST SWAP2 POP PUSH2 0x2732 DUP3 PUSH2 0x26CD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2754 DUP2 PUSH2 0x271B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x279B PUSH0 DUP4 ADD DUP7 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x27A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x27B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27D1 DUP3 PUSH2 0x1E2E JUMP JUMPDEST PUSH2 0x27DB DUP2 DUP6 PUSH2 0x27BD JUMP JUMPDEST SWAP4 POP PUSH2 0x27EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E48 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2802 DUP3 DUP6 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x280E DUP3 DUP5 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2876 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x2880 DUP7 DUP4 PUSH2 0x283B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28BB PUSH2 0x28B6 PUSH2 0x28B1 DUP5 PUSH2 0x1ED8 JUMP JUMPDEST PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28D4 DUP4 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x28E8 PUSH2 0x28E0 DUP3 PUSH2 0x28C2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2847 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x28FC PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x2907 DUP2 DUP5 DUP5 PUSH2 0x28CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x292A JUMPI PUSH2 0x291F PUSH0 DUP3 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x290D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x296F JUMPI PUSH2 0x2940 DUP2 PUSH2 0x281A JUMP JUMPDEST PUSH2 0x2949 DUP5 PUSH2 0x282C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2958 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x296C PUSH2 0x2964 DUP6 PUSH2 0x282C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x290C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x298F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2974 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29A7 DUP4 DUP4 PUSH2 0x2980 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29C0 DUP3 PUSH2 0x1E2E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29D9 JUMPI PUSH2 0x29D8 PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH2 0x29E3 DUP3 SLOAD PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x29EE DUP3 DUP3 DUP6 PUSH2 0x292E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A1F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2A0D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2A17 DUP6 DUP3 PUSH2 0x299C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2A2D DUP7 PUSH2 0x281A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A54 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A2F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2A71 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2A6D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2980 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AAA DUP3 PUSH2 0x2A86 JUMP JUMPDEST PUSH2 0x2AB4 DUP2 DUP6 PUSH2 0x2A90 JUMP JUMPDEST SWAP4 POP PUSH2 0x2AC4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x2ACD DUP2 PUSH2 0x1E70 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2AEB PUSH0 DUP4 ADD DUP8 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x2AF8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x2B05 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x244F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B17 DUP2 DUP5 PUSH2 0x2AA0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B30 DUP2 PUSH2 0x1DA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B4B JUMPI PUSH2 0x2B4A PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B58 DUP5 DUP3 DUP6 ADD PUSH2 0x2B22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B74 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x2B81 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x244F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH23 0xC30DD6E338FD6CD7AD6BBAA2112EFD07103885789EB5BF 0x4B 0x2C 0xE6 0xAC ADD 0xB3 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "250:2165:17:-:0;;;1014:64;;;;;;;;;;1064:10;1381:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;250:2165:17;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:18:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;250:2165:17:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1128": {
									"entryPoint": 3816,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 6133,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_521": {
									"entryPoint": 5847,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_776": {
									"entryPoint": 6580,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 5413,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4722,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": 3752,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 6977,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_932": {
									"entryPoint": 4389,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1626": {
									"entryPoint": 3809,
									"id": 1626,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": 6076,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1260": {
									"entryPoint": 3618,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 5052,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1585": {
									"entryPoint": 4632,
									"id": 1585,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4857,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_882": {
									"entryPoint": 3834,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@addToWhitelist_3216": {
									"entryPoint": 3031,
									"id": 3216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_537": {
									"entryPoint": 1317,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 2205,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_1654": {
									"entryPoint": 4357,
									"id": 1654,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_554": {
									"entryPoint": 1290,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMsgSender_3344": {
									"entryPoint": 2406,
									"id": 3344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_1668": {
									"entryPoint": 4369,
									"id": 1668,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_587": {
									"entryPoint": 3119,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2875": {
									"entryPoint": 7169,
									"id": 2875,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintNFT_3335": {
									"entryPoint": 1625,
									"id": 3335,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_467": {
									"entryPoint": 1147,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 2188,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2500,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhitelist_3228": {
									"entryPoint": 2413,
									"id": 3228,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2387,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1594,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 2735,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 2713,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1509": {
									"entryPoint": 1051,
									"id": 1509,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1988": {
									"entryPoint": 5971,
									"id": 1988,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 3393,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 2540,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1778": {
									"entryPoint": 6775,
									"id": 1778,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1566": {
									"entryPoint": 2764,
									"id": 1566,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_512": {
									"entryPoint": 5869,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 1339,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3261,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelist_3177": {
									"entryPoint": 2684,
									"id": 3177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8742,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9487,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_BadgeInfo_$3187_memory_ptr": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr": {
									"entryPoint": 9093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr": {
									"entryPoint": 9048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 9033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10231,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10968,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11105,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9880,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10120,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7530,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8493,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": 11144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9787,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8262,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 8433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca": {
									"entryPoint": 9933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10311,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10443,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28937:18",
										"nodeType": "YulBlock",
										"src": "0:28937:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "378:105:18",
													"nodeType": "YulBlock",
													"src": "378:105:18",
													"statements": [
														{
															"nativeSrc": "388:89:18",
															"nodeType": "YulAssignment",
															"src": "388:89:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:18",
																		"nodeType": "YulLiteral",
																		"src": "410:66:18",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:18"
																},
																"nativeSrc": "399:78:18",
																"nodeType": "YulFunctionCall",
																"src": "399:78:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:18",
														"nodeType": "YulTypedName",
														"src": "360:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:18",
														"nodeType": "YulTypedName",
														"src": "370:7:18",
														"type": ""
													}
												],
												"src": "334:149:18"
											},
											{
												"body": {
													"nativeSrc": "531:78:18",
													"nodeType": "YulBlock",
													"src": "531:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:18",
																"nodeType": "YulBlock",
																"src": "587:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:18",
																					"nodeType": "YulLiteral",
																					"src": "596:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "599:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:18"
																			},
																			"nativeSrc": "589:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:18"
																		},
																		"nativeSrc": "589:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:18"
																				},
																				"nativeSrc": "561:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:18"
																		},
																		"nativeSrc": "551:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:18"
																},
																"nativeSrc": "544:42:18",
																"nodeType": "YulFunctionCall",
																"src": "544:42:18"
															},
															"nativeSrc": "541:62:18",
															"nodeType": "YulIf",
															"src": "541:62:18"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:18",
														"nodeType": "YulTypedName",
														"src": "524:5:18",
														"type": ""
													}
												],
												"src": "489:120:18"
											},
											{
												"body": {
													"nativeSrc": "666:86:18",
													"nodeType": "YulBlock",
													"src": "666:86:18",
													"statements": [
														{
															"nativeSrc": "676:29:18",
															"nodeType": "YulAssignment",
															"src": "676:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:18"
																},
																"nativeSrc": "685:20:18",
																"nodeType": "YulFunctionCall",
																"src": "685:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:18"
																},
																"nativeSrc": "714:32:18",
																"nodeType": "YulFunctionCall",
																"src": "714:32:18"
															},
															"nativeSrc": "714:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:18",
														"nodeType": "YulTypedName",
														"src": "644:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:18",
														"nodeType": "YulTypedName",
														"src": "652:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:18",
														"nodeType": "YulTypedName",
														"src": "660:5:18",
														"type": ""
													}
												],
												"src": "615:137:18"
											},
											{
												"body": {
													"nativeSrc": "823:262:18",
													"nodeType": "YulBlock",
													"src": "823:262:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:18",
																"nodeType": "YulBlock",
																"src": "869:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:18"
																			},
																			"nativeSrc": "871:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:18"
																		},
																		"nativeSrc": "871:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:18"
																		},
																		"nativeSrc": "840:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:18",
																		"nodeType": "YulLiteral",
																		"src": "865:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:18"
																},
																"nativeSrc": "836:32:18",
																"nodeType": "YulFunctionCall",
																"src": "836:32:18"
															},
															"nativeSrc": "833:119:18",
															"nodeType": "YulIf",
															"src": "833:119:18"
														},
														{
															"nativeSrc": "962:116:18",
															"nodeType": "YulBlock",
															"src": "962:116:18",
															"statements": [
																{
																	"nativeSrc": "977:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:18",
																		"nodeType": "YulLiteral",
																		"src": "991:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:18",
																			"nodeType": "YulTypedName",
																			"src": "981:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:18",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:18"
																				},
																				"nativeSrc": "1036:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:18",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:18"
																		},
																		"nativeSrc": "1016:52:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:18",
														"nodeType": "YulTypedName",
														"src": "793:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:18",
														"nodeType": "YulTypedName",
														"src": "804:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:18",
														"nodeType": "YulTypedName",
														"src": "816:6:18",
														"type": ""
													}
												],
												"src": "758:327:18"
											},
											{
												"body": {
													"nativeSrc": "1133:48:18",
													"nodeType": "YulBlock",
													"src": "1133:48:18",
													"statements": [
														{
															"nativeSrc": "1143:32:18",
															"nodeType": "YulAssignment",
															"src": "1143:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:18"
																		},
																		"nativeSrc": "1161:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:18"
																},
																"nativeSrc": "1154:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:18",
														"nodeType": "YulTypedName",
														"src": "1115:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:18",
														"nodeType": "YulTypedName",
														"src": "1125:7:18",
														"type": ""
													}
												],
												"src": "1091:90:18"
											},
											{
												"body": {
													"nativeSrc": "1246:50:18",
													"nodeType": "YulBlock",
													"src": "1246:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:18"
																		},
																		"nativeSrc": "1268:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:18"
																},
																"nativeSrc": "1256:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:18"
															},
															"nativeSrc": "1256:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:18",
														"nodeType": "YulTypedName",
														"src": "1234:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:18",
														"nodeType": "YulTypedName",
														"src": "1241:3:18",
														"type": ""
													}
												],
												"src": "1187:109:18"
											},
											{
												"body": {
													"nativeSrc": "1394:118:18",
													"nodeType": "YulBlock",
													"src": "1394:118:18",
													"statements": [
														{
															"nativeSrc": "1404:26:18",
															"nodeType": "YulAssignment",
															"src": "1404:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:18"
																},
																"nativeSrc": "1412:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:18"
																		},
																		"nativeSrc": "1487:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:18"
																},
																"nativeSrc": "1440:65:18",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:18"
															},
															"nativeSrc": "1440:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:18",
														"nodeType": "YulTypedName",
														"src": "1366:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:18",
														"nodeType": "YulTypedName",
														"src": "1378:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:18",
														"nodeType": "YulTypedName",
														"src": "1389:4:18",
														"type": ""
													}
												],
												"src": "1302:210:18"
											},
											{
												"body": {
													"nativeSrc": "1577:40:18",
													"nodeType": "YulBlock",
													"src": "1577:40:18",
													"statements": [
														{
															"nativeSrc": "1588:22:18",
															"nodeType": "YulAssignment",
															"src": "1588:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:18"
																},
																"nativeSrc": "1598:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:18",
														"nodeType": "YulTypedName",
														"src": "1560:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:18",
														"nodeType": "YulTypedName",
														"src": "1570:6:18",
														"type": ""
													}
												],
												"src": "1518:99:18"
											},
											{
												"body": {
													"nativeSrc": "1719:73:18",
													"nodeType": "YulBlock",
													"src": "1719:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:18"
																},
																"nativeSrc": "1729:19:18",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:18"
															},
															"nativeSrc": "1729:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:18"
														},
														{
															"nativeSrc": "1757:29:18",
															"nodeType": "YulAssignment",
															"src": "1757:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:18"
																},
																"nativeSrc": "1772:14:18",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:18",
														"nodeType": "YulTypedName",
														"src": "1691:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:18",
														"nodeType": "YulTypedName",
														"src": "1696:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:18",
														"nodeType": "YulTypedName",
														"src": "1707:11:18",
														"type": ""
													}
												],
												"src": "1623:169:18"
											},
											{
												"body": {
													"nativeSrc": "1860:184:18",
													"nodeType": "YulBlock",
													"src": "1860:184:18",
													"statements": [
														{
															"nativeSrc": "1870:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:18",
																"nodeType": "YulLiteral",
																"src": "1879:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:18",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:18",
																"nodeType": "YulBlock",
																"src": "1939:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:18"
																					},
																					"nativeSrc": "1960:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:18"
																							},
																							"nativeSrc": "1979:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:18"
																					},
																					"nativeSrc": "1973:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:18"
																			},
																			"nativeSrc": "1953:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:18"
																		},
																		"nativeSrc": "1953:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:18"
																},
																"nativeSrc": "1897:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:18"
															},
															"nativeSrc": "1889:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:18",
																"nodeType": "YulBlock",
																"src": "1911:19:18",
																"statements": [
																	{
																		"nativeSrc": "1913:15:18",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:18",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:18"
																			},
																			"nativeSrc": "1918:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:18",
																"nodeType": "YulBlock",
																"src": "1893:3:18",
																"statements": []
															},
															"src": "1889:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:18"
																		},
																		"nativeSrc": "2018:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:18"
																},
																"nativeSrc": "2011:27:18",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:18"
															},
															"nativeSrc": "2011:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:18",
														"nodeType": "YulTypedName",
														"src": "1842:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:18",
														"nodeType": "YulTypedName",
														"src": "1847:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:18",
														"nodeType": "YulTypedName",
														"src": "1852:6:18",
														"type": ""
													}
												],
												"src": "1798:246:18"
											},
											{
												"body": {
													"nativeSrc": "2098:54:18",
													"nodeType": "YulBlock",
													"src": "2098:54:18",
													"statements": [
														{
															"nativeSrc": "2108:38:18",
															"nodeType": "YulAssignment",
															"src": "2108:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:18"
																		},
																		"nativeSrc": "2122:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:18"
																		},
																		"nativeSrc": "2138:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:18"
																},
																"nativeSrc": "2118:28:18",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:18",
														"nodeType": "YulTypedName",
														"src": "2081:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:18",
														"nodeType": "YulTypedName",
														"src": "2091:6:18",
														"type": ""
													}
												],
												"src": "2050:102:18"
											},
											{
												"body": {
													"nativeSrc": "2250:285:18",
													"nodeType": "YulBlock",
													"src": "2250:285:18",
													"statements": [
														{
															"nativeSrc": "2260:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:18"
																},
																"nativeSrc": "2274:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:18",
															"nodeType": "YulAssignment",
															"src": "2322:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:18"
																},
																"nativeSrc": "2329:71:18",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:18"
																		},
																		"nativeSrc": "2444:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:18"
																},
																"nativeSrc": "2409:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:18"
															},
															"nativeSrc": "2409:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:18"
														},
														{
															"nativeSrc": "2483:46:18",
															"nodeType": "YulAssignment",
															"src": "2483:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:18"
																		},
																		"nativeSrc": "2499:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:18"
																},
																"nativeSrc": "2490:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:18",
														"nodeType": "YulTypedName",
														"src": "2231:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:18",
														"nodeType": "YulTypedName",
														"src": "2238:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:18",
														"nodeType": "YulTypedName",
														"src": "2246:3:18",
														"type": ""
													}
												],
												"src": "2158:377:18"
											},
											{
												"body": {
													"nativeSrc": "2659:195:18",
													"nodeType": "YulBlock",
													"src": "2659:195:18",
													"statements": [
														{
															"nativeSrc": "2669:26:18",
															"nodeType": "YulAssignment",
															"src": "2669:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:18"
																},
																"nativeSrc": "2677:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:18"
																		},
																		"nativeSrc": "2712:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:18"
																		},
																		"nativeSrc": "2731:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:18"
																},
																"nativeSrc": "2705:47:18",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:18"
															},
															"nativeSrc": "2705:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:18"
														},
														{
															"nativeSrc": "2761:86:18",
															"nodeType": "YulAssignment",
															"src": "2761:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:18"
																},
																"nativeSrc": "2769:78:18",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:18",
														"nodeType": "YulTypedName",
														"src": "2631:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:18",
														"nodeType": "YulTypedName",
														"src": "2643:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:18",
														"nodeType": "YulTypedName",
														"src": "2654:4:18",
														"type": ""
													}
												],
												"src": "2541:313:18"
											},
											{
												"body": {
													"nativeSrc": "2905:32:18",
													"nodeType": "YulBlock",
													"src": "2905:32:18",
													"statements": [
														{
															"nativeSrc": "2915:16:18",
															"nodeType": "YulAssignment",
															"src": "2915:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:18",
																"nodeType": "YulIdentifier",
																"src": "2926:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:18",
														"nodeType": "YulTypedName",
														"src": "2887:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:18",
														"nodeType": "YulTypedName",
														"src": "2897:7:18",
														"type": ""
													}
												],
												"src": "2860:77:18"
											},
											{
												"body": {
													"nativeSrc": "2986:79:18",
													"nodeType": "YulBlock",
													"src": "2986:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:18",
																"nodeType": "YulBlock",
																"src": "3043:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:18"
																			},
																			"nativeSrc": "3045:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:18"
																		},
																		"nativeSrc": "3045:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:18"
																				},
																				"nativeSrc": "3016:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:18"
																		},
																		"nativeSrc": "3006:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:18"
																},
																"nativeSrc": "2999:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:18"
															},
															"nativeSrc": "2996:63:18",
															"nodeType": "YulIf",
															"src": "2996:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:18",
														"nodeType": "YulTypedName",
														"src": "2979:5:18",
														"type": ""
													}
												],
												"src": "2943:122:18"
											},
											{
												"body": {
													"nativeSrc": "3123:87:18",
													"nodeType": "YulBlock",
													"src": "3123:87:18",
													"statements": [
														{
															"nativeSrc": "3133:29:18",
															"nodeType": "YulAssignment",
															"src": "3133:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:18"
																},
																"nativeSrc": "3142:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:18"
																},
																"nativeSrc": "3171:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:18"
															},
															"nativeSrc": "3171:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:18",
														"nodeType": "YulTypedName",
														"src": "3101:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:18",
														"nodeType": "YulTypedName",
														"src": "3109:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:18",
														"nodeType": "YulTypedName",
														"src": "3117:5:18",
														"type": ""
													}
												],
												"src": "3071:139:18"
											},
											{
												"body": {
													"nativeSrc": "3282:263:18",
													"nodeType": "YulBlock",
													"src": "3282:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:18",
																"nodeType": "YulBlock",
																"src": "3328:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:18"
																			},
																			"nativeSrc": "3330:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:18"
																		},
																		"nativeSrc": "3330:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:18"
																		},
																		"nativeSrc": "3299:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:18"
																},
																"nativeSrc": "3295:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:18"
															},
															"nativeSrc": "3292:119:18",
															"nodeType": "YulIf",
															"src": "3292:119:18"
														},
														{
															"nativeSrc": "3421:117:18",
															"nodeType": "YulBlock",
															"src": "3421:117:18",
															"statements": [
																{
																	"nativeSrc": "3436:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:18"
																				},
																				"nativeSrc": "3496:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:18"
																		},
																		"nativeSrc": "3475:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:18",
														"nodeType": "YulTypedName",
														"src": "3252:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:18",
														"nodeType": "YulTypedName",
														"src": "3263:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:18",
														"nodeType": "YulTypedName",
														"src": "3275:6:18",
														"type": ""
													}
												],
												"src": "3216:329:18"
											},
											{
												"body": {
													"nativeSrc": "3596:81:18",
													"nodeType": "YulBlock",
													"src": "3596:81:18",
													"statements": [
														{
															"nativeSrc": "3606:65:18",
															"nodeType": "YulAssignment",
															"src": "3606:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:18",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:18"
																},
																"nativeSrc": "3617:54:18",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:18",
														"nodeType": "YulTypedName",
														"src": "3578:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:18",
														"nodeType": "YulTypedName",
														"src": "3588:7:18",
														"type": ""
													}
												],
												"src": "3551:126:18"
											},
											{
												"body": {
													"nativeSrc": "3728:51:18",
													"nodeType": "YulBlock",
													"src": "3728:51:18",
													"statements": [
														{
															"nativeSrc": "3738:35:18",
															"nodeType": "YulAssignment",
															"src": "3738:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:18"
																},
																"nativeSrc": "3749:24:18",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:18",
														"nodeType": "YulTypedName",
														"src": "3710:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:18",
														"nodeType": "YulTypedName",
														"src": "3720:7:18",
														"type": ""
													}
												],
												"src": "3683:96:18"
											},
											{
												"body": {
													"nativeSrc": "3850:53:18",
													"nodeType": "YulBlock",
													"src": "3850:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:18"
																		},
																		"nativeSrc": "3872:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:18"
																},
																"nativeSrc": "3860:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:18"
															},
															"nativeSrc": "3860:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:18",
														"nodeType": "YulTypedName",
														"src": "3838:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:18",
														"nodeType": "YulTypedName",
														"src": "3845:3:18",
														"type": ""
													}
												],
												"src": "3785:118:18"
											},
											{
												"body": {
													"nativeSrc": "4007:124:18",
													"nodeType": "YulBlock",
													"src": "4007:124:18",
													"statements": [
														{
															"nativeSrc": "4017:26:18",
															"nodeType": "YulAssignment",
															"src": "4017:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:18"
																},
																"nativeSrc": "4025:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:18"
																		},
																		"nativeSrc": "4106:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:18"
																},
																"nativeSrc": "4053:71:18",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:18"
															},
															"nativeSrc": "4053:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:18",
														"nodeType": "YulTypedName",
														"src": "3979:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:18",
														"nodeType": "YulTypedName",
														"src": "3991:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:18",
														"nodeType": "YulTypedName",
														"src": "4002:4:18",
														"type": ""
													}
												],
												"src": "3909:222:18"
											},
											{
												"body": {
													"nativeSrc": "4180:79:18",
													"nodeType": "YulBlock",
													"src": "4180:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:18",
																"nodeType": "YulBlock",
																"src": "4237:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:18"
																			},
																			"nativeSrc": "4239:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:18"
																		},
																		"nativeSrc": "4239:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:18"
																				},
																				"nativeSrc": "4210:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:18"
																		},
																		"nativeSrc": "4200:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:18"
																},
																"nativeSrc": "4193:43:18",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:18"
															},
															"nativeSrc": "4190:63:18",
															"nodeType": "YulIf",
															"src": "4190:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:18",
														"nodeType": "YulTypedName",
														"src": "4173:5:18",
														"type": ""
													}
												],
												"src": "4137:122:18"
											},
											{
												"body": {
													"nativeSrc": "4317:87:18",
													"nodeType": "YulBlock",
													"src": "4317:87:18",
													"statements": [
														{
															"nativeSrc": "4327:29:18",
															"nodeType": "YulAssignment",
															"src": "4327:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:18"
																},
																"nativeSrc": "4336:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:18"
																},
																"nativeSrc": "4365:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:18"
															},
															"nativeSrc": "4365:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:18",
														"nodeType": "YulTypedName",
														"src": "4295:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:18",
														"nodeType": "YulTypedName",
														"src": "4303:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:18",
														"nodeType": "YulTypedName",
														"src": "4311:5:18",
														"type": ""
													}
												],
												"src": "4265:139:18"
											},
											{
												"body": {
													"nativeSrc": "4493:391:18",
													"nodeType": "YulBlock",
													"src": "4493:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:18",
																"nodeType": "YulBlock",
																"src": "4539:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:18"
																			},
																			"nativeSrc": "4541:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:18"
																		},
																		"nativeSrc": "4541:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:18"
																		},
																		"nativeSrc": "4510:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:18"
																},
																"nativeSrc": "4506:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:18"
															},
															"nativeSrc": "4503:119:18",
															"nodeType": "YulIf",
															"src": "4503:119:18"
														},
														{
															"nativeSrc": "4632:117:18",
															"nodeType": "YulBlock",
															"src": "4632:117:18",
															"statements": [
																{
																	"nativeSrc": "4647:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:18"
																				},
																				"nativeSrc": "4707:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:18"
																		},
																		"nativeSrc": "4686:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:18",
															"nodeType": "YulBlock",
															"src": "4759:118:18",
															"statements": [
																{
																	"nativeSrc": "4774:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:18"
																				},
																				"nativeSrc": "4835:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:18"
																		},
																		"nativeSrc": "4814:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:18",
														"nodeType": "YulTypedName",
														"src": "4455:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:18",
														"nodeType": "YulTypedName",
														"src": "4466:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:18",
														"nodeType": "YulTypedName",
														"src": "4478:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:18",
														"nodeType": "YulTypedName",
														"src": "4486:6:18",
														"type": ""
													}
												],
												"src": "4410:474:18"
											},
											{
												"body": {
													"nativeSrc": "4990:519:18",
													"nodeType": "YulBlock",
													"src": "4990:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:18",
																"nodeType": "YulBlock",
																"src": "5036:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:18"
																			},
																			"nativeSrc": "5038:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:18"
																		},
																		"nativeSrc": "5038:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:18"
																		},
																		"nativeSrc": "5007:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:18"
																},
																"nativeSrc": "5003:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:18"
															},
															"nativeSrc": "5000:119:18",
															"nodeType": "YulIf",
															"src": "5000:119:18"
														},
														{
															"nativeSrc": "5129:117:18",
															"nodeType": "YulBlock",
															"src": "5129:117:18",
															"statements": [
																{
																	"nativeSrc": "5144:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:18"
																				},
																				"nativeSrc": "5204:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:18"
																		},
																		"nativeSrc": "5183:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:18",
															"nodeType": "YulBlock",
															"src": "5256:118:18",
															"statements": [
																{
																	"nativeSrc": "5271:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:18"
																				},
																				"nativeSrc": "5332:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:18"
																		},
																		"nativeSrc": "5311:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:18",
															"nodeType": "YulBlock",
															"src": "5384:118:18",
															"statements": [
																{
																	"nativeSrc": "5399:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:18"
																				},
																				"nativeSrc": "5460:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:18"
																		},
																		"nativeSrc": "5439:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:18",
														"nodeType": "YulTypedName",
														"src": "4944:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:18",
														"nodeType": "YulTypedName",
														"src": "4955:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:18",
														"nodeType": "YulTypedName",
														"src": "4967:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:18",
														"nodeType": "YulTypedName",
														"src": "4975:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:18",
														"nodeType": "YulTypedName",
														"src": "4983:6:18",
														"type": ""
													}
												],
												"src": "4890:619:18"
											},
											{
												"body": {
													"nativeSrc": "5604:28:18",
													"nodeType": "YulBlock",
													"src": "5604:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5621:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5621:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5624:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5624:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5614:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5614:6:18"
																},
																"nativeSrc": "5614:12:18",
																"nodeType": "YulFunctionCall",
																"src": "5614:12:18"
															},
															"nativeSrc": "5614:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "5614:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5515:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5515:117:18"
											},
											{
												"body": {
													"nativeSrc": "5666:152:18",
													"nodeType": "YulBlock",
													"src": "5666:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5683:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5683:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5686:77:18",
																		"nodeType": "YulLiteral",
																		"src": "5686:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5676:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5676:6:18"
																},
																"nativeSrc": "5676:88:18",
																"nodeType": "YulFunctionCall",
																"src": "5676:88:18"
															},
															"nativeSrc": "5676:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "5676:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5780:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5780:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5783:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5783:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5773:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:18"
																},
																"nativeSrc": "5773:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5773:15:18"
															},
															"nativeSrc": "5773:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "5773:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5804:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5804:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5807:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5807:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5797:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5797:6:18"
																},
																"nativeSrc": "5797:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5797:15:18"
															},
															"nativeSrc": "5797:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "5797:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5638:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "5638:180:18"
											},
											{
												"body": {
													"nativeSrc": "5867:238:18",
													"nodeType": "YulBlock",
													"src": "5867:238:18",
													"statements": [
														{
															"nativeSrc": "5877:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5877:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5899:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5899:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5929:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "5929:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5907:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "5907:21:18"
																		},
																		"nativeSrc": "5907:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5907:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5895:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5895:3:18"
																},
																"nativeSrc": "5895:40:18",
																"nodeType": "YulFunctionCall",
																"src": "5895:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5881:10:18",
																	"nodeType": "YulTypedName",
																	"src": "5881:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6046:22:18",
																"nodeType": "YulBlock",
																"src": "6046:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6048:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "6048:16:18"
																			},
																			"nativeSrc": "6048:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6048:18:18"
																		},
																		"nativeSrc": "6048:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6048:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5989:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "5989:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6001:18:18",
																				"nodeType": "YulLiteral",
																				"src": "6001:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5986:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "5986:2:18"
																		},
																		"nativeSrc": "5986:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6025:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "6025:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6037:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6037:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6022:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6022:2:18"
																		},
																		"nativeSrc": "6022:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6022:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5983:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5983:2:18"
																},
																"nativeSrc": "5983:62:18",
																"nodeType": "YulFunctionCall",
																"src": "5983:62:18"
															},
															"nativeSrc": "5980:88:18",
															"nodeType": "YulIf",
															"src": "5980:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6084:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6084:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6088:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "6088:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6077:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6077:6:18"
																},
																"nativeSrc": "6077:22:18",
																"nodeType": "YulFunctionCall",
																"src": "6077:22:18"
															},
															"nativeSrc": "6077:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "6077:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5824:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5853:6:18",
														"nodeType": "YulTypedName",
														"src": "5853:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5861:4:18",
														"nodeType": "YulTypedName",
														"src": "5861:4:18",
														"type": ""
													}
												],
												"src": "5824:281:18"
											},
											{
												"body": {
													"nativeSrc": "6152:88:18",
													"nodeType": "YulBlock",
													"src": "6152:88:18",
													"statements": [
														{
															"nativeSrc": "6162:30:18",
															"nodeType": "YulAssignment",
															"src": "6162:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6172:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "6172:18:18"
																},
																"nativeSrc": "6172:20:18",
																"nodeType": "YulFunctionCall",
																"src": "6172:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6162:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6221:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6221:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6229:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6229:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6201:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "6201:19:18"
																},
																"nativeSrc": "6201:33:18",
																"nodeType": "YulFunctionCall",
																"src": "6201:33:18"
															},
															"nativeSrc": "6201:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "6201:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6111:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6136:4:18",
														"nodeType": "YulTypedName",
														"src": "6136:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6145:6:18",
														"nodeType": "YulTypedName",
														"src": "6145:6:18",
														"type": ""
													}
												],
												"src": "6111:129:18"
											},
											{
												"body": {
													"nativeSrc": "6355:229:18",
													"nodeType": "YulBlock",
													"src": "6355:229:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6460:22:18",
																"nodeType": "YulBlock",
																"src": "6460:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6462:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "6462:16:18"
																			},
																			"nativeSrc": "6462:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6462:18:18"
																		},
																		"nativeSrc": "6462:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6462:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6432:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6432:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6440:18:18",
																		"nodeType": "YulLiteral",
																		"src": "6440:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6429:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "6429:2:18"
																},
																"nativeSrc": "6429:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6429:30:18"
															},
															"nativeSrc": "6426:56:18",
															"nodeType": "YulIf",
															"src": "6426:56:18"
														},
														{
															"nativeSrc": "6492:25:18",
															"nodeType": "YulAssignment",
															"src": "6492:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6504:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6504:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6512:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6512:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6500:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6500:3:18"
																},
																"nativeSrc": "6500:17:18",
																"nodeType": "YulFunctionCall",
																"src": "6500:17:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6492:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6492:4:18"
																}
															]
														},
														{
															"nativeSrc": "6554:23:18",
															"nodeType": "YulAssignment",
															"src": "6554:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "6566:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6566:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6572:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6572:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6562:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6562:3:18"
																},
																"nativeSrc": "6562:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6562:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6554:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6554:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6246:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6339:6:18",
														"nodeType": "YulTypedName",
														"src": "6339:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6350:4:18",
														"nodeType": "YulTypedName",
														"src": "6350:4:18",
														"type": ""
													}
												],
												"src": "6246:338:18"
											},
											{
												"body": {
													"nativeSrc": "6679:28:18",
													"nodeType": "YulBlock",
													"src": "6679:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6696:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6696:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6699:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6699:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6689:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6689:6:18"
																},
																"nativeSrc": "6689:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6689:12:18"
															},
															"nativeSrc": "6689:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6689:12:18"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6590:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6590:117:18"
											},
											{
												"body": {
													"nativeSrc": "6802:28:18",
													"nodeType": "YulBlock",
													"src": "6802:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6819:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6819:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6822:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6822:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6812:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6812:6:18"
																},
																"nativeSrc": "6812:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6812:12:18"
															},
															"nativeSrc": "6812:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6812:12:18"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nativeSrc": "6713:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6713:117:18"
											},
											{
												"body": {
													"nativeSrc": "6925:28:18",
													"nodeType": "YulBlock",
													"src": "6925:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6942:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6942:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6945:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6945:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6935:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6935:6:18"
																},
																"nativeSrc": "6935:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6935:12:18"
															},
															"nativeSrc": "6935:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "6935:12:18"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nativeSrc": "6836:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6836:117:18"
											},
											{
												"body": {
													"nativeSrc": "7048:28:18",
													"nodeType": "YulBlock",
													"src": "7048:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7065:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7065:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7068:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7068:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7058:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7058:6:18"
																},
																"nativeSrc": "7058:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7058:12:18"
															},
															"nativeSrc": "7058:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "7058:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6959:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6959:117:18"
											},
											{
												"body": {
													"nativeSrc": "7149:241:18",
													"nodeType": "YulBlock",
													"src": "7149:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "7254:22:18",
																"nodeType": "YulBlock",
																"src": "7254:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7256:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7256:16:18"
																			},
																			"nativeSrc": "7256:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7256:18:18"
																		},
																		"nativeSrc": "7256:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7256:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7226:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7226:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7234:18:18",
																		"nodeType": "YulLiteral",
																		"src": "7234:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7223:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7223:2:18"
																},
																"nativeSrc": "7223:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7223:30:18"
															},
															"nativeSrc": "7220:56:18",
															"nodeType": "YulIf",
															"src": "7220:56:18"
														},
														{
															"nativeSrc": "7286:37:18",
															"nodeType": "YulAssignment",
															"src": "7286:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7316:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7316:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7294:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "7294:21:18"
																},
																"nativeSrc": "7294:29:18",
																"nodeType": "YulFunctionCall",
																"src": "7294:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7286:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7286:4:18"
																}
															]
														},
														{
															"nativeSrc": "7360:23:18",
															"nodeType": "YulAssignment",
															"src": "7360:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7372:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7372:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7378:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7378:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7368:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7368:3:18"
																},
																"nativeSrc": "7368:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7368:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7360:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7360:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7082:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7133:6:18",
														"nodeType": "YulTypedName",
														"src": "7133:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7144:4:18",
														"nodeType": "YulTypedName",
														"src": "7144:4:18",
														"type": ""
													}
												],
												"src": "7082:308:18"
											},
											{
												"body": {
													"nativeSrc": "7460:82:18",
													"nodeType": "YulBlock",
													"src": "7460:82:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7483:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7483:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7488:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7488:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7493:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7493:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7470:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "7470:12:18"
																},
																"nativeSrc": "7470:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7470:30:18"
															},
															"nativeSrc": "7470:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "7470:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7520:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7520:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7525:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7525:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7516:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7516:3:18"
																		},
																		"nativeSrc": "7516:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7516:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7534:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7534:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7509:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7509:6:18"
																},
																"nativeSrc": "7509:27:18",
																"nodeType": "YulFunctionCall",
																"src": "7509:27:18"
															},
															"nativeSrc": "7509:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "7509:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7396:146:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7442:3:18",
														"nodeType": "YulTypedName",
														"src": "7442:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7447:3:18",
														"nodeType": "YulTypedName",
														"src": "7447:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7452:6:18",
														"nodeType": "YulTypedName",
														"src": "7452:6:18",
														"type": ""
													}
												],
												"src": "7396:146:18"
											},
											{
												"body": {
													"nativeSrc": "7632:341:18",
													"nodeType": "YulBlock",
													"src": "7632:341:18",
													"statements": [
														{
															"nativeSrc": "7642:75:18",
															"nodeType": "YulAssignment",
															"src": "7642:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7709:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7709:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "7667:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "7667:41:18"
																		},
																		"nativeSrc": "7667:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7667:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7651:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "7651:15:18"
																},
																"nativeSrc": "7651:66:18",
																"nodeType": "YulFunctionCall",
																"src": "7651:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7642:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7642:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7733:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7733:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7740:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7740:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7726:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:18"
																},
																"nativeSrc": "7726:21:18",
																"nodeType": "YulFunctionCall",
																"src": "7726:21:18"
															},
															"nativeSrc": "7726:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "7726:21:18"
														},
														{
															"nativeSrc": "7756:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7756:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7771:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7771:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7778:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7778:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7767:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7767:3:18"
																},
																"nativeSrc": "7767:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7767:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7760:3:18",
																	"nodeType": "YulTypedName",
																	"src": "7760:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7821:83:18",
																"nodeType": "YulBlock",
																"src": "7821:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "7823:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "7823:77:18"
																			},
																			"nativeSrc": "7823:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7823:79:18"
																		},
																		"nativeSrc": "7823:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7823:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "7802:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7802:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7807:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7807:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7798:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7798:3:18"
																		},
																		"nativeSrc": "7798:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7798:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7816:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7816:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7795:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7795:2:18"
																},
																"nativeSrc": "7795:25:18",
																"nodeType": "YulFunctionCall",
																"src": "7795:25:18"
															},
															"nativeSrc": "7792:112:18",
															"nodeType": "YulIf",
															"src": "7792:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7950:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7950:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "7955:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7955:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7960:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7960:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "7913:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "7913:36:18"
																},
																"nativeSrc": "7913:54:18",
																"nodeType": "YulFunctionCall",
																"src": "7913:54:18"
															},
															"nativeSrc": "7913:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "7913:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7548:425:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7605:3:18",
														"nodeType": "YulTypedName",
														"src": "7605:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7610:6:18",
														"nodeType": "YulTypedName",
														"src": "7610:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7618:3:18",
														"nodeType": "YulTypedName",
														"src": "7618:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7626:5:18",
														"nodeType": "YulTypedName",
														"src": "7626:5:18",
														"type": ""
													}
												],
												"src": "7548:425:18"
											},
											{
												"body": {
													"nativeSrc": "8055:278:18",
													"nodeType": "YulBlock",
													"src": "8055:278:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8104:83:18",
																"nodeType": "YulBlock",
																"src": "8104:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8106:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8106:77:18"
																			},
																			"nativeSrc": "8106:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8106:79:18"
																		},
																		"nativeSrc": "8106:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8106:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8083:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8083:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8091:4:18",
																						"nodeType": "YulLiteral",
																						"src": "8091:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8079:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8079:3:18"
																				},
																				"nativeSrc": "8079:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8079:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8098:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8098:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8075:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8075:3:18"
																		},
																		"nativeSrc": "8075:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8075:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8068:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8068:6:18"
																},
																"nativeSrc": "8068:35:18",
																"nodeType": "YulFunctionCall",
																"src": "8068:35:18"
															},
															"nativeSrc": "8065:122:18",
															"nodeType": "YulIf",
															"src": "8065:122:18"
														},
														{
															"nativeSrc": "8196:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8196:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8223:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8223:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8210:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "8210:12:18"
																},
																"nativeSrc": "8210:20:18",
																"nodeType": "YulFunctionCall",
																"src": "8210:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8200:6:18",
																	"nodeType": "YulTypedName",
																	"src": "8200:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8239:88:18",
															"nodeType": "YulAssignment",
															"src": "8239:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8300:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8300:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8308:4:18",
																				"nodeType": "YulLiteral",
																				"src": "8308:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8296:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8296:3:18"
																		},
																		"nativeSrc": "8296:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8296:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8315:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8315:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8323:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8323:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8248:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "8248:47:18"
																},
																"nativeSrc": "8248:79:18",
																"nodeType": "YulFunctionCall",
																"src": "8248:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8239:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8239:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "7993:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8033:6:18",
														"nodeType": "YulTypedName",
														"src": "8033:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8041:3:18",
														"nodeType": "YulTypedName",
														"src": "8041:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8049:5:18",
														"nodeType": "YulTypedName",
														"src": "8049:5:18",
														"type": ""
													}
												],
												"src": "7993:340:18"
											},
											{
												"body": {
													"nativeSrc": "8455:840:18",
													"nodeType": "YulBlock",
													"src": "8455:840:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8499:83:18",
																"nodeType": "YulBlock",
																"src": "8499:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "8501:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8501:77:18"
																			},
																			"nativeSrc": "8501:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8501:79:18"
																		},
																		"nativeSrc": "8501:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8501:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "8476:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8476:3:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8481:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8481:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8472:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8472:3:18"
																		},
																		"nativeSrc": "8472:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8472:19:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8493:4:18",
																		"nodeType": "YulLiteral",
																		"src": "8493:4:18",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8468:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8468:3:18"
																},
																"nativeSrc": "8468:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8468:30:18"
															},
															"nativeSrc": "8465:117:18",
															"nodeType": "YulIf",
															"src": "8465:117:18"
														},
														{
															"nativeSrc": "8591:30:18",
															"nodeType": "YulAssignment",
															"src": "8591:30:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:18",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:18",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8600:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "8600:15:18"
																},
																"nativeSrc": "8600:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8600:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8591:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8591:5:18"
																}
															]
														},
														{
															"nativeSrc": "8631:153:18",
															"nodeType": "YulBlock",
															"src": "8631:153:18",
															"statements": [
																{
																	"nativeSrc": "8669:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8669:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8683:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8683:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8673:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8673:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8709:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "8709:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8716:4:18",
																						"nodeType": "YulLiteral",
																						"src": "8716:4:18",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8705:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8705:3:18"
																				},
																				"nativeSrc": "8705:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8705:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "8748:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "8748:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "8759:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "8759:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8744:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8744:3:18"
																						},
																						"nativeSrc": "8744:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8744:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "8768:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "8768:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nativeSrc": "8723:20:18",
																					"nodeType": "YulIdentifier",
																					"src": "8723:20:18"
																				},
																				"nativeSrc": "8723:49:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8723:49:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "8698:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8698:6:18"
																		},
																		"nativeSrc": "8698:75:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:75:18"
																	},
																	"nativeSrc": "8698:75:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "8698:75:18"
																}
															]
														},
														{
															"nativeSrc": "8794:156:18",
															"nodeType": "YulBlock",
															"src": "8794:156:18",
															"statements": [
																{
																	"nativeSrc": "8834:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8834:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8848:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8848:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8838:6:18",
																			"nodeType": "YulTypedName",
																			"src": "8838:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8875:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "8875:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8882:4:18",
																						"nodeType": "YulLiteral",
																						"src": "8882:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8871:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8871:3:18"
																				},
																				"nativeSrc": "8871:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8871:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "8914:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "8914:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "8925:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "8925:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "8910:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "8910:3:18"
																						},
																						"nativeSrc": "8910:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "8910:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "8934:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "8934:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nativeSrc": "8889:20:18",
																					"nodeType": "YulIdentifier",
																					"src": "8889:20:18"
																				},
																				"nativeSrc": "8889:49:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8889:49:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "8864:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "8864:6:18"
																		},
																		"nativeSrc": "8864:75:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8864:75:18"
																	},
																	"nativeSrc": "8864:75:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "8864:75:18"
																}
															]
														},
														{
															"nativeSrc": "8960:328:18",
															"nodeType": "YulBlock",
															"src": "8960:328:18",
															"statements": [
																{
																	"nativeSrc": "9002:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9002:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9033:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9033:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9044:2:18",
																						"nodeType": "YulLiteral",
																						"src": "9044:2:18",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9029:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9029:3:18"
																				},
																				"nativeSrc": "9029:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9029:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9016:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "9016:12:18"
																		},
																		"nativeSrc": "9016:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9016:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9006:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9006:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9095:83:18",
																		"nodeType": "YulBlock",
																		"src": "9095:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
																						"nativeSrc": "9097:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "9097:77:18"
																					},
																					"nativeSrc": "9097:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9097:79:18"
																				},
																				"nativeSrc": "9097:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "9097:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9067:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9067:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9075:18:18",
																				"nodeType": "YulLiteral",
																				"src": "9075:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9064:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9064:2:18"
																		},
																		"nativeSrc": "9064:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9064:30:18"
																	},
																	"nativeSrc": "9061:117:18",
																	"nodeType": "YulIf",
																	"src": "9061:117:18"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9203:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "9203:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9210:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9210:4:18",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9199:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9199:3:18"
																				},
																				"nativeSrc": "9199:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9199:16:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "9252:9:18",
																								"nodeType": "YulIdentifier",
																								"src": "9252:9:18"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "9263:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "9263:6:18"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9248:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9248:3:18"
																						},
																						"nativeSrc": "9248:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9248:22:18"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "9272:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "9272:3:18"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_string_memory_ptr",
																					"nativeSrc": "9217:30:18",
																					"nodeType": "YulIdentifier",
																					"src": "9217:30:18"
																				},
																				"nativeSrc": "9217:59:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9217:59:18"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "9192:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9192:6:18"
																		},
																		"nativeSrc": "9192:85:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9192:85:18"
																	},
																	"nativeSrc": "9192:85:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "9192:85:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_BadgeInfo_$3187_memory_ptr",
												"nativeSrc": "8373:922:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8430:9:18",
														"nodeType": "YulTypedName",
														"src": "8430:9:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8441:3:18",
														"nodeType": "YulTypedName",
														"src": "8441:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8449:5:18",
														"nodeType": "YulTypedName",
														"src": "8449:5:18",
														"type": ""
													}
												],
												"src": "8373:922:18"
											},
											{
												"body": {
													"nativeSrc": "9466:867:18",
													"nodeType": "YulBlock",
													"src": "9466:867:18",
													"statements": [
														{
															"nativeSrc": "9476:117:18",
															"nodeType": "YulAssignment",
															"src": "9476:117:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9585:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9585:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "9501:83:18",
																			"nodeType": "YulIdentifier",
																			"src": "9501:83:18"
																		},
																		"nativeSrc": "9501:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9501:91:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9485:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "9485:15:18"
																},
																"nativeSrc": "9485:108:18",
																"nodeType": "YulFunctionCall",
																"src": "9485:108:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9476:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "9476:5:18"
																}
															]
														},
														{
															"nativeSrc": "9602:16:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9602:16:18",
															"value": {
																"name": "array",
																"nativeSrc": "9613:5:18",
																"nodeType": "YulIdentifier",
																"src": "9613:5:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9606:3:18",
																	"nodeType": "YulTypedName",
																	"src": "9606:3:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9635:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9635:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9642:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9642:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9628:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9628:6:18"
																},
																"nativeSrc": "9628:21:18",
																"nodeType": "YulFunctionCall",
																"src": "9628:21:18"
															},
															"nativeSrc": "9628:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "9628:21:18"
														},
														{
															"nativeSrc": "9658:23:18",
															"nodeType": "YulAssignment",
															"src": "9658:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9669:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "9669:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9676:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9676:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9665:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9665:3:18"
																},
																"nativeSrc": "9665:16:18",
																"nodeType": "YulFunctionCall",
																"src": "9665:16:18"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "9658:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9658:3:18"
																}
															]
														},
														{
															"nativeSrc": "9691:44:18",
															"nodeType": "YulVariableDeclaration",
															"src": "9691:44:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9709:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9709:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9721:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9721:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9729:4:18",
																				"nodeType": "YulLiteral",
																				"src": "9729:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "9717:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9717:3:18"
																		},
																		"nativeSrc": "9717:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9717:17:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9705:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9705:3:18"
																},
																"nativeSrc": "9705:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9705:30:18"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "9695:6:18",
																	"nodeType": "YulTypedName",
																	"src": "9695:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9763:103:18",
																"nodeType": "YulBlock",
																"src": "9763:103:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9777:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9777:77:18"
																			},
																			"nativeSrc": "9777:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9777:79:18"
																		},
																		"nativeSrc": "9777:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9777:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9750:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9750:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9758:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9758:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9747:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9747:2:18"
																},
																"nativeSrc": "9747:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9747:15:18"
															},
															"nativeSrc": "9744:122:18",
															"nodeType": "YulIf",
															"src": "9744:122:18"
														},
														{
															"body": {
																"nativeSrc": "9951:376:18",
																"nodeType": "YulBlock",
																"src": "9951:376:18",
																"statements": [
																	{
																		"nativeSrc": "9966:36:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9966:36:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "9998:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9998:3:18"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "9985:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "9985:12:18"
																			},
																			"nativeSrc": "9985:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9985:17:18"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "9970:11:18",
																				"nodeType": "YulTypedName",
																				"src": "9970:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10054:83:18",
																			"nodeType": "YulBlock",
																			"src": "10054:83:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nativeSrc": "10056:77:18",
																							"nodeType": "YulIdentifier",
																							"src": "10056:77:18"
																						},
																						"nativeSrc": "10056:79:18",
																						"nodeType": "YulFunctionCall",
																						"src": "10056:79:18"
																					},
																					"nativeSrc": "10056:79:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "10056:79:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "10021:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "10021:11:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10034:18:18",
																					"nodeType": "YulLiteral",
																					"src": "10034:18:18",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10018:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "10018:2:18"
																			},
																			"nativeSrc": "10018:35:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10018:35:18"
																		},
																		"nativeSrc": "10015:122:18",
																		"nodeType": "YulIf",
																		"src": "10015:122:18"
																	},
																	{
																		"nativeSrc": "10150:42:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10150:42:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nativeSrc": "10172:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "10172:6:18"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "10180:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "10180:11:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10168:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10168:3:18"
																			},
																			"nativeSrc": "10168:24:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10168:24:18"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "10154:10:18",
																				"nodeType": "YulTypedName",
																				"src": "10154:10:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10213:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10213:3:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "10266:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "10266:10:18"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "10278:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "10278:3:18"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_BadgeInfo_$3187_memory_ptr",
																						"nativeSrc": "10218:47:18",
																						"nodeType": "YulIdentifier",
																						"src": "10218:47:18"
																					},
																					"nativeSrc": "10218:64:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10218:64:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10206:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10206:6:18"
																			},
																			"nativeSrc": "10206:77:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10206:77:18"
																		},
																		"nativeSrc": "10206:77:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10206:77:18"
																	},
																	{
																		"nativeSrc": "10296:21:18",
																		"nodeType": "YulAssignment",
																		"src": "10296:21:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "10307:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10307:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10312:4:18",
																					"nodeType": "YulLiteral",
																					"src": "10312:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10303:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10303:3:18"
																			},
																			"nativeSrc": "10303:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10303:14:18"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "10296:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10296:3:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9904:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9904:3:18"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "9909:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9909:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9901:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9901:2:18"
																},
																"nativeSrc": "9901:15:18",
																"nodeType": "YulFunctionCall",
																"src": "9901:15:18"
															},
															"nativeSrc": "9875:452:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9917:25:18",
																"nodeType": "YulBlock",
																"src": "9917:25:18",
																"statements": [
																	{
																		"nativeSrc": "9919:21:18",
																		"nodeType": "YulAssignment",
																		"src": "9919:21:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "9930:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9930:3:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9935:4:18",
																					"nodeType": "YulLiteral",
																					"src": "9935:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9926:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9926:3:18"
																			},
																			"nativeSrc": "9926:14:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9926:14:18"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "9919:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9919:3:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9879:21:18",
																"nodeType": "YulBlock",
																"src": "9879:21:18",
																"statements": [
																	{
																		"nativeSrc": "9881:17:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9881:17:18",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "9892:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9892:6:18"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "9885:3:18",
																				"nodeType": "YulTypedName",
																				"src": "9885:3:18",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9875:452:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "9337:996:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9436:6:18",
														"nodeType": "YulTypedName",
														"src": "9436:6:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9444:6:18",
														"nodeType": "YulTypedName",
														"src": "9444:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9452:3:18",
														"nodeType": "YulTypedName",
														"src": "9452:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9460:5:18",
														"nodeType": "YulTypedName",
														"src": "9460:5:18",
														"type": ""
													}
												],
												"src": "9337:996:18"
											},
											{
												"body": {
													"nativeSrc": "10479:320:18",
													"nodeType": "YulBlock",
													"src": "10479:320:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10528:83:18",
																"nodeType": "YulBlock",
																"src": "10528:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10530:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10530:77:18"
																			},
																			"nativeSrc": "10530:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10530:79:18"
																		},
																		"nativeSrc": "10530:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10530:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10507:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10507:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10515:4:18",
																						"nodeType": "YulLiteral",
																						"src": "10515:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10503:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10503:3:18"
																				},
																				"nativeSrc": "10503:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10503:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10522:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10522:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10499:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10499:3:18"
																		},
																		"nativeSrc": "10499:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10499:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10492:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10492:6:18"
																},
																"nativeSrc": "10492:35:18",
																"nodeType": "YulFunctionCall",
																"src": "10492:35:18"
															},
															"nativeSrc": "10489:122:18",
															"nodeType": "YulIf",
															"src": "10489:122:18"
														},
														{
															"nativeSrc": "10620:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10620:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10647:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10647:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10634:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "10634:12:18"
																},
																"nativeSrc": "10634:20:18",
																"nodeType": "YulFunctionCall",
																"src": "10634:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10624:6:18",
																	"nodeType": "YulTypedName",
																	"src": "10624:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10663:130:18",
															"nodeType": "YulAssignment",
															"src": "10663:130:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10766:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10766:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10774:4:18",
																				"nodeType": "YulLiteral",
																				"src": "10774:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10762:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10762:3:18"
																		},
																		"nativeSrc": "10762:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10762:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10781:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10781:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10789:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10789:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "10672:89:18",
																	"nodeType": "YulIdentifier",
																	"src": "10672:89:18"
																},
																"nativeSrc": "10672:121:18",
																"nodeType": "YulFunctionCall",
																"src": "10672:121:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10663:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10663:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "10375:424:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10457:6:18",
														"nodeType": "YulTypedName",
														"src": "10457:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10465:3:18",
														"nodeType": "YulTypedName",
														"src": "10465:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10473:5:18",
														"nodeType": "YulTypedName",
														"src": "10473:5:18",
														"type": ""
													}
												],
												"src": "10375:424:18"
											},
											{
												"body": {
													"nativeSrc": "10923:475:18",
													"nodeType": "YulBlock",
													"src": "10923:475:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10969:83:18",
																"nodeType": "YulBlock",
																"src": "10969:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10971:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10971:77:18"
																			},
																			"nativeSrc": "10971:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10971:79:18"
																		},
																		"nativeSrc": "10971:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10971:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10944:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10944:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10953:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10953:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10940:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10940:3:18"
																		},
																		"nativeSrc": "10940:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10940:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10965:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10965:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10936:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10936:3:18"
																},
																"nativeSrc": "10936:32:18",
																"nodeType": "YulFunctionCall",
																"src": "10936:32:18"
															},
															"nativeSrc": "10933:119:18",
															"nodeType": "YulIf",
															"src": "10933:119:18"
														},
														{
															"nativeSrc": "11062:329:18",
															"nodeType": "YulBlock",
															"src": "11062:329:18",
															"statements": [
																{
																	"nativeSrc": "11077:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11077:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11108:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11108:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11119:1:18",
																						"nodeType": "YulLiteral",
																						"src": "11119:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11104:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11104:3:18"
																				},
																				"nativeSrc": "11104:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11104:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11091:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "11091:12:18"
																		},
																		"nativeSrc": "11091:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11091:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11081:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11081:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11169:83:18",
																		"nodeType": "YulBlock",
																		"src": "11169:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11171:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "11171:77:18"
																					},
																					"nativeSrc": "11171:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11171:79:18"
																				},
																				"nativeSrc": "11171:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "11171:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11141:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11141:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11149:18:18",
																				"nodeType": "YulLiteral",
																				"src": "11149:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11138:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11138:2:18"
																		},
																		"nativeSrc": "11138:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11138:30:18"
																	},
																	"nativeSrc": "11135:117:18",
																	"nodeType": "YulIf",
																	"src": "11135:117:18"
																},
																{
																	"nativeSrc": "11266:115:18",
																	"nodeType": "YulAssignment",
																	"src": "11266:115:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11353:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11353:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11364:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11364:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11349:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11349:3:18"
																				},
																				"nativeSrc": "11349:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11349:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11373:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11373:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "11276:72:18",
																			"nodeType": "YulIdentifier",
																			"src": "11276:72:18"
																		},
																		"nativeSrc": "11276:105:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11276:105:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11266:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11266:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "10805:593:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10893:9:18",
														"nodeType": "YulTypedName",
														"src": "10893:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10904:7:18",
														"nodeType": "YulTypedName",
														"src": "10904:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10916:6:18",
														"nodeType": "YulTypedName",
														"src": "10916:6:18",
														"type": ""
													}
												],
												"src": "10805:593:18"
											},
											{
												"body": {
													"nativeSrc": "11510:40:18",
													"nodeType": "YulBlock",
													"src": "11510:40:18",
													"statements": [
														{
															"nativeSrc": "11521:22:18",
															"nodeType": "YulAssignment",
															"src": "11521:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11537:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11537:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11531:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "11531:5:18"
																},
																"nativeSrc": "11531:12:18",
																"nodeType": "YulFunctionCall",
																"src": "11531:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11521:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11521:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "11404:146:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11493:5:18",
														"nodeType": "YulTypedName",
														"src": "11493:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11503:6:18",
														"nodeType": "YulTypedName",
														"src": "11503:6:18",
														"type": ""
													}
												],
												"src": "11404:146:18"
											},
											{
												"body": {
													"nativeSrc": "11699:73:18",
													"nodeType": "YulBlock",
													"src": "11699:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11716:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11716:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11721:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11721:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11709:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11709:6:18"
																},
																"nativeSrc": "11709:19:18",
																"nodeType": "YulFunctionCall",
																"src": "11709:19:18"
															},
															"nativeSrc": "11709:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "11709:19:18"
														},
														{
															"nativeSrc": "11737:29:18",
															"nodeType": "YulAssignment",
															"src": "11737:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11756:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11756:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11761:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11761:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11752:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11752:3:18"
																},
																"nativeSrc": "11752:14:18",
																"nodeType": "YulFunctionCall",
																"src": "11752:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11737:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "11737:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "11556:216:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11671:3:18",
														"nodeType": "YulTypedName",
														"src": "11671:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11676:6:18",
														"nodeType": "YulTypedName",
														"src": "11676:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11687:11:18",
														"nodeType": "YulTypedName",
														"src": "11687:11:18",
														"type": ""
													}
												],
												"src": "11556:216:18"
											},
											{
												"body": {
													"nativeSrc": "11882:60:18",
													"nodeType": "YulBlock",
													"src": "11882:60:18",
													"statements": [
														{
															"nativeSrc": "11892:11:18",
															"nodeType": "YulAssignment",
															"src": "11892:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "11900:3:18",
																"nodeType": "YulIdentifier",
																"src": "11900:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11892:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11892:4:18"
																}
															]
														},
														{
															"nativeSrc": "11913:22:18",
															"nodeType": "YulAssignment",
															"src": "11913:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11925:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11925:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11930:4:18",
																		"nodeType": "YulLiteral",
																		"src": "11930:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11921:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11921:3:18"
																},
																"nativeSrc": "11921:14:18",
																"nodeType": "YulFunctionCall",
																"src": "11921:14:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11913:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11913:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "11778:164:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11869:3:18",
														"nodeType": "YulTypedName",
														"src": "11869:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11877:4:18",
														"nodeType": "YulTypedName",
														"src": "11877:4:18",
														"type": ""
													}
												],
												"src": "11778:164:18"
											},
											{
												"body": {
													"nativeSrc": "12003:53:18",
													"nodeType": "YulBlock",
													"src": "12003:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12020:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12020:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12043:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "12043:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12025:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "12025:17:18"
																		},
																		"nativeSrc": "12025:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12025:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12013:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12013:6:18"
																},
																"nativeSrc": "12013:37:18",
																"nodeType": "YulFunctionCall",
																"src": "12013:37:18"
															},
															"nativeSrc": "12013:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "12013:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "11948:108:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11991:5:18",
														"nodeType": "YulTypedName",
														"src": "11991:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11998:3:18",
														"nodeType": "YulTypedName",
														"src": "11998:3:18",
														"type": ""
													}
												],
												"src": "11948:108:18"
											},
											{
												"body": {
													"nativeSrc": "12256:397:18",
													"nodeType": "YulBlock",
													"src": "12256:397:18",
													"statements": [
														{
															"nativeSrc": "12266:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "12266:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12282:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12282:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12287:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12287:4:18",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12278:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12278:3:18"
																},
																"nativeSrc": "12278:14:18",
																"nodeType": "YulFunctionCall",
																"src": "12278:14:18"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "12270:4:18",
																	"nodeType": "YulTypedName",
																	"src": "12270:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12302:167:18",
															"nodeType": "YulBlock",
															"src": "12302:167:18",
															"statements": [
																{
																	"nativeSrc": "12340:43:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12340:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12370:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "12370:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12377:4:18",
																						"nodeType": "YulLiteral",
																						"src": "12377:4:18",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12366:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12366:3:18"
																				},
																				"nativeSrc": "12366:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12366:16:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12360:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "12360:5:18"
																		},
																		"nativeSrc": "12360:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12360:23:18"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12344:12:18",
																			"nodeType": "YulTypedName",
																			"src": "12344:12:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12430:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "12430:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12448:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "12448:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12453:4:18",
																						"nodeType": "YulLiteral",
																						"src": "12453:4:18",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12444:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12444:3:18"
																				},
																				"nativeSrc": "12444:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12444:14:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "12396:33:18",
																			"nodeType": "YulIdentifier",
																			"src": "12396:33:18"
																		},
																		"nativeSrc": "12396:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12396:63:18"
																	},
																	"nativeSrc": "12396:63:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "12396:63:18"
																}
															]
														},
														{
															"nativeSrc": "12479:167:18",
															"nodeType": "YulBlock",
															"src": "12479:167:18",
															"statements": [
																{
																	"nativeSrc": "12517:43:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12517:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12547:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "12547:5:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12554:4:18",
																						"nodeType": "YulLiteral",
																						"src": "12554:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12543:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12543:3:18"
																				},
																				"nativeSrc": "12543:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12543:16:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12537:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "12537:5:18"
																		},
																		"nativeSrc": "12537:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12537:23:18"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "12521:12:18",
																			"nodeType": "YulTypedName",
																			"src": "12521:12:18",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "12607:12:18",
																				"nodeType": "YulIdentifier",
																				"src": "12607:12:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "12625:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "12625:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12630:4:18",
																						"nodeType": "YulLiteral",
																						"src": "12630:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12621:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12621:3:18"
																				},
																				"nativeSrc": "12621:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12621:14:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "12573:33:18",
																			"nodeType": "YulIdentifier",
																			"src": "12573:33:18"
																		},
																		"nativeSrc": "12573:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12573:63:18"
																	},
																	"nativeSrc": "12573:63:18",
																	"nodeType": "YulExpressionStatement",
																	"src": "12573:63:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr",
												"nativeSrc": "12136:517:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12243:5:18",
														"nodeType": "YulTypedName",
														"src": "12243:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12250:3:18",
														"nodeType": "YulTypedName",
														"src": "12250:3:18",
														"type": ""
													}
												],
												"src": "12136:517:18"
											},
											{
												"body": {
													"nativeSrc": "12803:163:18",
													"nodeType": "YulBlock",
													"src": "12803:163:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12911:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "12911:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12919:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12919:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr",
																	"nativeSrc": "12813:97:18",
																	"nodeType": "YulIdentifier",
																	"src": "12813:97:18"
																},
																"nativeSrc": "12813:110:18",
																"nodeType": "YulFunctionCall",
																"src": "12813:110:18"
															},
															"nativeSrc": "12813:110:18",
															"nodeType": "YulExpressionStatement",
															"src": "12813:110:18"
														},
														{
															"nativeSrc": "12932:28:18",
															"nodeType": "YulAssignment",
															"src": "12932:28:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12950:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12950:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12955:4:18",
																		"nodeType": "YulLiteral",
																		"src": "12955:4:18",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12946:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12946:3:18"
																},
																"nativeSrc": "12946:14:18",
																"nodeType": "YulFunctionCall",
																"src": "12946:14:18"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "12932:10:18",
																	"nodeType": "YulIdentifier",
																	"src": "12932:10:18"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr",
												"nativeSrc": "12659:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "12776:6:18",
														"nodeType": "YulTypedName",
														"src": "12776:6:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12784:3:18",
														"nodeType": "YulTypedName",
														"src": "12784:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "12792:10:18",
														"nodeType": "YulTypedName",
														"src": "12792:10:18",
														"type": ""
													}
												],
												"src": "12659:307:18"
											},
											{
												"body": {
													"nativeSrc": "13079:38:18",
													"nodeType": "YulBlock",
													"src": "13079:38:18",
													"statements": [
														{
															"nativeSrc": "13089:22:18",
															"nodeType": "YulAssignment",
															"src": "13089:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "13101:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13101:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13106:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13106:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13097:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13097:3:18"
																},
																"nativeSrc": "13097:14:18",
																"nodeType": "YulFunctionCall",
																"src": "13097:14:18"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "13089:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13089:4:18"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "12972:145:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "13066:3:18",
														"nodeType": "YulTypedName",
														"src": "13066:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "13074:4:18",
														"nodeType": "YulTypedName",
														"src": "13074:4:18",
														"type": ""
													}
												],
												"src": "12972:145:18"
											},
											{
												"body": {
													"nativeSrc": "13389:800:18",
													"nodeType": "YulBlock",
													"src": "13389:800:18",
													"statements": [
														{
															"nativeSrc": "13399:100:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13399:100:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13493:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "13493:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "13413:79:18",
																	"nodeType": "YulIdentifier",
																	"src": "13413:79:18"
																},
																"nativeSrc": "13413:86:18",
																"nodeType": "YulFunctionCall",
																"src": "13413:86:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13403:6:18",
																	"nodeType": "YulTypedName",
																	"src": "13403:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13508:125:18",
															"nodeType": "YulAssignment",
															"src": "13508:125:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13621:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13621:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13626:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13626:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13515:105:18",
																	"nodeType": "YulIdentifier",
																	"src": "13515:105:18"
																},
																"nativeSrc": "13515:118:18",
																"nodeType": "YulFunctionCall",
																"src": "13515:118:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13508:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13508:3:18"
																}
															]
														},
														{
															"nativeSrc": "13642:103:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13642:103:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13739:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "13739:5:18"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "13657:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "13657:81:18"
																},
																"nativeSrc": "13657:88:18",
																"nodeType": "YulFunctionCall",
																"src": "13657:88:18"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "13646:7:18",
																	"nodeType": "YulTypedName",
																	"src": "13646:7:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13754:21:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13754:21:18",
															"value": {
																"name": "baseRef",
																"nativeSrc": "13768:7:18",
																"nodeType": "YulIdentifier",
																"src": "13768:7:18"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "13758:6:18",
																	"nodeType": "YulTypedName",
																	"src": "13758:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13844:320:18",
																"nodeType": "YulBlock",
																"src": "13844:320:18",
																"statements": [
																	{
																		"nativeSrc": "13858:34:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13858:34:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "13885:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "13885:6:18"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13879:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "13879:5:18"
																			},
																			"nativeSrc": "13879:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13879:13:18"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "13862:13:18",
																				"nodeType": "YulTypedName",
																				"src": "13862:13:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13905:134:18",
																		"nodeType": "YulAssignment",
																		"src": "13905:134:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "14020:13:18",
																					"nodeType": "YulIdentifier",
																					"src": "14020:13:18"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "14035:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14035:3:18"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr",
																				"nativeSrc": "13912:107:18",
																				"nodeType": "YulIdentifier",
																				"src": "13912:107:18"
																			},
																			"nativeSrc": "13912:127:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13912:127:18"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "13905:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "13905:3:18"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14052:102:18",
																		"nodeType": "YulAssignment",
																		"src": "14052:102:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "14147:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "14147:6:18"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "14062:84:18",
																				"nodeType": "YulIdentifier",
																				"src": "14062:84:18"
																			},
																			"nativeSrc": "14062:92:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14062:92:18"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "14052:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14052:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13806:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "13806:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13809:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13809:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13803:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "13803:2:18"
																},
																"nativeSrc": "13803:13:18",
																"nodeType": "YulFunctionCall",
																"src": "13803:13:18"
															},
															"nativeSrc": "13784:380:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13817:18:18",
																"nodeType": "YulBlock",
																"src": "13817:18:18",
																"statements": [
																	{
																		"nativeSrc": "13819:14:18",
																		"nodeType": "YulAssignment",
																		"src": "13819:14:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13828:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "13828:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13831:1:18",
																					"nodeType": "YulLiteral",
																					"src": "13831:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13824:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "13824:3:18"
																			},
																			"nativeSrc": "13824:9:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13824:9:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13819:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "13819:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13788:14:18",
																"nodeType": "YulBlock",
																"src": "13788:14:18",
																"statements": [
																	{
																		"nativeSrc": "13790:10:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13790:10:18",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13799:1:18",
																			"nodeType": "YulLiteral",
																			"src": "13799:1:18",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "13794:1:18",
																				"nodeType": "YulTypedName",
																				"src": "13794:1:18",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13784:380:18"
														},
														{
															"nativeSrc": "14173:10:18",
															"nodeType": "YulAssignment",
															"src": "14173:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "14180:3:18",
																"nodeType": "YulIdentifier",
																"src": "14180:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14173:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14173:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13201:988:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13368:5:18",
														"nodeType": "YulTypedName",
														"src": "13368:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13375:3:18",
														"nodeType": "YulTypedName",
														"src": "13375:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13384:3:18",
														"nodeType": "YulTypedName",
														"src": "13384:3:18",
														"type": ""
													}
												],
												"src": "13201:988:18"
											},
											{
												"body": {
													"nativeSrc": "14407:289:18",
													"nodeType": "YulBlock",
													"src": "14407:289:18",
													"statements": [
														{
															"nativeSrc": "14417:26:18",
															"nodeType": "YulAssignment",
															"src": "14417:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14429:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14429:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14440:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14440:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14425:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14425:3:18"
																},
																"nativeSrc": "14425:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14425:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14417:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14417:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14464:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14464:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14475:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14475:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14460:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14460:3:18"
																		},
																		"nativeSrc": "14460:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14460:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14483:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "14483:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14489:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14489:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14479:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14479:3:18"
																		},
																		"nativeSrc": "14479:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14479:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14453:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14453:6:18"
																},
																"nativeSrc": "14453:47:18",
																"nodeType": "YulFunctionCall",
																"src": "14453:47:18"
															},
															"nativeSrc": "14453:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "14453:47:18"
														},
														{
															"nativeSrc": "14509:180:18",
															"nodeType": "YulAssignment",
															"src": "14509:180:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14675:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14675:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14684:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14684:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14517:157:18",
																	"nodeType": "YulIdentifier",
																	"src": "14517:157:18"
																},
																"nativeSrc": "14517:172:18",
																"nodeType": "YulFunctionCall",
																"src": "14517:172:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14509:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14509:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14195:501:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14379:9:18",
														"nodeType": "YulTypedName",
														"src": "14379:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14391:6:18",
														"nodeType": "YulTypedName",
														"src": "14391:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14402:4:18",
														"nodeType": "YulTypedName",
														"src": "14402:4:18",
														"type": ""
													}
												],
												"src": "14195:501:18"
											},
											{
												"body": {
													"nativeSrc": "14768:263:18",
													"nodeType": "YulBlock",
													"src": "14768:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "14814:83:18",
																"nodeType": "YulBlock",
																"src": "14814:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14816:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "14816:77:18"
																			},
																			"nativeSrc": "14816:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14816:79:18"
																		},
																		"nativeSrc": "14816:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14816:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14789:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14789:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14798:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14798:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14785:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14785:3:18"
																		},
																		"nativeSrc": "14785:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14785:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14810:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14810:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14781:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14781:3:18"
																},
																"nativeSrc": "14781:32:18",
																"nodeType": "YulFunctionCall",
																"src": "14781:32:18"
															},
															"nativeSrc": "14778:119:18",
															"nodeType": "YulIf",
															"src": "14778:119:18"
														},
														{
															"nativeSrc": "14907:117:18",
															"nodeType": "YulBlock",
															"src": "14907:117:18",
															"statements": [
																{
																	"nativeSrc": "14922:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14922:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14936:1:18",
																		"nodeType": "YulLiteral",
																		"src": "14936:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14926:6:18",
																			"nodeType": "YulTypedName",
																			"src": "14926:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14951:63:18",
																	"nodeType": "YulAssignment",
																	"src": "14951:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14986:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "14986:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14997:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "14997:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14982:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14982:3:18"
																				},
																				"nativeSrc": "14982:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14982:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15006:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "15006:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "14961:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "14961:20:18"
																		},
																		"nativeSrc": "14961:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14961:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14951:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "14951:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14702:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14738:9:18",
														"nodeType": "YulTypedName",
														"src": "14738:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14749:7:18",
														"nodeType": "YulTypedName",
														"src": "14749:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14761:6:18",
														"nodeType": "YulTypedName",
														"src": "14761:6:18",
														"type": ""
													}
												],
												"src": "14702:329:18"
											},
											{
												"body": {
													"nativeSrc": "15102:53:18",
													"nodeType": "YulBlock",
													"src": "15102:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15119:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15119:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15142:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "15142:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "15124:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "15124:17:18"
																		},
																		"nativeSrc": "15124:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15124:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15112:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15112:6:18"
																},
																"nativeSrc": "15112:37:18",
																"nodeType": "YulFunctionCall",
																"src": "15112:37:18"
															},
															"nativeSrc": "15112:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "15112:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "15037:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15090:5:18",
														"nodeType": "YulTypedName",
														"src": "15090:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15097:3:18",
														"nodeType": "YulTypedName",
														"src": "15097:3:18",
														"type": ""
													}
												],
												"src": "15037:118:18"
											},
											{
												"body": {
													"nativeSrc": "15259:124:18",
													"nodeType": "YulBlock",
													"src": "15259:124:18",
													"statements": [
														{
															"nativeSrc": "15269:26:18",
															"nodeType": "YulAssignment",
															"src": "15269:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15281:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15281:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15292:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15292:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15277:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15277:3:18"
																},
																"nativeSrc": "15277:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15277:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15269:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15269:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15349:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15349:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15362:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15362:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15373:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15373:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15358:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15358:3:18"
																		},
																		"nativeSrc": "15358:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15358:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15305:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "15305:43:18"
																},
																"nativeSrc": "15305:71:18",
																"nodeType": "YulFunctionCall",
																"src": "15305:71:18"
															},
															"nativeSrc": "15305:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "15305:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "15161:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15231:9:18",
														"nodeType": "YulTypedName",
														"src": "15231:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15243:6:18",
														"nodeType": "YulTypedName",
														"src": "15243:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15254:4:18",
														"nodeType": "YulTypedName",
														"src": "15254:4:18",
														"type": ""
													}
												],
												"src": "15161:222:18"
											},
											{
												"body": {
													"nativeSrc": "15429:76:18",
													"nodeType": "YulBlock",
													"src": "15429:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "15483:16:18",
																"nodeType": "YulBlock",
																"src": "15483:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15492:1:18",
																					"nodeType": "YulLiteral",
																					"src": "15492:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15495:1:18",
																					"nodeType": "YulLiteral",
																					"src": "15495:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15485:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15485:6:18"
																			},
																			"nativeSrc": "15485:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15485:12:18"
																		},
																		"nativeSrc": "15485:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15485:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15452:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "15452:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15474:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "15474:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "15459:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "15459:14:18"
																				},
																				"nativeSrc": "15459:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15459:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15449:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "15449:2:18"
																		},
																		"nativeSrc": "15449:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15449:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15442:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15442:6:18"
																},
																"nativeSrc": "15442:40:18",
																"nodeType": "YulFunctionCall",
																"src": "15442:40:18"
															},
															"nativeSrc": "15439:60:18",
															"nodeType": "YulIf",
															"src": "15439:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "15389:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15422:5:18",
														"nodeType": "YulTypedName",
														"src": "15422:5:18",
														"type": ""
													}
												],
												"src": "15389:116:18"
											},
											{
												"body": {
													"nativeSrc": "15560:84:18",
													"nodeType": "YulBlock",
													"src": "15560:84:18",
													"statements": [
														{
															"nativeSrc": "15570:29:18",
															"nodeType": "YulAssignment",
															"src": "15570:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15592:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15592:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15579:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "15579:12:18"
																},
																"nativeSrc": "15579:20:18",
																"nodeType": "YulFunctionCall",
																"src": "15579:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15570:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15570:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15632:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "15632:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15608:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "15608:23:18"
																},
																"nativeSrc": "15608:30:18",
																"nodeType": "YulFunctionCall",
																"src": "15608:30:18"
															},
															"nativeSrc": "15608:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "15608:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "15511:133:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15538:6:18",
														"nodeType": "YulTypedName",
														"src": "15538:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15546:3:18",
														"nodeType": "YulTypedName",
														"src": "15546:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15554:5:18",
														"nodeType": "YulTypedName",
														"src": "15554:5:18",
														"type": ""
													}
												],
												"src": "15511:133:18"
											},
											{
												"body": {
													"nativeSrc": "15730:388:18",
													"nodeType": "YulBlock",
													"src": "15730:388:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "15776:83:18",
																"nodeType": "YulBlock",
																"src": "15776:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15778:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "15778:77:18"
																			},
																			"nativeSrc": "15778:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15778:79:18"
																		},
																		"nativeSrc": "15778:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15778:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15751:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "15751:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15760:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15760:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15747:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15747:3:18"
																		},
																		"nativeSrc": "15747:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15747:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15772:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15772:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15743:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15743:3:18"
																},
																"nativeSrc": "15743:32:18",
																"nodeType": "YulFunctionCall",
																"src": "15743:32:18"
															},
															"nativeSrc": "15740:119:18",
															"nodeType": "YulIf",
															"src": "15740:119:18"
														},
														{
															"nativeSrc": "15869:117:18",
															"nodeType": "YulBlock",
															"src": "15869:117:18",
															"statements": [
																{
																	"nativeSrc": "15884:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15884:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15898:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15898:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15888:6:18",
																			"nodeType": "YulTypedName",
																			"src": "15888:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15913:63:18",
																	"nodeType": "YulAssignment",
																	"src": "15913:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15948:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "15948:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15959:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "15959:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15944:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "15944:3:18"
																				},
																				"nativeSrc": "15944:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15944:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15968:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "15968:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "15923:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "15923:20:18"
																		},
																		"nativeSrc": "15923:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15923:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15913:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "15913:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15996:115:18",
															"nodeType": "YulBlock",
															"src": "15996:115:18",
															"statements": [
																{
																	"nativeSrc": "16011:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16011:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16025:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16025:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16015:6:18",
																			"nodeType": "YulTypedName",
																			"src": "16015:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16041:60:18",
																	"nodeType": "YulAssignment",
																	"src": "16041:60:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16073:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "16073:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16084:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "16084:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16069:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16069:3:18"
																				},
																				"nativeSrc": "16069:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16069:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16093:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "16093:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "16051:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "16051:17:18"
																		},
																		"nativeSrc": "16051:50:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16051:50:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16041:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "16041:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "15650:468:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15692:9:18",
														"nodeType": "YulTypedName",
														"src": "15692:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15703:7:18",
														"nodeType": "YulTypedName",
														"src": "15703:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15715:6:18",
														"nodeType": "YulTypedName",
														"src": "15715:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15723:6:18",
														"nodeType": "YulTypedName",
														"src": "15723:6:18",
														"type": ""
													}
												],
												"src": "15650:468:18"
											},
											{
												"body": {
													"nativeSrc": "16190:241:18",
													"nodeType": "YulBlock",
													"src": "16190:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "16295:22:18",
																"nodeType": "YulBlock",
																"src": "16295:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16297:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "16297:16:18"
																			},
																			"nativeSrc": "16297:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "16297:18:18"
																		},
																		"nativeSrc": "16297:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "16297:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "16267:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16267:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16275:18:18",
																		"nodeType": "YulLiteral",
																		"src": "16275:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16264:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "16264:2:18"
																},
																"nativeSrc": "16264:30:18",
																"nodeType": "YulFunctionCall",
																"src": "16264:30:18"
															},
															"nativeSrc": "16261:56:18",
															"nodeType": "YulIf",
															"src": "16261:56:18"
														},
														{
															"nativeSrc": "16327:37:18",
															"nodeType": "YulAssignment",
															"src": "16327:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "16357:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16357:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "16335:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "16335:21:18"
																},
																"nativeSrc": "16335:29:18",
																"nodeType": "YulFunctionCall",
																"src": "16335:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "16327:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16327:4:18"
																}
															]
														},
														{
															"nativeSrc": "16401:23:18",
															"nodeType": "YulAssignment",
															"src": "16401:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "16413:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16413:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16419:4:18",
																		"nodeType": "YulLiteral",
																		"src": "16419:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16409:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16409:3:18"
																},
																"nativeSrc": "16409:15:18",
																"nodeType": "YulFunctionCall",
																"src": "16409:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "16401:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16401:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "16124:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "16174:6:18",
														"nodeType": "YulTypedName",
														"src": "16174:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "16185:4:18",
														"nodeType": "YulTypedName",
														"src": "16185:4:18",
														"type": ""
													}
												],
												"src": "16124:307:18"
											},
											{
												"body": {
													"nativeSrc": "16520:340:18",
													"nodeType": "YulBlock",
													"src": "16520:340:18",
													"statements": [
														{
															"nativeSrc": "16530:74:18",
															"nodeType": "YulAssignment",
															"src": "16530:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16596:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16596:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "16555:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "16555:40:18"
																		},
																		"nativeSrc": "16555:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16555:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "16539:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "16539:15:18"
																},
																"nativeSrc": "16539:65:18",
																"nodeType": "YulFunctionCall",
																"src": "16539:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "16530:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "16530:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "16620:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "16620:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16627:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16627:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16613:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16613:6:18"
																},
																"nativeSrc": "16613:21:18",
																"nodeType": "YulFunctionCall",
																"src": "16613:21:18"
															},
															"nativeSrc": "16613:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "16613:21:18"
														},
														{
															"nativeSrc": "16643:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "16643:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "16658:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "16658:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16665:4:18",
																		"nodeType": "YulLiteral",
																		"src": "16665:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16654:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16654:3:18"
																},
																"nativeSrc": "16654:16:18",
																"nodeType": "YulFunctionCall",
																"src": "16654:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "16647:3:18",
																	"nodeType": "YulTypedName",
																	"src": "16647:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16708:83:18",
																"nodeType": "YulBlock",
																"src": "16708:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "16710:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "16710:77:18"
																			},
																			"nativeSrc": "16710:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "16710:79:18"
																		},
																		"nativeSrc": "16710:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "16710:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "16689:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "16689:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "16694:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16694:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16685:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16685:3:18"
																		},
																		"nativeSrc": "16685:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16685:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "16703:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16703:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16682:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "16682:2:18"
																},
																"nativeSrc": "16682:25:18",
																"nodeType": "YulFunctionCall",
																"src": "16682:25:18"
															},
															"nativeSrc": "16679:112:18",
															"nodeType": "YulIf",
															"src": "16679:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "16837:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16837:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "16842:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16842:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16847:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "16847:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "16800:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "16800:36:18"
																},
																"nativeSrc": "16800:54:18",
																"nodeType": "YulFunctionCall",
																"src": "16800:54:18"
															},
															"nativeSrc": "16800:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "16800:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "16437:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "16493:3:18",
														"nodeType": "YulTypedName",
														"src": "16493:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16498:6:18",
														"nodeType": "YulTypedName",
														"src": "16498:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16506:3:18",
														"nodeType": "YulTypedName",
														"src": "16506:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "16514:5:18",
														"nodeType": "YulTypedName",
														"src": "16514:5:18",
														"type": ""
													}
												],
												"src": "16437:423:18"
											},
											{
												"body": {
													"nativeSrc": "16940:277:18",
													"nodeType": "YulBlock",
													"src": "16940:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "16989:83:18",
																"nodeType": "YulBlock",
																"src": "16989:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "16991:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "16991:77:18"
																			},
																			"nativeSrc": "16991:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "16991:79:18"
																		},
																		"nativeSrc": "16991:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "16991:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "16968:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "16968:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16976:4:18",
																						"nodeType": "YulLiteral",
																						"src": "16976:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16964:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16964:3:18"
																				},
																				"nativeSrc": "16964:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16964:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "16983:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "16983:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "16960:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16960:3:18"
																		},
																		"nativeSrc": "16960:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16960:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16953:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16953:6:18"
																},
																"nativeSrc": "16953:35:18",
																"nodeType": "YulFunctionCall",
																"src": "16953:35:18"
															},
															"nativeSrc": "16950:122:18",
															"nodeType": "YulIf",
															"src": "16950:122:18"
														},
														{
															"nativeSrc": "17081:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "17081:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17108:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17108:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "17095:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "17095:12:18"
																},
																"nativeSrc": "17095:20:18",
																"nodeType": "YulFunctionCall",
																"src": "17095:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17085:6:18",
																	"nodeType": "YulTypedName",
																	"src": "17085:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17124:87:18",
															"nodeType": "YulAssignment",
															"src": "17124:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17184:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "17184:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17192:4:18",
																				"nodeType": "YulLiteral",
																				"src": "17192:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17180:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17180:3:18"
																		},
																		"nativeSrc": "17180:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17180:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17199:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17199:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17207:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17207:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "17133:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "17133:46:18"
																},
																"nativeSrc": "17133:78:18",
																"nodeType": "YulFunctionCall",
																"src": "17133:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "17124:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17124:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "16879:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16918:6:18",
														"nodeType": "YulTypedName",
														"src": "16918:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16926:3:18",
														"nodeType": "YulTypedName",
														"src": "16926:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "16934:5:18",
														"nodeType": "YulTypedName",
														"src": "16934:5:18",
														"type": ""
													}
												],
												"src": "16879:338:18"
											},
											{
												"body": {
													"nativeSrc": "17349:817:18",
													"nodeType": "YulBlock",
													"src": "17349:817:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "17396:83:18",
																"nodeType": "YulBlock",
																"src": "17396:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17398:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "17398:77:18"
																			},
																			"nativeSrc": "17398:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17398:79:18"
																		},
																		"nativeSrc": "17398:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17398:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17370:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17370:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17379:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17379:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17366:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17366:3:18"
																		},
																		"nativeSrc": "17366:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17366:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17391:3:18",
																		"nodeType": "YulLiteral",
																		"src": "17391:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17362:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17362:3:18"
																},
																"nativeSrc": "17362:33:18",
																"nodeType": "YulFunctionCall",
																"src": "17362:33:18"
															},
															"nativeSrc": "17359:120:18",
															"nodeType": "YulIf",
															"src": "17359:120:18"
														},
														{
															"nativeSrc": "17489:117:18",
															"nodeType": "YulBlock",
															"src": "17489:117:18",
															"statements": [
																{
																	"nativeSrc": "17504:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17504:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17518:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17518:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17508:6:18",
																			"nodeType": "YulTypedName",
																			"src": "17508:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17533:63:18",
																	"nodeType": "YulAssignment",
																	"src": "17533:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17568:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "17568:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17579:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "17579:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17564:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17564:3:18"
																				},
																				"nativeSrc": "17564:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17564:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17588:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17588:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17543:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "17543:20:18"
																		},
																		"nativeSrc": "17543:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17543:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17533:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "17533:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17616:118:18",
															"nodeType": "YulBlock",
															"src": "17616:118:18",
															"statements": [
																{
																	"nativeSrc": "17631:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17631:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17645:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17645:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17635:6:18",
																			"nodeType": "YulTypedName",
																			"src": "17635:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17661:63:18",
																	"nodeType": "YulAssignment",
																	"src": "17661:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17696:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "17696:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17707:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "17707:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17692:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17692:3:18"
																				},
																				"nativeSrc": "17692:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17692:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17716:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17716:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17671:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "17671:20:18"
																		},
																		"nativeSrc": "17671:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17671:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17661:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "17661:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17744:118:18",
															"nodeType": "YulBlock",
															"src": "17744:118:18",
															"statements": [
																{
																	"nativeSrc": "17759:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17759:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17773:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17773:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17763:6:18",
																			"nodeType": "YulTypedName",
																			"src": "17763:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17789:63:18",
																	"nodeType": "YulAssignment",
																	"src": "17789:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17824:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "17824:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17835:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "17835:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17820:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17820:3:18"
																				},
																				"nativeSrc": "17820:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17820:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17844:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17844:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "17799:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "17799:20:18"
																		},
																		"nativeSrc": "17799:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17799:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17789:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "17789:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17872:287:18",
															"nodeType": "YulBlock",
															"src": "17872:287:18",
															"statements": [
																{
																	"nativeSrc": "17887:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17887:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17918:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "17918:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17929:2:18",
																						"nodeType": "YulLiteral",
																						"src": "17929:2:18",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17914:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17914:3:18"
																				},
																				"nativeSrc": "17914:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17914:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17901:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "17901:12:18"
																		},
																		"nativeSrc": "17901:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17901:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17891:6:18",
																			"nodeType": "YulTypedName",
																			"src": "17891:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "17980:83:18",
																		"nodeType": "YulBlock",
																		"src": "17980:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "17982:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "17982:77:18"
																					},
																					"nativeSrc": "17982:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "17982:79:18"
																				},
																				"nativeSrc": "17982:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "17982:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17952:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "17952:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17960:18:18",
																				"nodeType": "YulLiteral",
																				"src": "17960:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17949:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "17949:2:18"
																		},
																		"nativeSrc": "17949:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17949:30:18"
																	},
																	"nativeSrc": "17946:117:18",
																	"nodeType": "YulIf",
																	"src": "17946:117:18"
																},
																{
																	"nativeSrc": "18077:72:18",
																	"nodeType": "YulAssignment",
																	"src": "18077:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18121:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "18121:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18132:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "18132:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18117:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18117:3:18"
																				},
																				"nativeSrc": "18117:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18117:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18141:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "18141:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "18087:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "18087:29:18"
																		},
																		"nativeSrc": "18087:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18087:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "18077:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "18077:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "17223:943:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17295:9:18",
														"nodeType": "YulTypedName",
														"src": "17295:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17306:7:18",
														"nodeType": "YulTypedName",
														"src": "17306:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17318:6:18",
														"nodeType": "YulTypedName",
														"src": "17318:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17326:6:18",
														"nodeType": "YulTypedName",
														"src": "17326:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17334:6:18",
														"nodeType": "YulTypedName",
														"src": "17334:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17342:6:18",
														"nodeType": "YulTypedName",
														"src": "17342:6:18",
														"type": ""
													}
												],
												"src": "17223:943:18"
											},
											{
												"body": {
													"nativeSrc": "18255:391:18",
													"nodeType": "YulBlock",
													"src": "18255:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "18301:83:18",
																"nodeType": "YulBlock",
																"src": "18301:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18303:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "18303:77:18"
																			},
																			"nativeSrc": "18303:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "18303:79:18"
																		},
																		"nativeSrc": "18303:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "18303:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18276:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "18276:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18285:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18285:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18272:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18272:3:18"
																		},
																		"nativeSrc": "18272:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18272:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18297:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18297:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18268:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18268:3:18"
																},
																"nativeSrc": "18268:32:18",
																"nodeType": "YulFunctionCall",
																"src": "18268:32:18"
															},
															"nativeSrc": "18265:119:18",
															"nodeType": "YulIf",
															"src": "18265:119:18"
														},
														{
															"nativeSrc": "18394:117:18",
															"nodeType": "YulBlock",
															"src": "18394:117:18",
															"statements": [
																{
																	"nativeSrc": "18409:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18409:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18423:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18423:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18413:6:18",
																			"nodeType": "YulTypedName",
																			"src": "18413:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18438:63:18",
																	"nodeType": "YulAssignment",
																	"src": "18438:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18473:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "18473:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18484:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "18484:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18469:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18469:3:18"
																				},
																				"nativeSrc": "18469:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18469:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18493:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "18493:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18448:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "18448:20:18"
																		},
																		"nativeSrc": "18448:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18448:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18438:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "18438:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18521:118:18",
															"nodeType": "YulBlock",
															"src": "18521:118:18",
															"statements": [
																{
																	"nativeSrc": "18536:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18536:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18550:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18550:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18540:6:18",
																			"nodeType": "YulTypedName",
																			"src": "18540:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18566:63:18",
																	"nodeType": "YulAssignment",
																	"src": "18566:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18601:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "18601:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18612:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "18612:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18597:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "18597:3:18"
																				},
																				"nativeSrc": "18597:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "18597:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18621:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "18621:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18576:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "18576:20:18"
																		},
																		"nativeSrc": "18576:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18576:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18566:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "18566:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "18172:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18217:9:18",
														"nodeType": "YulTypedName",
														"src": "18217:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18228:7:18",
														"nodeType": "YulTypedName",
														"src": "18228:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18240:6:18",
														"nodeType": "YulTypedName",
														"src": "18240:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18248:6:18",
														"nodeType": "YulTypedName",
														"src": "18248:6:18",
														"type": ""
													}
												],
												"src": "18172:474:18"
											},
											{
												"body": {
													"nativeSrc": "18680:152:18",
													"nodeType": "YulBlock",
													"src": "18680:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18697:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18697:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18700:77:18",
																		"nodeType": "YulLiteral",
																		"src": "18700:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18690:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18690:6:18"
																},
																"nativeSrc": "18690:88:18",
																"nodeType": "YulFunctionCall",
																"src": "18690:88:18"
															},
															"nativeSrc": "18690:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "18690:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18794:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18794:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18797:4:18",
																		"nodeType": "YulLiteral",
																		"src": "18797:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18787:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18787:6:18"
																},
																"nativeSrc": "18787:15:18",
																"nodeType": "YulFunctionCall",
																"src": "18787:15:18"
															},
															"nativeSrc": "18787:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "18787:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18818:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18818:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18821:4:18",
																		"nodeType": "YulLiteral",
																		"src": "18821:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18811:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18811:6:18"
																},
																"nativeSrc": "18811:15:18",
																"nodeType": "YulFunctionCall",
																"src": "18811:15:18"
															},
															"nativeSrc": "18811:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "18811:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "18652:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "18652:180:18"
											},
											{
												"body": {
													"nativeSrc": "18889:269:18",
													"nodeType": "YulBlock",
													"src": "18889:269:18",
													"statements": [
														{
															"nativeSrc": "18899:22:18",
															"nodeType": "YulAssignment",
															"src": "18899:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18913:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18913:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18919:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18919:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18909:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18909:3:18"
																},
																"nativeSrc": "18909:12:18",
																"nodeType": "YulFunctionCall",
																"src": "18909:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18899:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18899:6:18"
																}
															]
														},
														{
															"nativeSrc": "18930:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "18930:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18960:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18960:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18966:1:18",
																		"nodeType": "YulLiteral",
																		"src": "18966:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18956:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18956:3:18"
																},
																"nativeSrc": "18956:12:18",
																"nodeType": "YulFunctionCall",
																"src": "18956:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "18934:18:18",
																	"nodeType": "YulTypedName",
																	"src": "18934:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19007:51:18",
																"nodeType": "YulBlock",
																"src": "19007:51:18",
																"statements": [
																	{
																		"nativeSrc": "19021:27:18",
																		"nodeType": "YulAssignment",
																		"src": "19021:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "19035:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "19035:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19043:4:18",
																					"nodeType": "YulLiteral",
																					"src": "19043:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "19031:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "19031:3:18"
																			},
																			"nativeSrc": "19031:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "19031:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "19021:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19021:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "18987:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "18987:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18980:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18980:6:18"
																},
																"nativeSrc": "18980:26:18",
																"nodeType": "YulFunctionCall",
																"src": "18980:26:18"
															},
															"nativeSrc": "18977:81:18",
															"nodeType": "YulIf",
															"src": "18977:81:18"
														},
														{
															"body": {
																"nativeSrc": "19110:42:18",
																"nodeType": "YulBlock",
																"src": "19110:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "19124:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "19124:16:18"
																			},
																			"nativeSrc": "19124:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "19124:18:18"
																		},
																		"nativeSrc": "19124:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "19124:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "19074:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "19074:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19097:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19097:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19105:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19105:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "19094:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "19094:2:18"
																		},
																		"nativeSrc": "19094:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19094:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19071:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "19071:2:18"
																},
																"nativeSrc": "19071:38:18",
																"nodeType": "YulFunctionCall",
																"src": "19071:38:18"
															},
															"nativeSrc": "19068:84:18",
															"nodeType": "YulIf",
															"src": "19068:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "18838:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18873:4:18",
														"nodeType": "YulTypedName",
														"src": "18873:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18882:6:18",
														"nodeType": "YulTypedName",
														"src": "18882:6:18",
														"type": ""
													}
												],
												"src": "18838:320:18"
											},
											{
												"body": {
													"nativeSrc": "19318:288:18",
													"nodeType": "YulBlock",
													"src": "19318:288:18",
													"statements": [
														{
															"nativeSrc": "19328:26:18",
															"nodeType": "YulAssignment",
															"src": "19328:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19340:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "19340:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19351:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19351:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19336:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19336:3:18"
																},
																"nativeSrc": "19336:18:18",
																"nodeType": "YulFunctionCall",
																"src": "19336:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19328:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19328:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19408:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19408:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19421:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19421:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19432:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19432:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19417:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19417:3:18"
																		},
																		"nativeSrc": "19417:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19417:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19364:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "19364:43:18"
																},
																"nativeSrc": "19364:71:18",
																"nodeType": "YulFunctionCall",
																"src": "19364:71:18"
															},
															"nativeSrc": "19364:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "19364:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19489:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19489:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19502:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19502:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19513:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19513:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19498:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19498:3:18"
																		},
																		"nativeSrc": "19498:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19498:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19445:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "19445:43:18"
																},
																"nativeSrc": "19445:72:18",
																"nodeType": "YulFunctionCall",
																"src": "19445:72:18"
															},
															"nativeSrc": "19445:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "19445:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19571:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19571:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19584:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19584:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19595:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19595:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19580:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19580:3:18"
																		},
																		"nativeSrc": "19580:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19580:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19527:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "19527:43:18"
																},
																"nativeSrc": "19527:72:18",
																"nodeType": "YulFunctionCall",
																"src": "19527:72:18"
															},
															"nativeSrc": "19527:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "19527:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "19164:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19274:9:18",
														"nodeType": "YulTypedName",
														"src": "19274:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19286:6:18",
														"nodeType": "YulTypedName",
														"src": "19286:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19294:6:18",
														"nodeType": "YulTypedName",
														"src": "19294:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19302:6:18",
														"nodeType": "YulTypedName",
														"src": "19302:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19313:4:18",
														"nodeType": "YulTypedName",
														"src": "19313:4:18",
														"type": ""
													}
												],
												"src": "19164:442:18"
											},
											{
												"body": {
													"nativeSrc": "19718:124:18",
													"nodeType": "YulBlock",
													"src": "19718:124:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19740:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19740:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19748:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19748:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19736:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19736:3:18"
																		},
																		"nativeSrc": "19736:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19736:14:18"
																	},
																	{
																		"hexValue": "4e6569746865722073656e646572206e6f7220726563697069656e7420697320",
																		"kind": "string",
																		"nativeSrc": "19752:34:18",
																		"nodeType": "YulLiteral",
																		"src": "19752:34:18",
																		"type": "",
																		"value": "Neither sender nor recipient is "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19729:6:18"
																},
																"nativeSrc": "19729:58:18",
																"nodeType": "YulFunctionCall",
																"src": "19729:58:18"
															},
															"nativeSrc": "19729:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "19729:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19808:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19808:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19816:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19816:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19804:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19804:3:18"
																		},
																		"nativeSrc": "19804:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19804:15:18"
																	},
																	{
																		"hexValue": "77686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "19821:13:18",
																		"nodeType": "YulLiteral",
																		"src": "19821:13:18",
																		"type": "",
																		"value": "whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19797:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19797:6:18"
																},
																"nativeSrc": "19797:38:18",
																"nodeType": "YulFunctionCall",
																"src": "19797:38:18"
															},
															"nativeSrc": "19797:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "19797:38:18"
														}
													]
												},
												"name": "store_literal_in_memory_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca",
												"nativeSrc": "19612:230:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19710:6:18",
														"nodeType": "YulTypedName",
														"src": "19710:6:18",
														"type": ""
													}
												],
												"src": "19612:230:18"
											},
											{
												"body": {
													"nativeSrc": "19994:220:18",
													"nodeType": "YulBlock",
													"src": "19994:220:18",
													"statements": [
														{
															"nativeSrc": "20004:74:18",
															"nodeType": "YulAssignment",
															"src": "20004:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20070:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20070:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20075:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20075:2:18",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20011:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "20011:58:18"
																},
																"nativeSrc": "20011:67:18",
																"nodeType": "YulFunctionCall",
																"src": "20011:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20004:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20004:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20176:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20176:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca",
																	"nativeSrc": "20087:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "20087:88:18"
																},
																"nativeSrc": "20087:93:18",
																"nodeType": "YulFunctionCall",
																"src": "20087:93:18"
															},
															"nativeSrc": "20087:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "20087:93:18"
														},
														{
															"nativeSrc": "20189:19:18",
															"nodeType": "YulAssignment",
															"src": "20189:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20200:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20200:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20205:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20205:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20196:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20196:3:18"
																},
																"nativeSrc": "20196:12:18",
																"nodeType": "YulFunctionCall",
																"src": "20196:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20189:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20189:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19848:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19982:3:18",
														"nodeType": "YulTypedName",
														"src": "19982:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19990:3:18",
														"nodeType": "YulTypedName",
														"src": "19990:3:18",
														"type": ""
													}
												],
												"src": "19848:366:18"
											},
											{
												"body": {
													"nativeSrc": "20391:248:18",
													"nodeType": "YulBlock",
													"src": "20391:248:18",
													"statements": [
														{
															"nativeSrc": "20401:26:18",
															"nodeType": "YulAssignment",
															"src": "20401:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20413:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "20413:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20424:2:18",
																		"nodeType": "YulLiteral",
																		"src": "20424:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20409:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20409:3:18"
																},
																"nativeSrc": "20409:18:18",
																"nodeType": "YulFunctionCall",
																"src": "20409:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20401:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20401:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20448:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20448:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20459:1:18",
																				"nodeType": "YulLiteral",
																				"src": "20459:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20444:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20444:3:18"
																		},
																		"nativeSrc": "20444:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20444:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20467:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20467:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20473:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "20473:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20463:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20463:3:18"
																		},
																		"nativeSrc": "20463:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20463:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20437:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20437:6:18"
																},
																"nativeSrc": "20437:47:18",
																"nodeType": "YulFunctionCall",
																"src": "20437:47:18"
															},
															"nativeSrc": "20437:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "20437:47:18"
														},
														{
															"nativeSrc": "20493:139:18",
															"nodeType": "YulAssignment",
															"src": "20493:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20627:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "20627:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20501:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "20501:124:18"
																},
																"nativeSrc": "20501:131:18",
																"nodeType": "YulFunctionCall",
																"src": "20501:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20493:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20493:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20220:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20371:9:18",
														"nodeType": "YulTypedName",
														"src": "20371:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20386:4:18",
														"nodeType": "YulTypedName",
														"src": "20386:4:18",
														"type": ""
													}
												],
												"src": "20220:419:18"
											},
											{
												"body": {
													"nativeSrc": "20673:152:18",
													"nodeType": "YulBlock",
													"src": "20673:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20690:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20690:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20693:77:18",
																		"nodeType": "YulLiteral",
																		"src": "20693:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20683:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20683:6:18"
																},
																"nativeSrc": "20683:88:18",
																"nodeType": "YulFunctionCall",
																"src": "20683:88:18"
															},
															"nativeSrc": "20683:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "20683:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20787:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20787:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20790:4:18",
																		"nodeType": "YulLiteral",
																		"src": "20790:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20780:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20780:6:18"
																},
																"nativeSrc": "20780:15:18",
																"nodeType": "YulFunctionCall",
																"src": "20780:15:18"
															},
															"nativeSrc": "20780:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "20780:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20811:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20811:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20814:4:18",
																		"nodeType": "YulLiteral",
																		"src": "20814:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20804:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20804:6:18"
																},
																"nativeSrc": "20804:15:18",
																"nodeType": "YulFunctionCall",
																"src": "20804:15:18"
															},
															"nativeSrc": "20804:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "20804:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "20645:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "20645:180:18"
											},
											{
												"body": {
													"nativeSrc": "20985:288:18",
													"nodeType": "YulBlock",
													"src": "20985:288:18",
													"statements": [
														{
															"nativeSrc": "20995:26:18",
															"nodeType": "YulAssignment",
															"src": "20995:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21007:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "21007:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21018:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21018:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21003:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21003:3:18"
																},
																"nativeSrc": "21003:18:18",
																"nodeType": "YulFunctionCall",
																"src": "21003:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20995:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "20995:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21075:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21075:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21088:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21088:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21099:1:18",
																				"nodeType": "YulLiteral",
																				"src": "21099:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21084:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21084:3:18"
																		},
																		"nativeSrc": "21084:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21084:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21031:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "21031:43:18"
																},
																"nativeSrc": "21031:71:18",
																"nodeType": "YulFunctionCall",
																"src": "21031:71:18"
															},
															"nativeSrc": "21031:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "21031:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21156:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21156:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21169:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21169:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21180:2:18",
																				"nodeType": "YulLiteral",
																				"src": "21180:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21165:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21165:3:18"
																		},
																		"nativeSrc": "21165:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21165:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21112:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "21112:43:18"
																},
																"nativeSrc": "21112:72:18",
																"nodeType": "YulFunctionCall",
																"src": "21112:72:18"
															},
															"nativeSrc": "21112:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "21112:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21238:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21238:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21251:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "21251:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21262:2:18",
																				"nodeType": "YulLiteral",
																				"src": "21262:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21247:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21247:3:18"
																		},
																		"nativeSrc": "21247:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21247:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21194:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "21194:43:18"
																},
																"nativeSrc": "21194:72:18",
																"nodeType": "YulFunctionCall",
																"src": "21194:72:18"
															},
															"nativeSrc": "21194:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "21194:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "20831:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20941:9:18",
														"nodeType": "YulTypedName",
														"src": "20941:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20953:6:18",
														"nodeType": "YulTypedName",
														"src": "20953:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20961:6:18",
														"nodeType": "YulTypedName",
														"src": "20961:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20969:6:18",
														"nodeType": "YulTypedName",
														"src": "20969:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20980:4:18",
														"nodeType": "YulTypedName",
														"src": "20980:4:18",
														"type": ""
													}
												],
												"src": "20831:442:18"
											},
											{
												"body": {
													"nativeSrc": "21393:34:18",
													"nodeType": "YulBlock",
													"src": "21393:34:18",
													"statements": [
														{
															"nativeSrc": "21403:18:18",
															"nodeType": "YulAssignment",
															"src": "21403:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "21418:3:18",
																"nodeType": "YulIdentifier",
																"src": "21418:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21403:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "21403:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21279:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21365:3:18",
														"nodeType": "YulTypedName",
														"src": "21365:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21370:6:18",
														"nodeType": "YulTypedName",
														"src": "21370:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21381:11:18",
														"nodeType": "YulTypedName",
														"src": "21381:11:18",
														"type": ""
													}
												],
												"src": "21279:148:18"
											},
											{
												"body": {
													"nativeSrc": "21543:280:18",
													"nodeType": "YulBlock",
													"src": "21543:280:18",
													"statements": [
														{
															"nativeSrc": "21553:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "21553:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21600:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "21600:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21567:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "21567:32:18"
																},
																"nativeSrc": "21567:39:18",
																"nodeType": "YulFunctionCall",
																"src": "21567:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21557:6:18",
																	"nodeType": "YulTypedName",
																	"src": "21557:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21615:96:18",
															"nodeType": "YulAssignment",
															"src": "21615:96:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21699:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21699:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21704:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21704:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21622:76:18",
																	"nodeType": "YulIdentifier",
																	"src": "21622:76:18"
																},
																"nativeSrc": "21622:89:18",
																"nodeType": "YulFunctionCall",
																"src": "21622:89:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21615:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21615:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21759:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "21759:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21766:4:18",
																				"nodeType": "YulLiteral",
																				"src": "21766:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21755:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "21755:3:18"
																		},
																		"nativeSrc": "21755:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "21755:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21773:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21773:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21778:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21778:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21720:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "21720:34:18"
																},
																"nativeSrc": "21720:65:18",
																"nodeType": "YulFunctionCall",
																"src": "21720:65:18"
															},
															"nativeSrc": "21720:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "21720:65:18"
														},
														{
															"nativeSrc": "21794:23:18",
															"nodeType": "YulAssignment",
															"src": "21794:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21805:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21805:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21810:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21810:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21801:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21801:3:18"
																},
																"nativeSrc": "21801:16:18",
																"nodeType": "YulFunctionCall",
																"src": "21801:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21794:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21794:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21433:390:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21524:5:18",
														"nodeType": "YulTypedName",
														"src": "21524:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21531:3:18",
														"nodeType": "YulTypedName",
														"src": "21531:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21539:3:18",
														"nodeType": "YulTypedName",
														"src": "21539:3:18",
														"type": ""
													}
												],
												"src": "21433:390:18"
											},
											{
												"body": {
													"nativeSrc": "22013:251:18",
													"nodeType": "YulBlock",
													"src": "22013:251:18",
													"statements": [
														{
															"nativeSrc": "22024:102:18",
															"nodeType": "YulAssignment",
															"src": "22024:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22113:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22113:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22122:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22122:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "22031:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "22031:81:18"
																},
																"nativeSrc": "22031:95:18",
																"nodeType": "YulFunctionCall",
																"src": "22031:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22024:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22024:3:18"
																}
															]
														},
														{
															"nativeSrc": "22136:102:18",
															"nodeType": "YulAssignment",
															"src": "22136:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22225:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22225:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22234:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22234:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "22143:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "22143:81:18"
																},
																"nativeSrc": "22143:95:18",
																"nodeType": "YulFunctionCall",
																"src": "22143:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22136:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22136:3:18"
																}
															]
														},
														{
															"nativeSrc": "22248:10:18",
															"nodeType": "YulAssignment",
															"src": "22248:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "22255:3:18",
																"nodeType": "YulIdentifier",
																"src": "22255:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22248:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22248:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21829:435:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21984:3:18",
														"nodeType": "YulTypedName",
														"src": "21984:3:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21990:6:18",
														"nodeType": "YulTypedName",
														"src": "21990:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21998:6:18",
														"nodeType": "YulTypedName",
														"src": "21998:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22009:3:18",
														"nodeType": "YulTypedName",
														"src": "22009:3:18",
														"type": ""
													}
												],
												"src": "21829:435:18"
											},
											{
												"body": {
													"nativeSrc": "22324:87:18",
													"nodeType": "YulBlock",
													"src": "22324:87:18",
													"statements": [
														{
															"nativeSrc": "22334:11:18",
															"nodeType": "YulAssignment",
															"src": "22334:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "22342:3:18",
																"nodeType": "YulIdentifier",
																"src": "22342:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22334:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22334:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22362:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22362:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "22365:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22365:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22355:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22355:6:18"
																},
																"nativeSrc": "22355:14:18",
																"nodeType": "YulFunctionCall",
																"src": "22355:14:18"
															},
															"nativeSrc": "22355:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "22355:14:18"
														},
														{
															"nativeSrc": "22378:26:18",
															"nodeType": "YulAssignment",
															"src": "22378:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22396:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22396:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22399:4:18",
																		"nodeType": "YulLiteral",
																		"src": "22399:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "22386:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "22386:9:18"
																},
																"nativeSrc": "22386:18:18",
																"nodeType": "YulFunctionCall",
																"src": "22386:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22378:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22378:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "22270:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "22311:3:18",
														"nodeType": "YulTypedName",
														"src": "22311:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "22319:4:18",
														"nodeType": "YulTypedName",
														"src": "22319:4:18",
														"type": ""
													}
												],
												"src": "22270:141:18"
											},
											{
												"body": {
													"nativeSrc": "22461:49:18",
													"nodeType": "YulBlock",
													"src": "22461:49:18",
													"statements": [
														{
															"nativeSrc": "22471:33:18",
															"nodeType": "YulAssignment",
															"src": "22471:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22489:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "22489:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22496:2:18",
																				"nodeType": "YulLiteral",
																				"src": "22496:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22485:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22485:3:18"
																		},
																		"nativeSrc": "22485:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22485:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22501:2:18",
																		"nodeType": "YulLiteral",
																		"src": "22501:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22481:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22481:3:18"
																},
																"nativeSrc": "22481:23:18",
																"nodeType": "YulFunctionCall",
																"src": "22481:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22471:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22471:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "22417:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22444:5:18",
														"nodeType": "YulTypedName",
														"src": "22444:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22454:6:18",
														"nodeType": "YulTypedName",
														"src": "22454:6:18",
														"type": ""
													}
												],
												"src": "22417:93:18"
											},
											{
												"body": {
													"nativeSrc": "22569:54:18",
													"nodeType": "YulBlock",
													"src": "22569:54:18",
													"statements": [
														{
															"nativeSrc": "22579:37:18",
															"nodeType": "YulAssignment",
															"src": "22579:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22604:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22604:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22610:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "22610:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "22600:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22600:3:18"
																},
																"nativeSrc": "22600:16:18",
																"nodeType": "YulFunctionCall",
																"src": "22600:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22579:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "22579:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "22516:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22544:4:18",
														"nodeType": "YulTypedName",
														"src": "22544:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22550:5:18",
														"nodeType": "YulTypedName",
														"src": "22550:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22560:8:18",
														"nodeType": "YulTypedName",
														"src": "22560:8:18",
														"type": ""
													}
												],
												"src": "22516:107:18"
											},
											{
												"body": {
													"nativeSrc": "22705:317:18",
													"nodeType": "YulBlock",
													"src": "22705:317:18",
													"statements": [
														{
															"nativeSrc": "22715:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "22715:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "22736:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "22736:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22748:1:18",
																		"nodeType": "YulLiteral",
																		"src": "22748:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22732:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22732:3:18"
																},
																"nativeSrc": "22732:18:18",
																"nodeType": "YulFunctionCall",
																"src": "22732:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "22719:9:18",
																	"nodeType": "YulTypedName",
																	"src": "22719:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22759:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "22759:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22790:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "22790:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22801:66:18",
																		"nodeType": "YulLiteral",
																		"src": "22801:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22771:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "22771:18:18"
																},
																"nativeSrc": "22771:97:18",
																"nodeType": "YulFunctionCall",
																"src": "22771:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22763:4:18",
																	"nodeType": "YulTypedName",
																	"src": "22763:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22877:51:18",
															"nodeType": "YulAssignment",
															"src": "22877:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22908:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "22908:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "22919:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "22919:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22889:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "22889:18:18"
																},
																"nativeSrc": "22889:39:18",
																"nodeType": "YulFunctionCall",
																"src": "22889:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "22877:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "22877:8:18"
																}
															]
														},
														{
															"nativeSrc": "22937:30:18",
															"nodeType": "YulAssignment",
															"src": "22937:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22950:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "22950:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "22961:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "22961:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "22957:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22957:3:18"
																		},
																		"nativeSrc": "22957:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22957:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22946:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22946:3:18"
																},
																"nativeSrc": "22946:21:18",
																"nodeType": "YulFunctionCall",
																"src": "22946:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22937:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "22937:5:18"
																}
															]
														},
														{
															"nativeSrc": "22976:40:18",
															"nodeType": "YulAssignment",
															"src": "22976:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22989:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "22989:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "23000:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "23000:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "23010:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "23010:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22996:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22996:3:18"
																		},
																		"nativeSrc": "22996:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22996:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22986:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "22986:2:18"
																},
																"nativeSrc": "22986:30:18",
																"nodeType": "YulFunctionCall",
																"src": "22986:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22976:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22976:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "22629:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22666:5:18",
														"nodeType": "YulTypedName",
														"src": "22666:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "22673:10:18",
														"nodeType": "YulTypedName",
														"src": "22673:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "22685:8:18",
														"nodeType": "YulTypedName",
														"src": "22685:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22698:6:18",
														"nodeType": "YulTypedName",
														"src": "22698:6:18",
														"type": ""
													}
												],
												"src": "22629:393:18"
											},
											{
												"body": {
													"nativeSrc": "23060:28:18",
													"nodeType": "YulBlock",
													"src": "23060:28:18",
													"statements": [
														{
															"nativeSrc": "23070:12:18",
															"nodeType": "YulAssignment",
															"src": "23070:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "23077:5:18",
																"nodeType": "YulIdentifier",
																"src": "23077:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23070:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23070:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "23028:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23046:5:18",
														"nodeType": "YulTypedName",
														"src": "23046:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23056:3:18",
														"nodeType": "YulTypedName",
														"src": "23056:3:18",
														"type": ""
													}
												],
												"src": "23028:60:18"
											},
											{
												"body": {
													"nativeSrc": "23154:82:18",
													"nodeType": "YulBlock",
													"src": "23154:82:18",
													"statements": [
														{
															"nativeSrc": "23164:66:18",
															"nodeType": "YulAssignment",
															"src": "23164:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23222:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "23222:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "23204:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "23204:17:18"
																				},
																				"nativeSrc": "23204:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "23204:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "23195:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "23195:8:18"
																		},
																		"nativeSrc": "23195:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23195:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23177:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "23177:17:18"
																},
																"nativeSrc": "23177:53:18",
																"nodeType": "YulFunctionCall",
																"src": "23177:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "23164:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "23164:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "23094:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23134:5:18",
														"nodeType": "YulTypedName",
														"src": "23134:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "23144:9:18",
														"nodeType": "YulTypedName",
														"src": "23144:9:18",
														"type": ""
													}
												],
												"src": "23094:142:18"
											},
											{
												"body": {
													"nativeSrc": "23289:28:18",
													"nodeType": "YulBlock",
													"src": "23289:28:18",
													"statements": [
														{
															"nativeSrc": "23299:12:18",
															"nodeType": "YulAssignment",
															"src": "23299:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "23306:5:18",
																"nodeType": "YulIdentifier",
																"src": "23306:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23299:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23299:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "23242:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23275:5:18",
														"nodeType": "YulTypedName",
														"src": "23275:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23285:3:18",
														"nodeType": "YulTypedName",
														"src": "23285:3:18",
														"type": ""
													}
												],
												"src": "23242:75:18"
											},
											{
												"body": {
													"nativeSrc": "23399:193:18",
													"nodeType": "YulBlock",
													"src": "23399:193:18",
													"statements": [
														{
															"nativeSrc": "23409:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "23409:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "23464:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "23464:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "23433:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "23433:30:18"
																},
																"nativeSrc": "23433:39:18",
																"nodeType": "YulFunctionCall",
																"src": "23433:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "23413:16:18",
																	"nodeType": "YulTypedName",
																	"src": "23413:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23488:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23488:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "23528:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "23528:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23522:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "23522:5:18"
																				},
																				"nativeSrc": "23522:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "23522:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "23535:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "23535:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "23567:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "23567:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "23543:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "23543:23:18"
																				},
																				"nativeSrc": "23543:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "23543:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "23494:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "23494:27:18"
																		},
																		"nativeSrc": "23494:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "23494:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23481:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "23481:6:18"
																},
																"nativeSrc": "23481:105:18",
																"nodeType": "YulFunctionCall",
																"src": "23481:105:18"
															},
															"nativeSrc": "23481:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "23481:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "23323:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23376:4:18",
														"nodeType": "YulTypedName",
														"src": "23376:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23382:6:18",
														"nodeType": "YulTypedName",
														"src": "23382:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "23390:7:18",
														"nodeType": "YulTypedName",
														"src": "23390:7:18",
														"type": ""
													}
												],
												"src": "23323:269:18"
											},
											{
												"body": {
													"nativeSrc": "23647:24:18",
													"nodeType": "YulBlock",
													"src": "23647:24:18",
													"statements": [
														{
															"nativeSrc": "23657:8:18",
															"nodeType": "YulAssignment",
															"src": "23657:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "23664:1:18",
																"nodeType": "YulLiteral",
																"src": "23664:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23657:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "23657:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "23598:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23643:3:18",
														"nodeType": "YulTypedName",
														"src": "23643:3:18",
														"type": ""
													}
												],
												"src": "23598:73:18"
											},
											{
												"body": {
													"nativeSrc": "23730:136:18",
													"nodeType": "YulBlock",
													"src": "23730:136:18",
													"statements": [
														{
															"nativeSrc": "23740:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "23740:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "23754:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "23754:30:18"
																},
																"nativeSrc": "23754:32:18",
																"nodeType": "YulFunctionCall",
																"src": "23754:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "23744:6:18",
																	"nodeType": "YulTypedName",
																	"src": "23744:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23839:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "23839:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "23845:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23845:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "23853:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23853:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "23795:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "23795:43:18"
																},
																"nativeSrc": "23795:65:18",
																"nodeType": "YulFunctionCall",
																"src": "23795:65:18"
															},
															"nativeSrc": "23795:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "23795:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "23677:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23716:4:18",
														"nodeType": "YulTypedName",
														"src": "23716:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23722:6:18",
														"nodeType": "YulTypedName",
														"src": "23722:6:18",
														"type": ""
													}
												],
												"src": "23677:189:18"
											},
											{
												"body": {
													"nativeSrc": "23922:136:18",
													"nodeType": "YulBlock",
													"src": "23922:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "23989:63:18",
																"nodeType": "YulBlock",
																"src": "23989:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24033:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "24033:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24040:1:18",
																					"nodeType": "YulLiteral",
																					"src": "24040:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "24003:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "24003:29:18"
																			},
																			"nativeSrc": "24003:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "24003:39:18"
																		},
																		"nativeSrc": "24003:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "24003:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "23942:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "23942:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "23949:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "23949:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23939:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "23939:2:18"
																},
																"nativeSrc": "23939:14:18",
																"nodeType": "YulFunctionCall",
																"src": "23939:14:18"
															},
															"nativeSrc": "23932:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23954:26:18",
																"nodeType": "YulBlock",
																"src": "23954:26:18",
																"statements": [
																	{
																		"nativeSrc": "23956:22:18",
																		"nodeType": "YulAssignment",
																		"src": "23956:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23969:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "23969:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23976:1:18",
																					"nodeType": "YulLiteral",
																					"src": "23976:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23965:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "23965:3:18"
																			},
																			"nativeSrc": "23965:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "23965:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "23956:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "23956:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23936:2:18",
																"nodeType": "YulBlock",
																"src": "23936:2:18",
																"statements": []
															},
															"src": "23932:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "23872:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "23910:5:18",
														"nodeType": "YulTypedName",
														"src": "23910:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23917:3:18",
														"nodeType": "YulTypedName",
														"src": "23917:3:18",
														"type": ""
													}
												],
												"src": "23872:186:18"
											},
											{
												"body": {
													"nativeSrc": "24143:464:18",
													"nodeType": "YulBlock",
													"src": "24143:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "24169:431:18",
																"nodeType": "YulBlock",
																"src": "24169:431:18",
																"statements": [
																	{
																		"nativeSrc": "24183:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24183:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "24231:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "24231:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "24199:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "24199:31:18"
																			},
																			"nativeSrc": "24199:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "24199:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "24187:8:18",
																				"nodeType": "YulTypedName",
																				"src": "24187:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "24250:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24250:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "24273:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "24273:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "24301:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "24301:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "24283:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "24283:17:18"
																					},
																					"nativeSrc": "24283:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "24283:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24269:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "24269:3:18"
																			},
																			"nativeSrc": "24269:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "24269:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "24254:11:18",
																				"nodeType": "YulTypedName",
																				"src": "24254:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24470:27:18",
																			"nodeType": "YulBlock",
																			"src": "24470:27:18",
																			"statements": [
																				{
																					"nativeSrc": "24472:23:18",
																					"nodeType": "YulAssignment",
																					"src": "24472:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "24487:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "24487:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "24472:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "24472:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "24454:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "24454:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24466:2:18",
																					"nodeType": "YulLiteral",
																					"src": "24466:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24451:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "24451:2:18"
																			},
																			"nativeSrc": "24451:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "24451:18:18"
																		},
																		"nativeSrc": "24448:49:18",
																		"nodeType": "YulIf",
																		"src": "24448:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "24539:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "24539:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "24556:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "24556:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "24584:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "24584:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "24566:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "24566:17:18"
																							},
																							"nativeSrc": "24566:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "24566:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24552:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "24552:3:18"
																					},
																					"nativeSrc": "24552:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "24552:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "24510:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "24510:28:18"
																			},
																			"nativeSrc": "24510:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "24510:80:18"
																		},
																		"nativeSrc": "24510:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "24510:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "24160:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "24160:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24165:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24165:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24157:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "24157:2:18"
																},
																"nativeSrc": "24157:11:18",
																"nodeType": "YulFunctionCall",
																"src": "24157:11:18"
															},
															"nativeSrc": "24154:446:18",
															"nodeType": "YulIf",
															"src": "24154:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "24064:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "24119:5:18",
														"nodeType": "YulTypedName",
														"src": "24119:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24126:3:18",
														"nodeType": "YulTypedName",
														"src": "24126:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "24131:10:18",
														"nodeType": "YulTypedName",
														"src": "24131:10:18",
														"type": ""
													}
												],
												"src": "24064:543:18"
											},
											{
												"body": {
													"nativeSrc": "24676:54:18",
													"nodeType": "YulBlock",
													"src": "24676:54:18",
													"statements": [
														{
															"nativeSrc": "24686:37:18",
															"nodeType": "YulAssignment",
															"src": "24686:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24711:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "24711:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24717:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "24717:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "24707:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24707:3:18"
																},
																"nativeSrc": "24707:16:18",
																"nodeType": "YulFunctionCall",
																"src": "24707:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24686:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "24686:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "24613:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24651:4:18",
														"nodeType": "YulTypedName",
														"src": "24651:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24657:5:18",
														"nodeType": "YulTypedName",
														"src": "24657:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24667:8:18",
														"nodeType": "YulTypedName",
														"src": "24667:8:18",
														"type": ""
													}
												],
												"src": "24613:117:18"
											},
											{
												"body": {
													"nativeSrc": "24787:118:18",
													"nodeType": "YulBlock",
													"src": "24787:118:18",
													"statements": [
														{
															"nativeSrc": "24797:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "24797:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24846:1:18",
																						"nodeType": "YulLiteral",
																						"src": "24846:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "24849:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "24849:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "24842:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "24842:3:18"
																				},
																				"nativeSrc": "24842:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "24842:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24861:1:18",
																						"nodeType": "YulLiteral",
																						"src": "24861:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24857:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "24857:3:18"
																				},
																				"nativeSrc": "24857:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "24857:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "24813:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "24813:28:18"
																		},
																		"nativeSrc": "24813:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24813:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "24809:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24809:3:18"
																},
																"nativeSrc": "24809:56:18",
																"nodeType": "YulFunctionCall",
																"src": "24809:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24801:4:18",
																	"nodeType": "YulTypedName",
																	"src": "24801:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24874:25:18",
															"nodeType": "YulAssignment",
															"src": "24874:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24888:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "24888:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "24894:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "24894:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24884:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24884:3:18"
																},
																"nativeSrc": "24884:15:18",
																"nodeType": "YulFunctionCall",
																"src": "24884:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24874:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24874:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "24736:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24764:4:18",
														"nodeType": "YulTypedName",
														"src": "24764:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "24770:5:18",
														"nodeType": "YulTypedName",
														"src": "24770:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24780:6:18",
														"nodeType": "YulTypedName",
														"src": "24780:6:18",
														"type": ""
													}
												],
												"src": "24736:169:18"
											},
											{
												"body": {
													"nativeSrc": "24991:214:18",
													"nodeType": "YulBlock",
													"src": "24991:214:18",
													"statements": [
														{
															"nativeSrc": "25124:37:18",
															"nodeType": "YulAssignment",
															"src": "25124:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25151:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "25151:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "25157:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25157:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "25132:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "25132:18:18"
																},
																"nativeSrc": "25132:29:18",
																"nodeType": "YulFunctionCall",
																"src": "25132:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "25124:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25124:4:18"
																}
															]
														},
														{
															"nativeSrc": "25170:29:18",
															"nodeType": "YulAssignment",
															"src": "25170:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "25181:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "25181:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "25191:1:18",
																				"nodeType": "YulLiteral",
																				"src": "25191:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "25194:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "25194:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "25187:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "25187:3:18"
																		},
																		"nativeSrc": "25187:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25187:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "25178:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "25178:2:18"
																},
																"nativeSrc": "25178:21:18",
																"nodeType": "YulFunctionCall",
																"src": "25178:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "25170:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "25170:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24910:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24972:4:18",
														"nodeType": "YulTypedName",
														"src": "24972:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24978:3:18",
														"nodeType": "YulTypedName",
														"src": "24978:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "24986:4:18",
														"nodeType": "YulTypedName",
														"src": "24986:4:18",
														"type": ""
													}
												],
												"src": "24910:295:18"
											},
											{
												"body": {
													"nativeSrc": "25302:1303:18",
													"nodeType": "YulBlock",
													"src": "25302:1303:18",
													"statements": [
														{
															"nativeSrc": "25313:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "25313:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "25360:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "25360:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "25327:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "25327:32:18"
																},
																"nativeSrc": "25327:37:18",
																"nodeType": "YulFunctionCall",
																"src": "25327:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "25317:6:18",
																	"nodeType": "YulTypedName",
																	"src": "25317:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25449:22:18",
																"nodeType": "YulBlock",
																"src": "25449:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "25451:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "25451:16:18"
																			},
																			"nativeSrc": "25451:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "25451:18:18"
																		},
																		"nativeSrc": "25451:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "25451:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25421:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25421:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25429:18:18",
																		"nodeType": "YulLiteral",
																		"src": "25429:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25418:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "25418:2:18"
																},
																"nativeSrc": "25418:30:18",
																"nodeType": "YulFunctionCall",
																"src": "25418:30:18"
															},
															"nativeSrc": "25415:56:18",
															"nodeType": "YulIf",
															"src": "25415:56:18"
														},
														{
															"nativeSrc": "25481:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "25481:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "25527:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "25527:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "25521:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "25521:5:18"
																		},
																		"nativeSrc": "25521:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "25521:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "25495:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "25495:25:18"
																},
																"nativeSrc": "25495:38:18",
																"nodeType": "YulFunctionCall",
																"src": "25495:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "25485:6:18",
																	"nodeType": "YulTypedName",
																	"src": "25485:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25626:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "25626:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "25632:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25632:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "25640:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25640:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "25580:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "25580:45:18"
																},
																"nativeSrc": "25580:67:18",
																"nodeType": "YulFunctionCall",
																"src": "25580:67:18"
															},
															"nativeSrc": "25580:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "25580:67:18"
														},
														{
															"nativeSrc": "25657:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "25657:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "25674:1:18",
																"nodeType": "YulLiteral",
																"src": "25674:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25661:9:18",
																	"nodeType": "YulTypedName",
																	"src": "25661:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25685:17:18",
															"nodeType": "YulAssignment",
															"src": "25685:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "25698:4:18",
																"nodeType": "YulLiteral",
																"src": "25698:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25685:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "25685:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "25749:611:18",
																		"nodeType": "YulBlock",
																		"src": "25749:611:18",
																		"statements": [
																			{
																				"nativeSrc": "25763:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25763:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "25782:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "25782:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25794:4:18",
																									"nodeType": "YulLiteral",
																									"src": "25794:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25790:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "25790:3:18"
																							},
																							"nativeSrc": "25790:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "25790:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "25778:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "25778:3:18"
																					},
																					"nativeSrc": "25778:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "25778:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "25767:7:18",
																						"nodeType": "YulTypedName",
																						"src": "25767:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25814:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25814:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25860:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "25860:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25828:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "25828:31:18"
																					},
																					"nativeSrc": "25828:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "25828:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25818:6:18",
																						"nodeType": "YulTypedName",
																						"src": "25818:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25878:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25878:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25887:1:18",
																					"nodeType": "YulLiteral",
																					"src": "25887:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25882:1:18",
																						"nodeType": "YulTypedName",
																						"src": "25882:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25946:163:18",
																					"nodeType": "YulBlock",
																					"src": "25946:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25971:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "25971:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "25989:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "25989:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "25994:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "25994:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "25985:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "25985:3:18"
																												},
																												"nativeSrc": "25985:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "25985:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "25979:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "25979:5:18"
																										},
																										"nativeSrc": "25979:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "25979:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25964:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "25964:6:18"
																								},
																								"nativeSrc": "25964:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "25964:42:18"
																							},
																							"nativeSrc": "25964:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "25964:42:18"
																						},
																						{
																							"nativeSrc": "26023:24:18",
																							"nodeType": "YulAssignment",
																							"src": "26023:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26037:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "26037:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26045:1:18",
																										"nodeType": "YulLiteral",
																										"src": "26045:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26033:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "26033:3:18"
																								},
																								"nativeSrc": "26033:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "26033:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "26023:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "26023:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "26064:31:18",
																							"nodeType": "YulAssignment",
																							"src": "26064:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "26081:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "26081:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "26092:2:18",
																										"nodeType": "YulLiteral",
																										"src": "26092:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "26077:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "26077:3:18"
																								},
																								"nativeSrc": "26077:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "26077:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "26064:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "26064:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25912:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "25912:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25915:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "25915:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25909:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "25909:2:18"
																					},
																					"nativeSrc": "25909:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "25909:14:18"
																				},
																				"nativeSrc": "25901:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25924:21:18",
																					"nodeType": "YulBlock",
																					"src": "25924:21:18",
																					"statements": [
																						{
																							"nativeSrc": "25926:17:18",
																							"nodeType": "YulAssignment",
																							"src": "25926:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25935:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "25935:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25938:4:18",
																										"nodeType": "YulLiteral",
																										"src": "25938:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25931:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "25931:3:18"
																								},
																								"nativeSrc": "25931:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "25931:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25926:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "25926:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25905:3:18",
																					"nodeType": "YulBlock",
																					"src": "25905:3:18",
																					"statements": []
																				},
																				"src": "25901:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "26145:156:18",
																					"nodeType": "YulBlock",
																					"src": "26145:156:18",
																					"statements": [
																						{
																							"nativeSrc": "26163:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "26163:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26190:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "26190:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26195:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "26195:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26186:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "26186:3:18"
																										},
																										"nativeSrc": "26186:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "26186:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26180:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "26180:5:18"
																								},
																								"nativeSrc": "26180:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "26180:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "26167:9:18",
																									"nodeType": "YulTypedName",
																									"src": "26167:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "26230:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "26230:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "26257:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "26257:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "26272:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "26272:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "26280:4:18",
																														"nodeType": "YulLiteral",
																														"src": "26280:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "26268:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "26268:3:18"
																												},
																												"nativeSrc": "26268:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "26268:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "26238:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "26238:18:18"
																										},
																										"nativeSrc": "26238:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "26238:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "26223:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "26223:6:18"
																								},
																								"nativeSrc": "26223:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "26223:64:18"
																							},
																							"nativeSrc": "26223:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "26223:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "26128:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "26128:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "26137:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "26137:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "26125:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "26125:2:18"
																					},
																					"nativeSrc": "26125:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "26125:19:18"
																				},
																				"nativeSrc": "26122:179:18",
																				"nodeType": "YulIf",
																				"src": "26122:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26321:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "26321:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "26335:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "26335:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "26343:1:18",
																											"nodeType": "YulLiteral",
																											"src": "26343:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "26331:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "26331:3:18"
																									},
																									"nativeSrc": "26331:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "26331:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "26347:1:18",
																									"nodeType": "YulLiteral",
																									"src": "26347:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "26327:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "26327:3:18"
																							},
																							"nativeSrc": "26327:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "26327:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26314:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "26314:6:18"
																					},
																					"nativeSrc": "26314:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "26314:36:18"
																				},
																				"nativeSrc": "26314:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "26314:36:18"
																			}
																		]
																	},
																	"nativeSrc": "25742:618:18",
																	"nodeType": "YulCase",
																	"src": "25742:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25747:1:18",
																		"nodeType": "YulLiteral",
																		"src": "25747:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "26377:222:18",
																		"nodeType": "YulBlock",
																		"src": "26377:222:18",
																		"statements": [
																			{
																				"nativeSrc": "26391:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26391:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26404:1:18",
																					"nodeType": "YulLiteral",
																					"src": "26404:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "26395:5:18",
																						"nodeType": "YulTypedName",
																						"src": "26395:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26428:67:18",
																					"nodeType": "YulBlock",
																					"src": "26428:67:18",
																					"statements": [
																						{
																							"nativeSrc": "26446:35:18",
																							"nodeType": "YulAssignment",
																							"src": "26446:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26465:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "26465:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26470:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "26470:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26461:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "26461:3:18"
																										},
																										"nativeSrc": "26461:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "26461:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26455:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "26455:5:18"
																								},
																								"nativeSrc": "26455:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "26455:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "26446:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "26446:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "26421:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "26421:6:18"
																				},
																				"nativeSrc": "26418:77:18",
																				"nodeType": "YulIf",
																				"src": "26418:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26515:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "26515:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "26574:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "26574:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "26581:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "26581:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "26521:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "26521:52:18"
																							},
																							"nativeSrc": "26521:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "26521:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26508:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "26508:6:18"
																					},
																					"nativeSrc": "26508:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "26508:81:18"
																				},
																				"nativeSrc": "26508:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "26508:81:18"
																			}
																		]
																	},
																	"nativeSrc": "26369:230:18",
																	"nodeType": "YulCase",
																	"src": "26369:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25722:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "25722:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25730:2:18",
																		"nodeType": "YulLiteral",
																		"src": "25730:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25719:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "25719:2:18"
																},
																"nativeSrc": "25719:14:18",
																"nodeType": "YulFunctionCall",
																"src": "25719:14:18"
															},
															"nativeSrc": "25712:887:18",
															"nodeType": "YulSwitch",
															"src": "25712:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "25210:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25291:4:18",
														"nodeType": "YulTypedName",
														"src": "25291:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "25297:3:18",
														"nodeType": "YulTypedName",
														"src": "25297:3:18",
														"type": ""
													}
												],
												"src": "25210:1395:18"
											},
											{
												"body": {
													"nativeSrc": "26669:40:18",
													"nodeType": "YulBlock",
													"src": "26669:40:18",
													"statements": [
														{
															"nativeSrc": "26680:22:18",
															"nodeType": "YulAssignment",
															"src": "26680:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "26696:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "26696:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "26690:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "26690:5:18"
																},
																"nativeSrc": "26690:12:18",
																"nodeType": "YulFunctionCall",
																"src": "26690:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "26680:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "26680:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "26611:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26652:5:18",
														"nodeType": "YulTypedName",
														"src": "26652:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "26662:6:18",
														"nodeType": "YulTypedName",
														"src": "26662:6:18",
														"type": ""
													}
												],
												"src": "26611:98:18"
											},
											{
												"body": {
													"nativeSrc": "26810:73:18",
													"nodeType": "YulBlock",
													"src": "26810:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26827:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "26827:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "26832:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "26832:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26820:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "26820:6:18"
																},
																"nativeSrc": "26820:19:18",
																"nodeType": "YulFunctionCall",
																"src": "26820:19:18"
															},
															"nativeSrc": "26820:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "26820:19:18"
														},
														{
															"nativeSrc": "26848:29:18",
															"nodeType": "YulAssignment",
															"src": "26848:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "26867:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26872:4:18",
																		"nodeType": "YulLiteral",
																		"src": "26872:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26863:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "26863:3:18"
																},
																"nativeSrc": "26863:14:18",
																"nodeType": "YulFunctionCall",
																"src": "26863:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "26848:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "26848:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26715:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26782:3:18",
														"nodeType": "YulTypedName",
														"src": "26782:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "26787:6:18",
														"nodeType": "YulTypedName",
														"src": "26787:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "26798:11:18",
														"nodeType": "YulTypedName",
														"src": "26798:11:18",
														"type": ""
													}
												],
												"src": "26715:168:18"
											},
											{
												"body": {
													"nativeSrc": "26979:283:18",
													"nodeType": "YulBlock",
													"src": "26979:283:18",
													"statements": [
														{
															"nativeSrc": "26989:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "26989:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27035:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "27035:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "27003:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "27003:31:18"
																},
																"nativeSrc": "27003:38:18",
																"nodeType": "YulFunctionCall",
																"src": "27003:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "26993:6:18",
																	"nodeType": "YulTypedName",
																	"src": "26993:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27050:77:18",
															"nodeType": "YulAssignment",
															"src": "27050:77:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27115:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27115:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27120:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "27120:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "27057:57:18",
																	"nodeType": "YulIdentifier",
																	"src": "27057:57:18"
																},
																"nativeSrc": "27057:70:18",
																"nodeType": "YulFunctionCall",
																"src": "27057:70:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27050:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27050:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "27175:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "27175:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27182:4:18",
																				"nodeType": "YulLiteral",
																				"src": "27182:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27171:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27171:3:18"
																		},
																		"nativeSrc": "27171:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27171:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27189:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27189:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "27194:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "27194:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "27136:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "27136:34:18"
																},
																"nativeSrc": "27136:65:18",
																"nodeType": "YulFunctionCall",
																"src": "27136:65:18"
															},
															"nativeSrc": "27136:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "27136:65:18"
														},
														{
															"nativeSrc": "27210:46:18",
															"nodeType": "YulAssignment",
															"src": "27210:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27221:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "27221:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "27248:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "27248:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "27226:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "27226:21:18"
																		},
																		"nativeSrc": "27226:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27226:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27217:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27217:3:18"
																},
																"nativeSrc": "27217:39:18",
																"nodeType": "YulFunctionCall",
																"src": "27217:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27210:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27210:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "26889:373:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "26960:5:18",
														"nodeType": "YulTypedName",
														"src": "26960:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "26967:3:18",
														"nodeType": "YulTypedName",
														"src": "26967:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26975:3:18",
														"nodeType": "YulTypedName",
														"src": "26975:3:18",
														"type": ""
													}
												],
												"src": "26889:373:18"
											},
											{
												"body": {
													"nativeSrc": "27468:440:18",
													"nodeType": "YulBlock",
													"src": "27468:440:18",
													"statements": [
														{
															"nativeSrc": "27478:27:18",
															"nodeType": "YulAssignment",
															"src": "27478:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27490:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "27490:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27501:3:18",
																		"nodeType": "YulLiteral",
																		"src": "27501:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27486:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "27486:3:18"
																},
																"nativeSrc": "27486:19:18",
																"nodeType": "YulFunctionCall",
																"src": "27486:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27478:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "27478:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27559:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "27559:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27572:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27572:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27583:1:18",
																				"nodeType": "YulLiteral",
																				"src": "27583:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27568:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27568:3:18"
																		},
																		"nativeSrc": "27568:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27568:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27515:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "27515:43:18"
																},
																"nativeSrc": "27515:71:18",
																"nodeType": "YulFunctionCall",
																"src": "27515:71:18"
															},
															"nativeSrc": "27515:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "27515:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27640:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "27640:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27653:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27653:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27664:2:18",
																				"nodeType": "YulLiteral",
																				"src": "27664:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27649:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27649:3:18"
																		},
																		"nativeSrc": "27649:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27649:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27596:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "27596:43:18"
																},
																"nativeSrc": "27596:72:18",
																"nodeType": "YulFunctionCall",
																"src": "27596:72:18"
															},
															"nativeSrc": "27596:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "27596:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "27722:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "27722:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27735:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27735:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27746:2:18",
																				"nodeType": "YulLiteral",
																				"src": "27746:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27731:3:18"
																		},
																		"nativeSrc": "27731:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27731:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27678:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "27678:43:18"
																},
																"nativeSrc": "27678:72:18",
																"nodeType": "YulFunctionCall",
																"src": "27678:72:18"
															},
															"nativeSrc": "27678:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "27678:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27771:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27771:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27782:2:18",
																				"nodeType": "YulLiteral",
																				"src": "27782:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27767:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27767:3:18"
																		},
																		"nativeSrc": "27767:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27767:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27791:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "27791:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27797:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "27797:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27787:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "27787:3:18"
																		},
																		"nativeSrc": "27787:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "27787:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27760:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "27760:6:18"
																},
																"nativeSrc": "27760:48:18",
																"nodeType": "YulFunctionCall",
																"src": "27760:48:18"
															},
															"nativeSrc": "27760:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "27760:48:18"
														},
														{
															"nativeSrc": "27817:84:18",
															"nodeType": "YulAssignment",
															"src": "27817:84:18",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "27887:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "27887:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "27896:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "27896:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "27825:61:18",
																	"nodeType": "YulIdentifier",
																	"src": "27825:61:18"
																},
																"nativeSrc": "27825:76:18",
																"nodeType": "YulFunctionCall",
																"src": "27825:76:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27817:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "27817:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "27268:640:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27416:9:18",
														"nodeType": "YulTypedName",
														"src": "27416:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "27428:6:18",
														"nodeType": "YulTypedName",
														"src": "27428:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27436:6:18",
														"nodeType": "YulTypedName",
														"src": "27436:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27444:6:18",
														"nodeType": "YulTypedName",
														"src": "27444:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27452:6:18",
														"nodeType": "YulTypedName",
														"src": "27452:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27463:4:18",
														"nodeType": "YulTypedName",
														"src": "27463:4:18",
														"type": ""
													}
												],
												"src": "27268:640:18"
											},
											{
												"body": {
													"nativeSrc": "27976:79:18",
													"nodeType": "YulBlock",
													"src": "27976:79:18",
													"statements": [
														{
															"nativeSrc": "27986:22:18",
															"nodeType": "YulAssignment",
															"src": "27986:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "28001:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "28001:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27995:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "27995:5:18"
																},
																"nativeSrc": "27995:13:18",
																"nodeType": "YulFunctionCall",
																"src": "27995:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "27986:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "27986:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28043:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "28043:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "28017:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "28017:25:18"
																},
																"nativeSrc": "28017:32:18",
																"nodeType": "YulFunctionCall",
																"src": "28017:32:18"
															},
															"nativeSrc": "28017:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "28017:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "27914:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "27954:6:18",
														"nodeType": "YulTypedName",
														"src": "27954:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "27962:3:18",
														"nodeType": "YulTypedName",
														"src": "27962:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "27970:5:18",
														"nodeType": "YulTypedName",
														"src": "27970:5:18",
														"type": ""
													}
												],
												"src": "27914:141:18"
											},
											{
												"body": {
													"nativeSrc": "28137:273:18",
													"nodeType": "YulBlock",
													"src": "28137:273:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "28183:83:18",
																"nodeType": "YulBlock",
																"src": "28183:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "28185:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "28185:77:18"
																			},
																			"nativeSrc": "28185:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "28185:79:18"
																		},
																		"nativeSrc": "28185:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "28185:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28158:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "28158:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28167:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "28167:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28154:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28154:3:18"
																		},
																		"nativeSrc": "28154:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28154:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28179:2:18",
																		"nodeType": "YulLiteral",
																		"src": "28179:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "28150:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28150:3:18"
																},
																"nativeSrc": "28150:32:18",
																"nodeType": "YulFunctionCall",
																"src": "28150:32:18"
															},
															"nativeSrc": "28147:119:18",
															"nodeType": "YulIf",
															"src": "28147:119:18"
														},
														{
															"nativeSrc": "28276:127:18",
															"nodeType": "YulBlock",
															"src": "28276:127:18",
															"statements": [
																{
																	"nativeSrc": "28291:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "28291:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28305:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28305:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "28295:6:18",
																			"nodeType": "YulTypedName",
																			"src": "28295:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "28320:73:18",
																	"nodeType": "YulAssignment",
																	"src": "28320:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "28365:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "28365:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "28376:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "28376:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "28361:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "28361:3:18"
																				},
																				"nativeSrc": "28361:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "28361:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "28385:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "28385:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "28330:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "28330:30:18"
																		},
																		"nativeSrc": "28330:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28330:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "28320:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "28320:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "28061:349:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28107:9:18",
														"nodeType": "YulTypedName",
														"src": "28107:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "28118:7:18",
														"nodeType": "YulTypedName",
														"src": "28118:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "28130:6:18",
														"nodeType": "YulTypedName",
														"src": "28130:6:18",
														"type": ""
													}
												],
												"src": "28061:349:18"
											},
											{
												"body": {
													"nativeSrc": "28542:206:18",
													"nodeType": "YulBlock",
													"src": "28542:206:18",
													"statements": [
														{
															"nativeSrc": "28552:26:18",
															"nodeType": "YulAssignment",
															"src": "28552:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28564:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "28564:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28575:2:18",
																		"nodeType": "YulLiteral",
																		"src": "28575:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28560:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "28560:3:18"
																},
																"nativeSrc": "28560:18:18",
																"nodeType": "YulFunctionCall",
																"src": "28560:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28552:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "28552:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28632:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "28632:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28645:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "28645:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28656:1:18",
																				"nodeType": "YulLiteral",
																				"src": "28656:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28641:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28641:3:18"
																		},
																		"nativeSrc": "28641:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28641:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28588:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "28588:43:18"
																},
																"nativeSrc": "28588:71:18",
																"nodeType": "YulFunctionCall",
																"src": "28588:71:18"
															},
															"nativeSrc": "28588:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "28588:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28713:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "28713:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28726:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "28726:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28737:2:18",
																				"nodeType": "YulLiteral",
																				"src": "28737:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28722:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "28722:3:18"
																		},
																		"nativeSrc": "28722:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "28722:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28669:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "28669:43:18"
																},
																"nativeSrc": "28669:72:18",
																"nodeType": "YulFunctionCall",
																"src": "28669:72:18"
															},
															"nativeSrc": "28669:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "28669:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "28416:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28506:9:18",
														"nodeType": "YulTypedName",
														"src": "28506:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28518:6:18",
														"nodeType": "YulTypedName",
														"src": "28518:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28526:6:18",
														"nodeType": "YulTypedName",
														"src": "28526:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28537:4:18",
														"nodeType": "YulTypedName",
														"src": "28537:4:18",
														"type": ""
													}
												],
												"src": "28416:332:18"
											},
											{
												"body": {
													"nativeSrc": "28782:152:18",
													"nodeType": "YulBlock",
													"src": "28782:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28799:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28799:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28802:77:18",
																		"nodeType": "YulLiteral",
																		"src": "28802:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28792:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28792:6:18"
																},
																"nativeSrc": "28792:88:18",
																"nodeType": "YulFunctionCall",
																"src": "28792:88:18"
															},
															"nativeSrc": "28792:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "28792:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28896:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28896:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28899:4:18",
																		"nodeType": "YulLiteral",
																		"src": "28899:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28889:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28889:6:18"
																},
																"nativeSrc": "28889:15:18",
																"nodeType": "YulFunctionCall",
																"src": "28889:15:18"
															},
															"nativeSrc": "28889:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "28889:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28920:1:18",
																		"nodeType": "YulLiteral",
																		"src": "28920:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28923:4:18",
																		"nodeType": "YulLiteral",
																		"src": "28923:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "28913:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "28913:6:18"
																},
																"nativeSrc": "28913:15:18",
																"nodeType": "YulFunctionCall",
																"src": "28913:15:18"
															},
															"nativeSrc": "28913:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "28913:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "28754:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "28754:180:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct SimpleNFT.BadgeInfo\n    function abi_decode_t_struct$_BadgeInfo_$3187_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x60)\n\n        {\n            // badgeID\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // recipient\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // metadataURI\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x40), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct SimpleNFT.BadgeInfo[]\n    function abi_decode_available_length_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_struct$_BadgeInfo_$3187_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct SimpleNFT.BadgeInfo[]\n    function abi_decode_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct SimpleNFT.BadgeTokenPair -> struct SimpleNFT.BadgeTokenPair\n    function abi_encode_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // badgeID\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenID\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct SimpleNFT.BadgeTokenPair[] -> struct SimpleNFT.BadgeTokenPair[]\n    function abi_encode_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_BadgeTokenPair_$3192_memory_ptr_to_t_struct$_BadgeTokenPair_$3192_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Neither sender nor recipient is \")\n\n        mstore(add(memPtr, 32), \"whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610135575f3560e01c80637a6ce2e1116100b6578063a22cb4651161007a578063a22cb4651461034b578063b88d4fde14610367578063c87b56dd14610383578063e43252d7146103b3578063e985e9c5146103cf578063f2fde38b146103ff57610135565b80637a6ce2e1146102a55780638ab1d681146102c35780638da5cb5b146102df57806395d89b41146102fd5780639b19251a1461031b57610135565b806342842e0e116100fd57806342842e0e146101ef5780635f6c96a01461020b5780636352211e1461023b57806370a082311461026b578063715018a61461029b57610135565b806301ffc9a71461013957806306fdde0314610169578063081812fc14610187578063095ea7b3146101b757806323b872dd146101d3575b5f80fd5b610153600480360381019061014e9190611dd0565b61041b565b6040516101609190611e15565b60405180910390f35b61017161047b565b60405161017e9190611eb8565b60405180910390f35b6101a1600480360381019061019c9190611f0b565b61050a565b6040516101ae9190611f75565b60405180910390f35b6101d160048036038101906101cc9190611fb8565b610525565b005b6101ed60048036038101906101e89190611ff6565b61053b565b005b61020960048036038101906102049190611ff6565b61063a565b005b610225600480360381019061022091906122d9565b610659565b6040516102329190612404565b60405180910390f35b61025560048036038101906102509190611f0b565b61088c565b6040516102629190611f75565b60405180910390f35b61028560048036038101906102809190612424565b61089d565b604051610292919061245e565b60405180910390f35b6102a3610953565b005b6102ad610966565b6040516102ba9190611f75565b60405180910390f35b6102dd60048036038101906102d89190612424565b61096d565b005b6102e76109c4565b6040516102f49190611f75565b60405180910390f35b6103056109ec565b6040516103129190611eb8565b60405180910390f35b61033560048036038101906103309190612424565b610a7c565b6040516103429190611e15565b60405180910390f35b610365600480360381019061036091906124a1565b610a99565b005b610381600480360381019061037c919061257d565b610aaf565b005b61039d60048036038101906103989190611f0b565b610acc565b6040516103aa9190611eb8565b60405180910390f35b6103cd60048036038101906103c89190612424565b610bd7565b005b6103e960048036038101906103e491906125fd565b610c2f565b6040516103f69190611e15565b60405180910390f35b61041960048036038101906104149190612424565b610cbd565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610474575061047382610d41565b5b9050919050565b60605f805461048990612668565b80601f01602080910402602001604051908101604052809291908181526020018280546104b590612668565b80156105005780601f106104d757610100808354040283529160200191610500565b820191905f5260205f20905b8154815290600101906020018083116104e357829003601f168201915b5050505050905090565b5f61051482610e22565b5061051e82610ea8565b9050919050565b6105378282610532610ee1565b610ee8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a29190611f75565b60405180910390fd5b5f6105be83836105b9610ee1565b610efa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610634578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062b93929190612698565b60405180910390fd5b50505050565b61065483838360405180602001604052805f815250610aaf565b505050565b606060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db9061273d565b60405180910390fd5b5f825167ffffffffffffffff811115610700576106ff61204a565b5b60405190808252806020026020018201604052801561073957816020015b610726611d52565b81526020019060019003908161071e5790505b5090505f5b8351811015610882575f6107526009611105565b905061075e6009611111565b6107868583815181106107745761077361275b565b5b60200260200101516020015182611125565b6107ae8186848151811061079d5761079c61275b565b5b602002602001015160400151611218565b60405180604001604052808684815181106107cc576107cb61275b565b5b60200260200101515f01518152602001828152508383815181106107f3576107f261275b565b5b60200260200101819052507ff371d67483809edbc84279729528d26a3e37ce67f1e3a911778dbf88ff927ca28583815181106108325761083161275b565b5b60200260200101515f0151828785815181106108515761085061275b565b5b60200260200101516020015160405161086c93929190612788565b60405180910390a150808060010191505061073e565b5080915050919050565b5f61089682610e22565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361090e575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016109059190611f75565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61095b611272565b6109645f6112f9565b565b5f33905090565b5f60085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546109fb90612668565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2790612668565b8015610a725780601f10610a4957610100808354040283529160200191610a72565b820191905f5260205f20905b815481529060010190602001808311610a5557829003601f168201915b5050505050905090565b6008602052805f5260405f205f915054906101000a900460ff1681565b610aab610aa4610ee1565b83836113bc565b5050565b610aba84848461053b565b610ac684848484611525565b50505050565b6060610ad782610e22565b505f60065f8481526020019081526020015f208054610af590612668565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2190612668565b8015610b6c5780601f10610b4357610100808354040283529160200191610b6c565b820191905f5260205f20905b815481529060010190602001808311610b4f57829003601f168201915b505050505090505f610b7c6116d7565b90505f815103610b90578192505050610bd2565b5f82511115610bc4578082604051602001610bac9291906127f7565b60405160208183030381529060405292505050610bd2565b610bcd846116ed565b925050505b919050565b600160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610cc5611272565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d35575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d2c9190611f75565b60405180910390fd5b610d3e816112f9565b50565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610e0b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610e1b5750610e1a82611753565b5b9050919050565b5f80610e2d836117bc565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e9f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610e96919061245e565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610ef583838360016117f5565b505050565b5f80610f05846117bc565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f4657610f458184866119b4565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fd157610f855f855f806117f5565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461105057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f815f01549050919050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611195575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161118c9190611f75565b60405180910390fd5b5f6111a183835f610efa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611213575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161120a9190611f75565b60405180910390fd5b505050565b8060065f8481526020019081526020015f20908161123691906129b7565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051611266919061245e565b60405180910390a15050565b61127a610ee1565b73ffffffffffffffffffffffffffffffffffffffff166112986109c4565b73ffffffffffffffffffffffffffffffffffffffff16146112f7576112bb610ee1565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112ee9190611f75565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361142c57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016114239190611f75565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115189190611e15565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156116d1578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611568610ee1565b8685856040518563ffffffff1660e01b815260040161158a9493929190612ad8565b6020604051808303815f875af19250505080156115c557506040513d601f19601f820116820180604052508101906115c29190612b36565b60015b611646573d805f81146115f3576040519150601f19603f3d011682016040523d82523d5f602084013e6115f8565b606091505b505f81510361163e57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116359190611f75565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146116cf57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016116c69190611f75565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606116f882610e22565b505f6117026116d7565b90505f8151116117205760405180602001604052805f81525061174b565b8061172a84611a77565b60405160200161173b9291906127f7565b6040516020818303038152906040525b915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061182d57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561195f575f61183c84610e22565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118a657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156118b957506118b78184610c2f565b155b156118fb57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118f29190611f75565b60405180910390fd5b811561195d57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6119bf838383611b41565b611a72575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a3357806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a2a919061245e565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611a69929190612b61565b60405180910390fd5b505050565b60605f6001611a8584611c01565b0190505f8167ffffffffffffffff811115611aa357611aa261204a565b5b6040519080825280601f01601f191660200182016040528015611ad55781602001600182028036833780820191505090505b5090505f82602001820190505b600115611b36578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611b2b57611b2a612b88565b5b0494505f8503611ae2575b819350505050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bf857508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611bb95750611bb88484610c2f565b5b80611bf757508273ffffffffffffffffffffffffffffffffffffffff16611bdf83610ea8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c5d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c5357611c52612b88565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c9a576d04ee2d6d415b85acef81000000008381611c9057611c8f612b88565b5b0492506020810190505b662386f26fc100008310611cc957662386f26fc100008381611cbf57611cbe612b88565b5b0492506010810190505b6305f5e1008310611cf2576305f5e1008381611ce857611ce7612b88565b5b0492506008810190505b6127108310611d17576127108381611d0d57611d0c612b88565b5b0492506004810190505b60648310611d3a5760648381611d3057611d2f612b88565b5b0492506002810190505b600a8310611d49576001810190505b80915050919050565b60405180604001604052805f81526020015f81525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611daf81611d7b565b8114611db9575f80fd5b50565b5f81359050611dca81611da6565b92915050565b5f60208284031215611de557611de4611d73565b5b5f611df284828501611dbc565b91505092915050565b5f8115159050919050565b611e0f81611dfb565b82525050565b5f602082019050611e285f830184611e06565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e65578082015181840152602081019050611e4a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e8a82611e2e565b611e948185611e38565b9350611ea4818560208601611e48565b611ead81611e70565b840191505092915050565b5f6020820190508181035f830152611ed08184611e80565b905092915050565b5f819050919050565b611eea81611ed8565b8114611ef4575f80fd5b50565b5f81359050611f0581611ee1565b92915050565b5f60208284031215611f2057611f1f611d73565b5b5f611f2d84828501611ef7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611f5f82611f36565b9050919050565b611f6f81611f55565b82525050565b5f602082019050611f885f830184611f66565b92915050565b611f9781611f55565b8114611fa1575f80fd5b50565b5f81359050611fb281611f8e565b92915050565b5f8060408385031215611fce57611fcd611d73565b5b5f611fdb85828601611fa4565b9250506020611fec85828601611ef7565b9150509250929050565b5f805f6060848603121561200d5761200c611d73565b5b5f61201a86828701611fa4565b935050602061202b86828701611fa4565b925050604061203c86828701611ef7565b9150509250925092565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61208082611e70565b810181811067ffffffffffffffff8211171561209f5761209e61204a565b5b80604052505050565b5f6120b1611d6a565b90506120bd8282612077565b919050565b5f67ffffffffffffffff8211156120dc576120db61204a565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f67ffffffffffffffff8211156121175761211661204a565b5b61212082611e70565b9050602081019050919050565b828183375f83830152505050565b5f61214d612148846120fd565b6120a8565b905082815260208101848484011115612169576121686120f9565b5b61217484828561212d565b509392505050565b5f82601f8301126121905761218f612046565b5b81356121a084826020860161213b565b91505092915050565b5f606082840312156121be576121bd6120f1565b5b6121c860606120a8565b90505f6121d784828501611ef7565b5f8301525060206121ea84828501611fa4565b602083015250604082013567ffffffffffffffff81111561220e5761220d6120f5565b5b61221a8482850161217c565b60408301525092915050565b5f612238612233846120c2565b6120a8565b9050808382526020820190506020840283018581111561225b5761225a6120ed565b5b835b818110156122a257803567ffffffffffffffff8111156122805761227f612046565b5b80860161228d89826121a9565b8552602085019450505060208101905061225d565b5050509392505050565b5f82601f8301126122c0576122bf612046565b5b81356122d0848260208601612226565b91505092915050565b5f602082840312156122ee576122ed611d73565b5b5f82013567ffffffffffffffff81111561230b5761230a611d77565b5b612317848285016122ac565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61235281611ed8565b82525050565b604082015f82015161236c5f850182612349565b50602082015161237f6020850182612349565b50505050565b5f6123908383612358565b60408301905092915050565b5f602082019050919050565b5f6123b282612320565b6123bc818561232a565b93506123c78361233a565b805f5b838110156123f75781516123de8882612385565b97506123e98361239c565b9250506001810190506123ca565b5085935050505092915050565b5f6020820190508181035f83015261241c81846123a8565b905092915050565b5f6020828403121561243957612438611d73565b5b5f61244684828501611fa4565b91505092915050565b61245881611ed8565b82525050565b5f6020820190506124715f83018461244f565b92915050565b61248081611dfb565b811461248a575f80fd5b50565b5f8135905061249b81612477565b92915050565b5f80604083850312156124b7576124b6611d73565b5b5f6124c485828601611fa4565b92505060206124d58582860161248d565b9150509250929050565b5f67ffffffffffffffff8211156124f9576124f861204a565b5b61250282611e70565b9050602081019050919050565b5f61252161251c846124df565b6120a8565b90508281526020810184848401111561253d5761253c6120f9565b5b61254884828561212d565b509392505050565b5f82601f83011261256457612563612046565b5b813561257484826020860161250f565b91505092915050565b5f805f806080858703121561259557612594611d73565b5b5f6125a287828801611fa4565b94505060206125b387828801611fa4565b93505060406125c487828801611ef7565b925050606085013567ffffffffffffffff8111156125e5576125e4611d77565b5b6125f187828801612550565b91505092959194509250565b5f806040838503121561261357612612611d73565b5b5f61262085828601611fa4565b925050602061263185828601611fa4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061267f57607f821691505b6020821081036126925761269161263b565b5b50919050565b5f6060820190506126ab5f830186611f66565b6126b8602083018561244f565b6126c56040830184611f66565b949350505050565b7f4e6569746865722073656e646572206e6f7220726563697069656e74206973205f8201527f77686974656c6973746564000000000000000000000000000000000000000000602082015250565b5f612727602b83611e38565b9150612732826126cd565b604082019050919050565b5f6020820190508181035f8301526127548161271b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60608201905061279b5f83018661244f565b6127a8602083018561244f565b6127b56040830184611f66565b949350505050565b5f81905092915050565b5f6127d182611e2e565b6127db81856127bd565b93506127eb818560208601611e48565b80840191505092915050565b5f61280282856127c7565b915061280e82846127c7565b91508190509392505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026128767fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261283b565b612880868361283b565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6128bb6128b66128b184611ed8565b612898565b611ed8565b9050919050565b5f819050919050565b6128d4836128a1565b6128e86128e0826128c2565b848454612847565b825550505050565b5f90565b6128fc6128f0565b6129078184846128cb565b505050565b5b8181101561292a5761291f5f826128f4565b60018101905061290d565b5050565b601f82111561296f576129408161281a565b6129498461282c565b81016020851015612958578190505b61296c6129648561282c565b83018261290c565b50505b505050565b5f82821c905092915050565b5f61298f5f1984600802612974565b1980831691505092915050565b5f6129a78383612980565b9150826002028217905092915050565b6129c082611e2e565b67ffffffffffffffff8111156129d9576129d861204a565b5b6129e38254612668565b6129ee82828561292e565b5f60209050601f831160018114612a1f575f8415612a0d578287015190505b612a17858261299c565b865550612a7e565b601f198416612a2d8661281a565b5f5b82811015612a5457848901518255600182019150602085019450602081019050612a2f565b86831015612a715784890151612a6d601f891682612980565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f612aaa82612a86565b612ab48185612a90565b9350612ac4818560208601611e48565b612acd81611e70565b840191505092915050565b5f608082019050612aeb5f830187611f66565b612af86020830186611f66565b612b05604083018561244f565b8181036060830152612b178184612aa0565b905095945050505050565b5f81519050612b3081611da6565b92915050565b5f60208284031215612b4b57612b4a611d73565b5b5f612b5884828501612b22565b91505092915050565b5f604082019050612b745f830185611f66565b612b81602083018461244f565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220ad76c30dd6e338fd6cd7ad6bbaa2112efd07103885789eb5bf4b2ce6ac01b3df64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A6CE2E1 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FF JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x7A6CE2E1 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x31B JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x5F6C96A0 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29B JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1DD0 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x47B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH2 0x953 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AD PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E7 PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x305 PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x24A1 JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0xBD7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x25FD JUMP JUMPDEST PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x419 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x2424 JUMP JUMPDEST PUSH2 0xCBD JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x474 JUMPI POP PUSH2 0x473 DUP3 PUSH2 0xD41 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4B5 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x500 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x500 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x514 DUP3 PUSH2 0xE22 JUMP JUMPDEST POP PUSH2 0x51E DUP3 PUSH2 0xEA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x537 DUP3 DUP3 PUSH2 0x532 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5AB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5BE DUP4 DUP4 PUSH2 0x5B9 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0xEFA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x634 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2698 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x654 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP1 PUSH2 0x273D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x700 JUMPI PUSH2 0x6FF PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x739 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x726 PUSH2 0x1D52 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x71E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x882 JUMPI PUSH0 PUSH2 0x752 PUSH1 0x9 PUSH2 0x1105 JUMP JUMPDEST SWAP1 POP PUSH2 0x75E PUSH1 0x9 PUSH2 0x1111 JUMP JUMPDEST PUSH2 0x786 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x774 JUMPI PUSH2 0x773 PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x7AE DUP2 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x79D JUMPI PUSH2 0x79C PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CC JUMPI PUSH2 0x7CB PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F3 JUMPI PUSH2 0x7F2 PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH32 0xF371D67483809EDBC84279729528D26A3E37CE67F1E3A911778DBF88FF927CA2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x832 JUMPI PUSH2 0x831 PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH0 ADD MLOAD DUP3 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x851 JUMPI PUSH2 0x850 PUSH2 0x275B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x86C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x73E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x896 DUP3 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x95B PUSH2 0x1272 JUMP JUMPDEST PUSH2 0x964 PUSH0 PUSH2 0x12F9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9FB SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA27 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA72 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA49 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA72 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA55 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xAAB PUSH2 0xAA4 PUSH2 0xEE1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x13BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xABA DUP5 DUP5 DUP5 PUSH2 0x53B JUMP JUMPDEST PUSH2 0xAC6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1525 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAD7 DUP3 PUSH2 0xE22 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xAF5 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB21 SWAP1 PUSH2 0x2668 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB6C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB43 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB6C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB4F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0xB7C PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xB90 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xBD2 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0xBC4 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBAC SWAP3 SWAP2 SWAP1 PUSH2 0x27F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xBD2 JUMP JUMPDEST PUSH2 0xBCD DUP5 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC5 PUSH2 0x1272 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD3E DUP2 PUSH2 0x12F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xE0B JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xE1B JUMPI POP PUSH2 0xE1A DUP3 PUSH2 0x1753 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE2D DUP4 PUSH2 0x17BC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE9F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEF5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x17F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF05 DUP5 PUSH2 0x17BC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF46 JUMPI PUSH2 0xF45 DUP2 DUP5 DUP7 PUSH2 0x19B4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFD1 JUMPI PUSH2 0xF85 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1050 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1195 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118C SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x11A1 DUP4 DUP4 PUSH0 PUSH2 0xEFA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1213 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1236 SWAP2 SWAP1 PUSH2 0x29B7 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1266 SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x127A PUSH2 0xEE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1298 PUSH2 0x9C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12F7 JUMPI PUSH2 0x12BB PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EE SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x142C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1423 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1518 SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x16D1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1568 PUSH2 0xEE1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15C5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C2 SWAP2 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1646 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x163E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1635 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x16CF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C6 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16F8 DUP3 PUSH2 0xE22 JUMP JUMPDEST POP PUSH0 PUSH2 0x1702 PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1720 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x174B JUMP JUMPDEST DUP1 PUSH2 0x172A DUP5 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x173B SWAP3 SWAP2 SWAP1 PUSH2 0x27F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x182D JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x195F JUMPI PUSH0 PUSH2 0x183C DUP5 PUSH2 0xE22 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18A6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x18B9 JUMPI POP PUSH2 0x18B7 DUP2 DUP5 PUSH2 0xC2F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x18FB JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F2 SWAP2 SWAP1 PUSH2 0x1F75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x195D JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x19BF DUP4 DUP4 DUP4 PUSH2 0x1B41 JUMP JUMPDEST PUSH2 0x1A72 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A33 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x245E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A69 SWAP3 SWAP2 SWAP1 PUSH2 0x2B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1A85 DUP5 PUSH2 0x1C01 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA3 JUMPI PUSH2 0x1AA2 PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AD5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B36 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1B2B JUMPI PUSH2 0x1B2A PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x1AE2 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BF8 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BB9 JUMPI POP PUSH2 0x1BB8 DUP5 DUP5 PUSH2 0xC2F JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BF7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BDF DUP4 PUSH2 0xEA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C5D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C53 JUMPI PUSH2 0x1C52 PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C9A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C90 JUMPI PUSH2 0x1C8F PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CC9 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1CBF JUMPI PUSH2 0x1CBE PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CF2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1D17 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1D0D JUMPI PUSH2 0x1D0C PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1D3A JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1D30 JUMPI PUSH2 0x1D2F PUSH2 0x2B88 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D49 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DAF DUP2 PUSH2 0x1D7B JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DCA DUP2 PUSH2 0x1DA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE5 JUMPI PUSH2 0x1DE4 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1DBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E0F DUP2 PUSH2 0x1DFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E28 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E65 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E4A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8A DUP3 PUSH2 0x1E2E JUMP JUMPDEST PUSH2 0x1E94 DUP2 DUP6 PUSH2 0x1E38 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EA4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x1EAD DUP2 PUSH2 0x1E70 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED0 DUP2 DUP5 PUSH2 0x1E80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1ED8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F05 DUP2 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F20 JUMPI PUSH2 0x1F1F PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2D DUP5 DUP3 DUP6 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F5F DUP3 PUSH2 0x1F36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6F DUP2 PUSH2 0x1F55 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F88 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F97 DUP2 PUSH2 0x1F55 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FB2 DUP2 PUSH2 0x1F8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FCE JUMPI PUSH2 0x1FCD PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDB DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FEC DUP6 DUP3 DUP7 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x200D JUMPI PUSH2 0x200C PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x201A DUP7 DUP3 DUP8 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x202B DUP7 DUP3 DUP8 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x203C DUP7 DUP3 DUP8 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2080 DUP3 PUSH2 0x1E70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x209F JUMPI PUSH2 0x209E PUSH2 0x204A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20B1 PUSH2 0x1D6A JUMP JUMPDEST SWAP1 POP PUSH2 0x20BD DUP3 DUP3 PUSH2 0x2077 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20DC JUMPI PUSH2 0x20DB PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2117 JUMPI PUSH2 0x2116 PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH2 0x2120 DUP3 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x214D PUSH2 0x2148 DUP5 PUSH2 0x20FD JUMP JUMPDEST PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2169 JUMPI PUSH2 0x2168 PUSH2 0x20F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2174 DUP5 DUP3 DUP6 PUSH2 0x212D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2190 JUMPI PUSH2 0x218F PUSH2 0x2046 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21A0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x213B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21BE JUMPI PUSH2 0x21BD PUSH2 0x20F1 JUMP JUMPDEST JUMPDEST PUSH2 0x21C8 PUSH1 0x60 PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x21D7 DUP5 DUP3 DUP6 ADD PUSH2 0x1EF7 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x21EA DUP5 DUP3 DUP6 ADD PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x220E JUMPI PUSH2 0x220D PUSH2 0x20F5 JUMP JUMPDEST JUMPDEST PUSH2 0x221A DUP5 DUP3 DUP6 ADD PUSH2 0x217C JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2238 PUSH2 0x2233 DUP5 PUSH2 0x20C2 JUMP JUMPDEST PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x225B JUMPI PUSH2 0x225A PUSH2 0x20ED JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22A2 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2280 JUMPI PUSH2 0x227F PUSH2 0x2046 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x228D DUP10 DUP3 PUSH2 0x21A9 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x225D JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22C0 JUMPI PUSH2 0x22BF PUSH2 0x2046 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22D0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2226 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22EE JUMPI PUSH2 0x22ED PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230B JUMPI PUSH2 0x230A PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH2 0x2317 DUP5 DUP3 DUP6 ADD PUSH2 0x22AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2352 DUP2 PUSH2 0x1ED8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x236C PUSH0 DUP6 ADD DUP3 PUSH2 0x2349 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x237F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2349 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2390 DUP4 DUP4 PUSH2 0x2358 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B2 DUP3 PUSH2 0x2320 JUMP JUMPDEST PUSH2 0x23BC DUP2 DUP6 PUSH2 0x232A JUMP JUMPDEST SWAP4 POP PUSH2 0x23C7 DUP4 PUSH2 0x233A JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23F7 JUMPI DUP2 MLOAD PUSH2 0x23DE DUP9 DUP3 PUSH2 0x2385 JUMP JUMPDEST SWAP8 POP PUSH2 0x23E9 DUP4 PUSH2 0x239C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x23CA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x241C DUP2 DUP5 PUSH2 0x23A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2439 JUMPI PUSH2 0x2438 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2446 DUP5 DUP3 DUP6 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2458 DUP2 PUSH2 0x1ED8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2471 PUSH0 DUP4 ADD DUP5 PUSH2 0x244F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2480 DUP2 PUSH2 0x1DFB JUMP JUMPDEST DUP2 EQ PUSH2 0x248A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x249B DUP2 PUSH2 0x2477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24B7 JUMPI PUSH2 0x24B6 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24C4 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24D5 DUP6 DUP3 DUP7 ADD PUSH2 0x248D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24F9 JUMPI PUSH2 0x24F8 PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH2 0x2502 DUP3 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2521 PUSH2 0x251C DUP5 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x20A8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x253D JUMPI PUSH2 0x253C PUSH2 0x20F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2548 DUP5 DUP3 DUP6 PUSH2 0x212D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2564 JUMPI PUSH2 0x2563 PUSH2 0x2046 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2574 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x250F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2595 JUMPI PUSH2 0x2594 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25A2 DUP8 DUP3 DUP9 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x25B3 DUP8 DUP3 DUP9 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x25C4 DUP8 DUP3 DUP9 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25E5 JUMPI PUSH2 0x25E4 PUSH2 0x1D77 JUMP JUMPDEST JUMPDEST PUSH2 0x25F1 DUP8 DUP3 DUP9 ADD PUSH2 0x2550 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2613 JUMPI PUSH2 0x2612 PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2620 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2631 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x267F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2692 JUMPI PUSH2 0x2691 PUSH2 0x263B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26AB PUSH0 DUP4 ADD DUP7 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x26B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x26C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6569746865722073656E646572206E6F7220726563697069656E7420697320 PUSH0 DUP3 ADD MSTORE PUSH32 0x77686974656C6973746564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2727 PUSH1 0x2B DUP4 PUSH2 0x1E38 JUMP JUMPDEST SWAP2 POP PUSH2 0x2732 DUP3 PUSH2 0x26CD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2754 DUP2 PUSH2 0x271B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x279B PUSH0 DUP4 ADD DUP7 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x27A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x27B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x27D1 DUP3 PUSH2 0x1E2E JUMP JUMPDEST PUSH2 0x27DB DUP2 DUP6 PUSH2 0x27BD JUMP JUMPDEST SWAP4 POP PUSH2 0x27EB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E48 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2802 DUP3 DUP6 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP PUSH2 0x280E DUP3 DUP5 PUSH2 0x27C7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2876 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x283B JUMP JUMPDEST PUSH2 0x2880 DUP7 DUP4 PUSH2 0x283B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28BB PUSH2 0x28B6 PUSH2 0x28B1 DUP5 PUSH2 0x1ED8 JUMP JUMPDEST PUSH2 0x2898 JUMP JUMPDEST PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28D4 DUP4 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x28E8 PUSH2 0x28E0 DUP3 PUSH2 0x28C2 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2847 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x28FC PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x2907 DUP2 DUP5 DUP5 PUSH2 0x28CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x292A JUMPI PUSH2 0x291F PUSH0 DUP3 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x290D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x296F JUMPI PUSH2 0x2940 DUP2 PUSH2 0x281A JUMP JUMPDEST PUSH2 0x2949 DUP5 PUSH2 0x282C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2958 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x296C PUSH2 0x2964 DUP6 PUSH2 0x282C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x290C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x298F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2974 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29A7 DUP4 DUP4 PUSH2 0x2980 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29C0 DUP3 PUSH2 0x1E2E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29D9 JUMPI PUSH2 0x29D8 PUSH2 0x204A JUMP JUMPDEST JUMPDEST PUSH2 0x29E3 DUP3 SLOAD PUSH2 0x2668 JUMP JUMPDEST PUSH2 0x29EE DUP3 DUP3 DUP6 PUSH2 0x292E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A1F JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2A0D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2A17 DUP6 DUP3 PUSH2 0x299C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2A2D DUP7 PUSH2 0x281A JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A54 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A2F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2A71 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2A6D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2980 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AAA DUP3 PUSH2 0x2A86 JUMP JUMPDEST PUSH2 0x2AB4 DUP2 DUP6 PUSH2 0x2A90 JUMP JUMPDEST SWAP4 POP PUSH2 0x2AC4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E48 JUMP JUMPDEST PUSH2 0x2ACD DUP2 PUSH2 0x1E70 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2AEB PUSH0 DUP4 ADD DUP8 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x2AF8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x2B05 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x244F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B17 DUP2 DUP5 PUSH2 0x2AA0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B30 DUP2 PUSH2 0x1DA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B4B JUMPI PUSH2 0x2B4A PUSH2 0x1D73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B58 DUP5 DUP3 DUP6 ADD PUSH2 0x2B22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B74 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x2B81 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x244F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH23 0xC30DD6E338FD6CD7AD6BBAA2112EFD07103885789EB5BF 0x4B 0x2C 0xE6 0xAC ADD 0xB3 0xDF PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "250:2165:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:207:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1381:883:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2320:92:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1191:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;347:41:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1210:593:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1086:97:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;937:207:8;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;2365:89:5:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1381:883:17:-;1460:23;1505:9;:21;1515:10;1505:21;;;;;;;;;;;;;;;;;;;;;;;;;1497:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1581:39;1644:6;:13;1623:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1581:77;;1670:6;1665:503;1686:6;:13;1682:1;:17;1665:503;;;1717:15;1735:25;:15;:23;:25::i;:::-;1717:43;;1771:27;:15;:25;:27::i;:::-;1809:35;1815:6;1822:1;1815:9;;;;;;;;:::i;:::-;;;;;;;;:19;;;1836:7;1809:5;:35::i;:::-;1855:44;1868:7;1877:6;1884:1;1877:9;;;;;;;;:::i;:::-;;;;;;;;:21;;;1855:12;:44::i;:::-;1931:99;;;;;;;;1970:6;1977:1;1970:9;;;;;;;;:::i;:::-;;;;;;;;:17;;;1931:99;;;;2011:7;1931:99;;;1910:15;1926:1;1910:18;;;;;;;;:::i;:::-;;;;;;;:120;;;;2100:60;2112:6;2119:1;2112:9;;;;;;;;:::i;:::-;;;;;;;;:17;;;2131:7;2140:6;2147:1;2140:9;;;;;;;;:::i;:::-;;;;;;;;:19;;;2100:60;;;;;;;;:::i;:::-;;;;;;;;1706:462;1701:3;;;;;;;1665:503;;;;2181:15;2174:22;;;1381:883;;;:::o;2185:118:5:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2320:92:17:-;2367:7;2394:10;2387:17;;2320:92;:::o;1191:103::-;1281:5;1259:9;:19;1269:8;1259:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;1191:103;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:5:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;347:41:17:-;;;;;;;;;;;;;;;;;;;;;;:::o;3718:144:5:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;1210:593:8:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;;1341:23;1367:10;:19;1378:7;1367:19;;;;;;;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;:8;:10::i;:::-;1396:31;;1522:1;1506:4;1500:18;:23;1496:70;;1546:9;1539:16;;;;;;1496:70;1691:1;1671:9;1665:23;:27;1661:95;;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;;;1661:95;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;;;;1210:593;;;;:::o;1086:97:17:-;1171:4;1149:9;:19;1159:8;1149:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1086:97;:::o;3928:153:5:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1561:300:5:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;16138:241::-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;14418:120:5:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;827:112:11:-;892:7;918;:14;;;911:21;;827:112;;;:::o;945:123::-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;9955:327:5:-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;1922:167:8:-;2035:9;2013:10;:19;2024:7;2013:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2059:23;2074:7;2059:23;;;;;;:::i;:::-;;;;;;;;1922:167;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15591:312:5:-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;762:146:13:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;5707:115:5:-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;637:698:12:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;6376:272:5:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;12214:916:15:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:117::-;5624:1;5621;5614:12;5638:180;5686:77;5683:1;5676:88;5783:4;5780:1;5773:15;5807:4;5804:1;5797:15;5824:281;5907:27;5929:4;5907:27;:::i;:::-;5899:6;5895:40;6037:6;6025:10;6022:22;6001:18;5989:10;5986:34;5983:62;5980:88;;;6048:18;;:::i;:::-;5980:88;6088:10;6084:2;6077:22;5867:238;5824:281;;:::o;6111:129::-;6145:6;6172:20;;:::i;:::-;6162:30;;6201:33;6229:4;6221:6;6201:33;:::i;:::-;6111:129;;;:::o;6246:338::-;6350:4;6440:18;6432:6;6429:30;6426:56;;;6462:18;;:::i;:::-;6426:56;6512:4;6504:6;6500:17;6492:25;;6572:4;6566;6562:15;6554:23;;6246:338;;;:::o;6590:117::-;6699:1;6696;6689:12;6713:117;6822:1;6819;6812:12;6836:117;6945:1;6942;6935:12;6959:117;7068:1;7065;7058:12;7082:308;7144:4;7234:18;7226:6;7223:30;7220:56;;;7256:18;;:::i;:::-;7220:56;7294:29;7316:6;7294:29;:::i;:::-;7286:37;;7378:4;7372;7368:15;7360:23;;7082:308;;;:::o;7396:146::-;7493:6;7488:3;7483;7470:30;7534:1;7525:6;7520:3;7516:16;7509:27;7396:146;;;:::o;7548:425::-;7626:5;7651:66;7667:49;7709:6;7667:49;:::i;:::-;7651:66;:::i;:::-;7642:75;;7740:6;7733:5;7726:21;7778:4;7771:5;7767:16;7816:3;7807:6;7802:3;7798:16;7795:25;7792:112;;;7823:79;;:::i;:::-;7792:112;7913:54;7960:6;7955:3;7950;7913:54;:::i;:::-;7632:341;7548:425;;;;;:::o;7993:340::-;8049:5;8098:3;8091:4;8083:6;8079:17;8075:27;8065:122;;8106:79;;:::i;:::-;8065:122;8223:6;8210:20;8248:79;8323:3;8315:6;8308:4;8300:6;8296:17;8248:79;:::i;:::-;8239:88;;8055:278;7993:340;;;;:::o;8373:922::-;8449:5;8493:4;8481:9;8476:3;8472:19;8468:30;8465:117;;;8501:79;;:::i;:::-;8465:117;8600:21;8616:4;8600:21;:::i;:::-;8591:30;;8683:1;8723:49;8768:3;8759:6;8748:9;8744:22;8723:49;:::i;:::-;8716:4;8709:5;8705:16;8698:75;8631:153;8848:2;8889:49;8934:3;8925:6;8914:9;8910:22;8889:49;:::i;:::-;8882:4;8875:5;8871:16;8864:75;8794:156;9044:2;9033:9;9029:18;9016:32;9075:18;9067:6;9064:30;9061:117;;;9097:79;;:::i;:::-;9061:117;9217:59;9272:3;9263:6;9252:9;9248:22;9217:59;:::i;:::-;9210:4;9203:5;9199:16;9192:85;8960:328;8373:922;;;;:::o;9337:996::-;9460:5;9485:108;9501:91;9585:6;9501:91;:::i;:::-;9485:108;:::i;:::-;9476:117;;9613:5;9642:6;9635:5;9628:21;9676:4;9669:5;9665:16;9658:23;;9729:4;9721:6;9717:17;9709:6;9705:30;9758:3;9750:6;9747:15;9744:122;;;9777:79;;:::i;:::-;9744:122;9892:6;9875:452;9909:6;9904:3;9901:15;9875:452;;;9998:3;9985:17;10034:18;10021:11;10018:35;10015:122;;;10056:79;;:::i;:::-;10015:122;10180:11;10172:6;10168:24;10218:64;10278:3;10266:10;10218:64;:::i;:::-;10213:3;10206:77;10312:4;10307:3;10303:14;10296:21;;9951:376;;9935:4;9930:3;9926:14;9919:21;;9875:452;;;9879:21;9466:867;;9337:996;;;;;:::o;10375:424::-;10473:5;10522:3;10515:4;10507:6;10503:17;10499:27;10489:122;;10530:79;;:::i;:::-;10489:122;10647:6;10634:20;10672:121;10789:3;10781:6;10774:4;10766:6;10762:17;10672:121;:::i;:::-;10663:130;;10479:320;10375:424;;;;:::o;10805:593::-;10916:6;10965:2;10953:9;10944:7;10940:23;10936:32;10933:119;;;10971:79;;:::i;:::-;10933:119;11119:1;11108:9;11104:17;11091:31;11149:18;11141:6;11138:30;11135:117;;;11171:79;;:::i;:::-;11135:117;11276:105;11373:7;11364:6;11353:9;11349:22;11276:105;:::i;:::-;11266:115;;11062:329;10805:593;;;;:::o;11404:146::-;11503:6;11537:5;11531:12;11521:22;;11404:146;;;:::o;11556:216::-;11687:11;11721:6;11716:3;11709:19;11761:4;11756:3;11752:14;11737:29;;11556:216;;;;:::o;11778:164::-;11877:4;11900:3;11892:11;;11930:4;11925:3;11921:14;11913:22;;11778:164;;;:::o;11948:108::-;12025:24;12043:5;12025:24;:::i;:::-;12020:3;12013:37;11948:108;;:::o;12136:517::-;12287:4;12282:3;12278:14;12377:4;12370:5;12366:16;12360:23;12396:63;12453:4;12448:3;12444:14;12430:12;12396:63;:::i;:::-;12302:167;12554:4;12547:5;12543:16;12537:23;12573:63;12630:4;12625:3;12621:14;12607:12;12573:63;:::i;:::-;12479:167;12256:397;12136:517;;:::o;12659:307::-;12792:10;12813:110;12919:3;12911:6;12813:110;:::i;:::-;12955:4;12950:3;12946:14;12932:28;;12659:307;;;;:::o;12972:145::-;13074:4;13106;13101:3;13097:14;13089:22;;12972:145;;;:::o;13201:988::-;13384:3;13413:86;13493:5;13413:86;:::i;:::-;13515:118;13626:6;13621:3;13515:118;:::i;:::-;13508:125;;13657:88;13739:5;13657:88;:::i;:::-;13768:7;13799:1;13784:380;13809:6;13806:1;13803:13;13784:380;;;13885:6;13879:13;13912:127;14035:3;14020:13;13912:127;:::i;:::-;13905:134;;14062:92;14147:6;14062:92;:::i;:::-;14052:102;;13844:320;13831:1;13828;13824:9;13819:14;;13784:380;;;13788:14;14180:3;14173:10;;13389:800;;;13201:988;;;;:::o;14195:501::-;14402:4;14440:2;14429:9;14425:18;14417:26;;14489:9;14483:4;14479:20;14475:1;14464:9;14460:17;14453:47;14517:172;14684:4;14675:6;14517:172;:::i;:::-;14509:180;;14195:501;;;;:::o;14702:329::-;14761:6;14810:2;14798:9;14789:7;14785:23;14781:32;14778:119;;;14816:79;;:::i;:::-;14778:119;14936:1;14961:53;15006:7;14997:6;14986:9;14982:22;14961:53;:::i;:::-;14951:63;;14907:117;14702:329;;;;:::o;15037:118::-;15124:24;15142:5;15124:24;:::i;:::-;15119:3;15112:37;15037:118;;:::o;15161:222::-;15254:4;15292:2;15281:9;15277:18;15269:26;;15305:71;15373:1;15362:9;15358:17;15349:6;15305:71;:::i;:::-;15161:222;;;;:::o;15389:116::-;15459:21;15474:5;15459:21;:::i;:::-;15452:5;15449:32;15439:60;;15495:1;15492;15485:12;15439:60;15389:116;:::o;15511:133::-;15554:5;15592:6;15579:20;15570:29;;15608:30;15632:5;15608:30;:::i;:::-;15511:133;;;;:::o;15650:468::-;15715:6;15723;15772:2;15760:9;15751:7;15747:23;15743:32;15740:119;;;15778:79;;:::i;:::-;15740:119;15898:1;15923:53;15968:7;15959:6;15948:9;15944:22;15923:53;:::i;:::-;15913:63;;15869:117;16025:2;16051:50;16093:7;16084:6;16073:9;16069:22;16051:50;:::i;:::-;16041:60;;15996:115;15650:468;;;;;:::o;16124:307::-;16185:4;16275:18;16267:6;16264:30;16261:56;;;16297:18;;:::i;:::-;16261:56;16335:29;16357:6;16335:29;:::i;:::-;16327:37;;16419:4;16413;16409:15;16401:23;;16124:307;;;:::o;16437:423::-;16514:5;16539:65;16555:48;16596:6;16555:48;:::i;:::-;16539:65;:::i;:::-;16530:74;;16627:6;16620:5;16613:21;16665:4;16658:5;16654:16;16703:3;16694:6;16689:3;16685:16;16682:25;16679:112;;;16710:79;;:::i;:::-;16679:112;16800:54;16847:6;16842:3;16837;16800:54;:::i;:::-;16520:340;16437:423;;;;;:::o;16879:338::-;16934:5;16983:3;16976:4;16968:6;16964:17;16960:27;16950:122;;16991:79;;:::i;:::-;16950:122;17108:6;17095:20;17133:78;17207:3;17199:6;17192:4;17184:6;17180:17;17133:78;:::i;:::-;17124:87;;16940:277;16879:338;;;;:::o;17223:943::-;17318:6;17326;17334;17342;17391:3;17379:9;17370:7;17366:23;17362:33;17359:120;;;17398:79;;:::i;:::-;17359:120;17518:1;17543:53;17588:7;17579:6;17568:9;17564:22;17543:53;:::i;:::-;17533:63;;17489:117;17645:2;17671:53;17716:7;17707:6;17696:9;17692:22;17671:53;:::i;:::-;17661:63;;17616:118;17773:2;17799:53;17844:7;17835:6;17824:9;17820:22;17799:53;:::i;:::-;17789:63;;17744:118;17929:2;17918:9;17914:18;17901:32;17960:18;17952:6;17949:30;17946:117;;;17982:79;;:::i;:::-;17946:117;18087:62;18141:7;18132:6;18121:9;18117:22;18087:62;:::i;:::-;18077:72;;17872:287;17223:943;;;;;;;:::o;18172:474::-;18240:6;18248;18297:2;18285:9;18276:7;18272:23;18268:32;18265:119;;;18303:79;;:::i;:::-;18265:119;18423:1;18448:53;18493:7;18484:6;18473:9;18469:22;18448:53;:::i;:::-;18438:63;;18394:117;18550:2;18576:53;18621:7;18612:6;18601:9;18597:22;18576:53;:::i;:::-;18566:63;;18521:118;18172:474;;;;;:::o;18652:180::-;18700:77;18697:1;18690:88;18797:4;18794:1;18787:15;18821:4;18818:1;18811:15;18838:320;18882:6;18919:1;18913:4;18909:12;18899:22;;18966:1;18960:4;18956:12;18987:18;18977:81;;19043:4;19035:6;19031:17;19021:27;;18977:81;19105:2;19097:6;19094:14;19074:18;19071:38;19068:84;;19124:18;;:::i;:::-;19068:84;18889:269;18838:320;;;:::o;19164:442::-;19313:4;19351:2;19340:9;19336:18;19328:26;;19364:71;19432:1;19421:9;19417:17;19408:6;19364:71;:::i;:::-;19445:72;19513:2;19502:9;19498:18;19489:6;19445:72;:::i;:::-;19527;19595:2;19584:9;19580:18;19571:6;19527:72;:::i;:::-;19164:442;;;;;;:::o;19612:230::-;19752:34;19748:1;19740:6;19736:14;19729:58;19821:13;19816:2;19808:6;19804:15;19797:38;19612:230;:::o;19848:366::-;19990:3;20011:67;20075:2;20070:3;20011:67;:::i;:::-;20004:74;;20087:93;20176:3;20087:93;:::i;:::-;20205:2;20200:3;20196:12;20189:19;;19848:366;;;:::o;20220:419::-;20386:4;20424:2;20413:9;20409:18;20401:26;;20473:9;20467:4;20463:20;20459:1;20448:9;20444:17;20437:47;20501:131;20627:4;20501:131;:::i;:::-;20493:139;;20220:419;;;:::o;20645:180::-;20693:77;20690:1;20683:88;20790:4;20787:1;20780:15;20814:4;20811:1;20804:15;20831:442;20980:4;21018:2;21007:9;21003:18;20995:26;;21031:71;21099:1;21088:9;21084:17;21075:6;21031:71;:::i;:::-;21112:72;21180:2;21169:9;21165:18;21156:6;21112:72;:::i;:::-;21194;21262:2;21251:9;21247:18;21238:6;21194:72;:::i;:::-;20831:442;;;;;;:::o;21279:148::-;21381:11;21418:3;21403:18;;21279:148;;;;:::o;21433:390::-;21539:3;21567:39;21600:5;21567:39;:::i;:::-;21622:89;21704:6;21699:3;21622:89;:::i;:::-;21615:96;;21720:65;21778:6;21773:3;21766:4;21759:5;21755:16;21720:65;:::i;:::-;21810:6;21805:3;21801:16;21794:23;;21543:280;21433:390;;;;:::o;21829:435::-;22009:3;22031:95;22122:3;22113:6;22031:95;:::i;:::-;22024:102;;22143:95;22234:3;22225:6;22143:95;:::i;:::-;22136:102;;22255:3;22248:10;;21829:435;;;;;:::o;22270:141::-;22319:4;22342:3;22334:11;;22365:3;22362:1;22355:14;22399:4;22396:1;22386:18;22378:26;;22270:141;;;:::o;22417:93::-;22454:6;22501:2;22496;22489:5;22485:14;22481:23;22471:33;;22417:93;;;:::o;22516:107::-;22560:8;22610:5;22604:4;22600:16;22579:37;;22516:107;;;;:::o;22629:393::-;22698:6;22748:1;22736:10;22732:18;22771:97;22801:66;22790:9;22771:97;:::i;:::-;22889:39;22919:8;22908:9;22889:39;:::i;:::-;22877:51;;22961:4;22957:9;22950:5;22946:21;22937:30;;23010:4;23000:8;22996:19;22989:5;22986:30;22976:40;;22705:317;;22629:393;;;;;:::o;23028:60::-;23056:3;23077:5;23070:12;;23028:60;;;:::o;23094:142::-;23144:9;23177:53;23195:34;23204:24;23222:5;23204:24;:::i;:::-;23195:34;:::i;:::-;23177:53;:::i;:::-;23164:66;;23094:142;;;:::o;23242:75::-;23285:3;23306:5;23299:12;;23242:75;;;:::o;23323:269::-;23433:39;23464:7;23433:39;:::i;:::-;23494:91;23543:41;23567:16;23543:41;:::i;:::-;23535:6;23528:4;23522:11;23494:91;:::i;:::-;23488:4;23481:105;23399:193;23323:269;;;:::o;23598:73::-;23643:3;23598:73;:::o;23677:189::-;23754:32;;:::i;:::-;23795:65;23853:6;23845;23839:4;23795:65;:::i;:::-;23730:136;23677:189;;:::o;23872:186::-;23932:120;23949:3;23942:5;23939:14;23932:120;;;24003:39;24040:1;24033:5;24003:39;:::i;:::-;23976:1;23969:5;23965:13;23956:22;;23932:120;;;23872:186;;:::o;24064:543::-;24165:2;24160:3;24157:11;24154:446;;;24199:38;24231:5;24199:38;:::i;:::-;24283:29;24301:10;24283:29;:::i;:::-;24273:8;24269:44;24466:2;24454:10;24451:18;24448:49;;;24487:8;24472:23;;24448:49;24510:80;24566:22;24584:3;24566:22;:::i;:::-;24556:8;24552:37;24539:11;24510:80;:::i;:::-;24169:431;;24154:446;24064:543;;;:::o;24613:117::-;24667:8;24717:5;24711:4;24707:16;24686:37;;24613:117;;;;:::o;24736:169::-;24780:6;24813:51;24861:1;24857:6;24849:5;24846:1;24842:13;24813:51;:::i;:::-;24809:56;24894:4;24888;24884:15;24874:25;;24787:118;24736:169;;;;:::o;24910:295::-;24986:4;25132:29;25157:3;25151:4;25132:29;:::i;:::-;25124:37;;25194:3;25191:1;25187:11;25181:4;25178:21;25170:29;;24910:295;;;;:::o;25210:1395::-;25327:37;25360:3;25327:37;:::i;:::-;25429:18;25421:6;25418:30;25415:56;;;25451:18;;:::i;:::-;25415:56;25495:38;25527:4;25521:11;25495:38;:::i;:::-;25580:67;25640:6;25632;25626:4;25580:67;:::i;:::-;25674:1;25698:4;25685:17;;25730:2;25722:6;25719:14;25747:1;25742:618;;;;26404:1;26421:6;26418:77;;;26470:9;26465:3;26461:19;26455:26;26446:35;;26418:77;26521:67;26581:6;26574:5;26521:67;:::i;:::-;26515:4;26508:81;26377:222;25712:887;;25742:618;25794:4;25790:9;25782:6;25778:22;25828:37;25860:4;25828:37;:::i;:::-;25887:1;25901:208;25915:7;25912:1;25909:14;25901:208;;;25994:9;25989:3;25985:19;25979:26;25971:6;25964:42;26045:1;26037:6;26033:14;26023:24;;26092:2;26081:9;26077:18;26064:31;;25938:4;25935:1;25931:12;25926:17;;25901:208;;;26137:6;26128:7;26125:19;26122:179;;;26195:9;26190:3;26186:19;26180:26;26238:48;26280:4;26272:6;26268:17;26257:9;26238:48;:::i;:::-;26230:6;26223:64;26145:156;26122:179;26347:1;26343;26335:6;26331:14;26327:22;26321:4;26314:36;25749:611;;;25712:887;;25302:1303;;;25210:1395;;:::o;26611:98::-;26662:6;26696:5;26690:12;26680:22;;26611:98;;;:::o;26715:168::-;26798:11;26832:6;26827:3;26820:19;26872:4;26867:3;26863:14;26848:29;;26715:168;;;;:::o;26889:373::-;26975:3;27003:38;27035:5;27003:38;:::i;:::-;27057:70;27120:6;27115:3;27057:70;:::i;:::-;27050:77;;27136:65;27194:6;27189:3;27182:4;27175:5;27171:16;27136:65;:::i;:::-;27226:29;27248:6;27226:29;:::i;:::-;27221:3;27217:39;27210:46;;26979:283;26889:373;;;;:::o;27268:640::-;27463:4;27501:3;27490:9;27486:19;27478:27;;27515:71;27583:1;27572:9;27568:17;27559:6;27515:71;:::i;:::-;27596:72;27664:2;27653:9;27649:18;27640:6;27596:72;:::i;:::-;27678;27746:2;27735:9;27731:18;27722:6;27678:72;:::i;:::-;27797:9;27791:4;27787:20;27782:2;27771:9;27767:18;27760:48;27825:76;27896:4;27887:6;27825:76;:::i;:::-;27817:84;;27268:640;;;;;;;:::o;27914:141::-;27970:5;28001:6;27995:13;27986:22;;28017:32;28043:5;28017:32;:::i;:::-;27914:141;;;;:::o;28061:349::-;28130:6;28179:2;28167:9;28158:7;28154:23;28150:32;28147:119;;;28185:79;;:::i;:::-;28147:119;28305:1;28330:63;28385:7;28376:6;28365:9;28361:22;28330:63;:::i;:::-;28320:73;;28276:127;28061:349;;;;:::o;28416:332::-;28537:4;28575:2;28564:9;28560:18;28552:26;;28588:71;28656:1;28645:9;28641:17;28632:6;28588:71;:::i;:::-;28669:72;28737:2;28726:9;28722:18;28713:6;28669:72;:::i;:::-;28416:332;;;;;:::o;28754:180::-;28802:77;28799:1;28792:88;28899:4;28896:1;28889:15;28923:4;28920:1;28913:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2248600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addToWhitelist(address)": "24891",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"getMsgSender()": "402",
								"isApprovedForAll(address,address)": "infinite",
								"mintNFT((uint256,address,string)[])": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"removeFromWhitelist(address)": "24847",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"whitelist(address)": "2944"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 2415,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1014,
									"end": 1078,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1064,
									"end": 1074,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "53696D706C654E46540000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "534E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 18,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 18,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "tag",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 2415,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad76c30dd6e338fd6cd7ad6bbaa2112efd07103885789eb5bf4b2ce6ac01b3df64736f6c63430008160033",
									".code": [
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "7A6CE2E1"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "B88D4FDE"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "E43252D7"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "E985E9C5"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "7A6CE2E1"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "8AB1D681"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "9B19251A"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "42842E0E"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "42842E0E"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "5F6C96A0"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "81812FC"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 250,
											"end": 2415,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 1381,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "tag",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1381,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 1381,
											"end": 2264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "tag",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 2320,
											"end": 2412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 2320,
											"end": 2412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 1191,
											"end": 1294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1191,
											"end": 1294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 347,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 347,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 347,
											"end": 388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 1086,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "tag",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 1086,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 8,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1460,
											"end": 1483,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1505,
											"end": 1514,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1525,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1505,
											"end": 1526,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 1497,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1497,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1581,
											"end": 1620,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1644,
											"end": 1657,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 1623,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "tag",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "tag",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "153"
										},
										{
											"begin": 1623,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1658,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1581,
											"end": 1658,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1581,
											"end": 1658,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1686,
											"end": 1699,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1682,
											"end": 1699,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1717,
											"end": 1732,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 1735,
											"end": 1750,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1735,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 1735,
											"end": 1760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 1735,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1717,
											"end": 1760,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1717,
											"end": 1760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1771,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 1771,
											"end": 1786,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1771,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 1771,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1771,
											"end": 1798,
											"name": "tag",
											"source": 17,
											"value": "159"
										},
										{
											"begin": 1771,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1809,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1815,
											"end": 1821,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 1815,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "tag",
											"source": 17,
											"value": "162"
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1834,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1815,
											"end": 1834,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1834,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1809,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 1809,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1809,
											"end": 1844,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 1809,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 1868,
											"end": 1875,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 1885,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 1877,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1898,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1877,
											"end": 1898,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1877,
											"end": 1898,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1855,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 1855,
											"end": 1899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1976,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 1970,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "tag",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1987,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1987,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1987,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2018,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 2030,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1925,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1926,
											"end": 1927,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 1910,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "tag",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 1928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 2030,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 2030,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 2030,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1910,
											"end": 2030,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "PUSH",
											"source": 17,
											"value": "F371D67483809EDBC84279729528D26A3E37CE67F1E3A911778DBF88FF927CA2"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 2112,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "tag",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2129,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2129,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2129,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2146,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 2140,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "tag",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "tag",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2159,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2159,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2140,
											"end": 2159,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 2100,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "tag",
											"source": 17,
											"value": "178"
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2100,
											"end": 2160,
											"name": "LOG1",
											"source": 17
										},
										{
											"begin": 1706,
											"end": 2168,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "154"
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "155"
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 2168,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1381,
											"end": 2264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2367,
											"end": 2374,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2404,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2387,
											"end": 2404,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2387,
											"end": 2404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1268,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1277,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1259,
											"end": 1286,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 347,
											"end": 388,
											"name": "tag",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 347,
											"end": 388,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 347,
											"end": 388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1308,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1341,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1417,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1417,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1417,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1518,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1523,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1496,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1691,
											"end": 1692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1715,
											"end": 1745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1708,
											"end": 1745,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1661,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1773,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1773,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1210,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1171,
											"end": 1175,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1167,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1086,
											"end": 1183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2031,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2032,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2013,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2074,
											"end": 2081,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2059,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1922,
											"end": 2089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 12,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 15,
											"value": "346"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "153"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "474"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 18,
											"value": "474"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 18,
											"value": "496"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 18,
											"value": "504"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5515,
											"end": 5632,
											"name": "tag",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 5515,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5624,
											"end": 5625,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5614,
											"end": 5626,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5638,
											"end": 5818,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 5638,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5686,
											"end": 5763,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5676,
											"end": 5764,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5807,
											"end": 5811,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 5804,
											"end": 5805,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5812,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5824,
											"end": 6105,
											"name": "tag",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 5824,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5907,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5907,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 5907,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5907,
											"end": 5934,
											"name": "tag",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 5907,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5899,
											"end": 5905,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5895,
											"end": 5935,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6037,
											"end": 6043,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6025,
											"end": 6035,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6022,
											"end": 6044,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5989,
											"end": 5999,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5986,
											"end": 6020,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5983,
											"end": 6045,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 5980,
											"end": 6068,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5980,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 5980,
											"end": 6068,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 6048,
											"end": 6066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "tag",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5980,
											"end": 6068,
											"name": "tag",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 5980,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6088,
											"end": 6098,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5867,
											"end": 6105,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5824,
											"end": 6105,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5824,
											"end": 6105,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5824,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6111,
											"end": 6240,
											"name": "tag",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 6111,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 6172,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 6172,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6172,
											"end": 6192,
											"name": "tag",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 6172,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6192,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6192,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6201,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 6229,
											"end": 6233,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6221,
											"end": 6227,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6201,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 6201,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6201,
											"end": 6234,
											"name": "tag",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 6201,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6111,
											"end": 6240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6111,
											"end": 6240,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6111,
											"end": 6240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6111,
											"end": 6240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6246,
											"end": 6584,
											"name": "tag",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 6246,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6350,
											"end": 6354,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6458,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6438,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6429,
											"end": 6459,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6426,
											"end": 6482,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6426,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "515"
										},
										{
											"begin": 6426,
											"end": 6482,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6462,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 6462,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 6462,
											"end": 6480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6462,
											"end": 6480,
											"name": "tag",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 6462,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6426,
											"end": 6482,
											"name": "tag",
											"source": 18,
											"value": "515"
										},
										{
											"begin": 6426,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6512,
											"end": 6516,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6504,
											"end": 6510,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6500,
											"end": 6517,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6572,
											"end": 6576,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6570,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6562,
											"end": 6577,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6554,
											"end": 6577,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6554,
											"end": 6577,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6246,
											"end": 6584,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6246,
											"end": 6584,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6246,
											"end": 6584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6246,
											"end": 6584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6590,
											"end": 6707,
											"name": "tag",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 6590,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6699,
											"end": 6700,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6697,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6689,
											"end": 6701,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6713,
											"end": 6830,
											"name": "tag",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 6713,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6822,
											"end": 6823,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6820,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6812,
											"end": 6824,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6836,
											"end": 6953,
											"name": "tag",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 6836,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6959,
											"end": 7076,
											"name": "tag",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 6959,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7068,
											"end": 7069,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7066,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7058,
											"end": 7070,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7082,
											"end": 7390,
											"name": "tag",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 7082,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7144,
											"end": 7148,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7223,
											"end": 7253,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7220,
											"end": 7276,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7220,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 7220,
											"end": 7276,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 7256,
											"end": 7274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "tag",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 7256,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7220,
											"end": 7276,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 7220,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7294,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 7316,
											"end": 7322,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7294,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 7294,
											"end": 7323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7294,
											"end": 7323,
											"name": "tag",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 7294,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7286,
											"end": 7323,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7286,
											"end": 7323,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7378,
											"end": 7382,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7376,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7368,
											"end": 7383,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7360,
											"end": 7383,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7360,
											"end": 7383,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7082,
											"end": 7390,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7082,
											"end": 7390,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7082,
											"end": 7390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7082,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7396,
											"end": 7542,
											"name": "tag",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 7396,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7493,
											"end": 7499,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7488,
											"end": 7491,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7483,
											"end": 7486,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7470,
											"end": 7500,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 7534,
											"end": 7535,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7531,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7520,
											"end": 7523,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7509,
											"end": 7536,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7396,
											"end": 7542,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7396,
											"end": 7542,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7396,
											"end": 7542,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7396,
											"end": 7542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7973,
											"name": "tag",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 7548,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7626,
											"end": 7631,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 7667,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 7709,
											"end": 7715,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 7667,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7667,
											"end": 7716,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 7667,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7651,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 7651,
											"end": 7717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7651,
											"end": 7717,
											"name": "tag",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 7651,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7642,
											"end": 7717,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7642,
											"end": 7717,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7733,
											"end": 7738,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7726,
											"end": 7747,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7778,
											"end": 7782,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7776,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7767,
											"end": 7783,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7816,
											"end": 7819,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7807,
											"end": 7813,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7802,
											"end": 7805,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7798,
											"end": 7814,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7795,
											"end": 7820,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7792,
											"end": 7904,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7792,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 7792,
											"end": 7904,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7823,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 7823,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 7823,
											"end": 7902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7823,
											"end": 7902,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 7823,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7792,
											"end": 7904,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 7792,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7913,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7955,
											"end": 7958,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7950,
											"end": 7953,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7913,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 7913,
											"end": 7967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7913,
											"end": 7967,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 7913,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7632,
											"end": 7973,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7973,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7973,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7973,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7973,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7973,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7548,
											"end": 7973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7993,
											"end": 8333,
											"name": "tag",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 7993,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8049,
											"end": 8054,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8101,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8091,
											"end": 8095,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 8083,
											"end": 8089,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8079,
											"end": 8096,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8075,
											"end": 8102,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8065,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 8065,
											"end": 8187,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8106,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 8106,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 8106,
											"end": 8185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8106,
											"end": 8185,
											"name": "tag",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 8106,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8065,
											"end": 8187,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 8065,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8223,
											"end": 8229,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8230,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8248,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 8323,
											"end": 8326,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8315,
											"end": 8321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8308,
											"end": 8312,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8300,
											"end": 8306,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8296,
											"end": 8313,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8248,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 8248,
											"end": 8327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8248,
											"end": 8327,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 8248,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8239,
											"end": 8327,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8239,
											"end": 8327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8055,
											"end": 8333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7993,
											"end": 8333,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7993,
											"end": 8333,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7993,
											"end": 8333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7993,
											"end": 8333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7993,
											"end": 8333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8373,
											"end": 9295,
											"name": "tag",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 8373,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8449,
											"end": 8454,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8493,
											"end": 8497,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8481,
											"end": 8490,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8476,
											"end": 8479,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8472,
											"end": 8491,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8468,
											"end": 8498,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8465,
											"end": 8582,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8465,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 8465,
											"end": 8582,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8501,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 8501,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 8501,
											"end": 8580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8501,
											"end": 8580,
											"name": "tag",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 8501,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8465,
											"end": 8582,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 8465,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8600,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 8600,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 8600,
											"end": 8621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8600,
											"end": 8621,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 8600,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8591,
											"end": 8621,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8591,
											"end": 8621,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 8768,
											"end": 8771,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8759,
											"end": 8765,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8748,
											"end": 8757,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8744,
											"end": 8766,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8723,
											"end": 8772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 8723,
											"end": 8772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8723,
											"end": 8772,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 8723,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8716,
											"end": 8720,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8714,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8705,
											"end": 8721,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 8773,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8631,
											"end": 8784,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8848,
											"end": 8850,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8889,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 8934,
											"end": 8937,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8925,
											"end": 8931,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8914,
											"end": 8923,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8910,
											"end": 8932,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8889,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 8889,
											"end": 8938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8889,
											"end": 8938,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 8889,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8882,
											"end": 8886,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8875,
											"end": 8880,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8871,
											"end": 8887,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8864,
											"end": 8939,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8794,
											"end": 8950,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9044,
											"end": 9046,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9042,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9029,
											"end": 9047,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9016,
											"end": 9048,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9067,
											"end": 9073,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9064,
											"end": 9094,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9061,
											"end": 9178,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9061,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 9061,
											"end": 9178,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9097,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 9097,
											"end": 9176,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 9097,
											"end": 9176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9097,
											"end": 9176,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 9097,
											"end": 9176,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9061,
											"end": 9178,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 9061,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 9272,
											"end": 9275,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9263,
											"end": 9269,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9252,
											"end": 9261,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9248,
											"end": 9270,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9276,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 9217,
											"end": 9276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9276,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 9217,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9210,
											"end": 9214,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9203,
											"end": 9208,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9199,
											"end": 9215,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9192,
											"end": 9277,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8960,
											"end": 9288,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8373,
											"end": 9295,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8373,
											"end": 9295,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8373,
											"end": 9295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8373,
											"end": 9295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8373,
											"end": 9295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 10333,
											"name": "tag",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 9337,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9460,
											"end": 9465,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 9501,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 9585,
											"end": 9591,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9501,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 9501,
											"end": 9592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9501,
											"end": 9592,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 9501,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9485,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 9485,
											"end": 9593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9485,
											"end": 9593,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 9485,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9476,
											"end": 9593,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9476,
											"end": 9593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9613,
											"end": 9618,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9642,
											"end": 9648,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9635,
											"end": 9640,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9628,
											"end": 9649,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9676,
											"end": 9680,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9669,
											"end": 9674,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9665,
											"end": 9681,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9658,
											"end": 9681,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9658,
											"end": 9681,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9721,
											"end": 9727,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9717,
											"end": 9734,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 9709,
											"end": 9715,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9705,
											"end": 9735,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9758,
											"end": 9761,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9750,
											"end": 9756,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9747,
											"end": 9762,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9744,
											"end": 9866,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9744,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 9744,
											"end": 9866,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9777,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 9777,
											"end": 9856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 9777,
											"end": 9856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9777,
											"end": 9856,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 9777,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9744,
											"end": 9866,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 9744,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9892,
											"end": 9898,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9909,
											"end": 9915,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9904,
											"end": 9907,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9901,
											"end": 9916,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9998,
											"end": 10001,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9985,
											"end": 10002,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10034,
											"end": 10052,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10021,
											"end": 10032,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10018,
											"end": 10053,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10015,
											"end": 10137,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10015,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 10015,
											"end": 10137,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10056,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 10056,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 10056,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10056,
											"end": 10135,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 10056,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10015,
											"end": 10137,
											"name": "tag",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 10015,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10180,
											"end": 10191,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10172,
											"end": 10178,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10168,
											"end": 10192,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10218,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 10266,
											"end": 10276,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10218,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 10218,
											"end": 10282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10218,
											"end": 10282,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 10218,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10213,
											"end": 10216,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10206,
											"end": 10283,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10312,
											"end": 10316,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10303,
											"end": 10317,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10296,
											"end": 10317,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10296,
											"end": 10317,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9951,
											"end": 10327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9951,
											"end": 10327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9935,
											"end": 9939,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9930,
											"end": 9933,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9926,
											"end": 9940,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9919,
											"end": 9940,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 9875,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9879,
											"end": 9900,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9466,
											"end": 10333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9466,
											"end": 10333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 10333,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 10333,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 10333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 10333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 10333,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10375,
											"end": 10799,
											"name": "tag",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 10375,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10473,
											"end": 10478,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10525,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10515,
											"end": 10519,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10507,
											"end": 10513,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10503,
											"end": 10520,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10499,
											"end": 10526,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10489,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 10489,
											"end": 10611,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10530,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 10530,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 10530,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10530,
											"end": 10609,
											"name": "tag",
											"source": 18,
											"value": "558"
										},
										{
											"begin": 10530,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10489,
											"end": 10611,
											"name": "tag",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 10489,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10647,
											"end": 10653,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10672,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 10789,
											"end": 10792,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10781,
											"end": 10787,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10774,
											"end": 10778,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 10762,
											"end": 10779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10672,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 10672,
											"end": 10793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10672,
											"end": 10793,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 10672,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10663,
											"end": 10793,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10663,
											"end": 10793,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10479,
											"end": 10799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10375,
											"end": 10799,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10375,
											"end": 10799,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10375,
											"end": 10799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10375,
											"end": 10799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10375,
											"end": 10799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10805,
											"end": 11398,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 10805,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10965,
											"end": 10967,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10953,
											"end": 10962,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10940,
											"end": 10963,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10936,
											"end": 10968,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10933,
											"end": 11052,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10933,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 10933,
											"end": 11052,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10971,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 10971,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 10971,
											"end": 11050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10971,
											"end": 11050,
											"name": "tag",
											"source": 18,
											"value": "562"
										},
										{
											"begin": 10971,
											"end": 11050,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10933,
											"end": 11052,
											"name": "tag",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 10933,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11108,
											"end": 11117,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11104,
											"end": 11121,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11091,
											"end": 11122,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11147,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11138,
											"end": 11168,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11135,
											"end": 11252,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11135,
											"end": 11252,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 11135,
											"end": 11252,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11171,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 11171,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 11171,
											"end": 11250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11171,
											"end": 11250,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 11171,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11135,
											"end": 11252,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 11135,
											"end": 11252,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11276,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 11373,
											"end": 11380,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11364,
											"end": 11370,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11353,
											"end": 11362,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11349,
											"end": 11371,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11276,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 11276,
											"end": 11381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11276,
											"end": 11381,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 11276,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11266,
											"end": 11381,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11266,
											"end": 11381,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11062,
											"end": 11391,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10805,
											"end": 11398,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10805,
											"end": 11398,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10805,
											"end": 11398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10805,
											"end": 11398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10805,
											"end": 11398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11404,
											"end": 11550,
											"name": "tag",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 11404,
											"end": 11550,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11503,
											"end": 11509,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11537,
											"end": 11542,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11531,
											"end": 11543,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11404,
											"end": 11550,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11404,
											"end": 11550,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11404,
											"end": 11550,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11404,
											"end": 11550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11556,
											"end": 11772,
											"name": "tag",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 11556,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11687,
											"end": 11698,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11721,
											"end": 11727,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11716,
											"end": 11719,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11709,
											"end": 11728,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11761,
											"end": 11765,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11756,
											"end": 11759,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11752,
											"end": 11766,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11737,
											"end": 11766,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11737,
											"end": 11766,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11556,
											"end": 11772,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11556,
											"end": 11772,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11556,
											"end": 11772,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11556,
											"end": 11772,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11556,
											"end": 11772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11778,
											"end": 11942,
											"name": "tag",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 11778,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11877,
											"end": 11881,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11903,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11892,
											"end": 11903,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11892,
											"end": 11903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11930,
											"end": 11934,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11925,
											"end": 11928,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11921,
											"end": 11935,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11913,
											"end": 11935,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11913,
											"end": 11935,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11778,
											"end": 11942,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11778,
											"end": 11942,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11778,
											"end": 11942,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11778,
											"end": 11942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11948,
											"end": 12056,
											"name": "tag",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 11948,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12025,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 12043,
											"end": 12048,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12025,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 12025,
											"end": 12049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12025,
											"end": 12049,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 12025,
											"end": 12049,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12020,
											"end": 12023,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12013,
											"end": 12050,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11948,
											"end": 12056,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11948,
											"end": 12056,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11948,
											"end": 12056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12136,
											"end": 12653,
											"name": "tag",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 12136,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12287,
											"end": 12291,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12282,
											"end": 12285,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12278,
											"end": 12292,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12377,
											"end": 12381,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12370,
											"end": 12375,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12366,
											"end": 12382,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12360,
											"end": 12383,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12396,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 12453,
											"end": 12457,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12448,
											"end": 12451,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12444,
											"end": 12458,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12430,
											"end": 12442,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12396,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 12396,
											"end": 12459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12396,
											"end": 12459,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 12396,
											"end": 12459,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12302,
											"end": 12469,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12554,
											"end": 12558,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12547,
											"end": 12552,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12543,
											"end": 12559,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12573,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 12630,
											"end": 12634,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12625,
											"end": 12628,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12621,
											"end": 12635,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12607,
											"end": 12619,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12573,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 12573,
											"end": 12636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12573,
											"end": 12636,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 12573,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12479,
											"end": 12646,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12256,
											"end": 12653,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12136,
											"end": 12653,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12136,
											"end": 12653,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12136,
											"end": 12653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12659,
											"end": 12966,
											"name": "tag",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 12659,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12792,
											"end": 12802,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 12919,
											"end": 12922,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12911,
											"end": 12917,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12813,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 12813,
											"end": 12923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12813,
											"end": 12923,
											"name": "tag",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 12813,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12955,
											"end": 12959,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12950,
											"end": 12953,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12946,
											"end": 12960,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12932,
											"end": 12960,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12932,
											"end": 12960,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12659,
											"end": 12966,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12659,
											"end": 12966,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12659,
											"end": 12966,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12659,
											"end": 12966,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12659,
											"end": 12966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12972,
											"end": 13117,
											"name": "tag",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 12972,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13074,
											"end": 13078,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13106,
											"end": 13110,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13101,
											"end": 13104,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13097,
											"end": 13111,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13111,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13089,
											"end": 13111,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12972,
											"end": 13117,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12972,
											"end": 13117,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12972,
											"end": 13117,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12972,
											"end": 13117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13201,
											"end": 14189,
											"name": "tag",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 13201,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13384,
											"end": 13387,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13413,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13413,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 13413,
											"end": 13499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13413,
											"end": 13499,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 13413,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13515,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 13626,
											"end": 13632,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13621,
											"end": 13624,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13515,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 13515,
											"end": 13633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13515,
											"end": 13633,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 13515,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13508,
											"end": 13633,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 13508,
											"end": 13633,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13657,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 13739,
											"end": 13744,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13657,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 13657,
											"end": 13745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13657,
											"end": 13745,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 13657,
											"end": 13745,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13768,
											"end": 13775,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13799,
											"end": 13800,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "tag",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13809,
											"end": 13815,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13806,
											"end": 13807,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13803,
											"end": 13816,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13885,
											"end": 13891,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13879,
											"end": 13892,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 13912,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 14035,
											"end": 14038,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 14020,
											"end": 14033,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13912,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 13912,
											"end": 14039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13912,
											"end": 14039,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 13912,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13905,
											"end": 14039,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 13905,
											"end": 14039,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14062,
											"end": 14154,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 14147,
											"end": 14153,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14062,
											"end": 14154,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 14062,
											"end": 14154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14062,
											"end": 14154,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 14062,
											"end": 14154,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14052,
											"end": 14154,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14052,
											"end": 14154,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13844,
											"end": 14164,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13831,
											"end": 13832,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 13828,
											"end": 13829,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13824,
											"end": 13833,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13819,
											"end": 13833,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13819,
											"end": 13833,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 13784,
											"end": 14164,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13788,
											"end": 13802,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14180,
											"end": 14183,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14173,
											"end": 14183,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 14173,
											"end": 14183,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13389,
											"end": 14189,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13389,
											"end": 14189,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13389,
											"end": 14189,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13201,
											"end": 14189,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13201,
											"end": 14189,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13201,
											"end": 14189,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13201,
											"end": 14189,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13201,
											"end": 14189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14195,
											"end": 14696,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 14195,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14402,
											"end": 14406,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14440,
											"end": 14442,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14429,
											"end": 14438,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14425,
											"end": 14443,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14417,
											"end": 14443,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14417,
											"end": 14443,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14489,
											"end": 14498,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14483,
											"end": 14487,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14479,
											"end": 14499,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14475,
											"end": 14476,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14464,
											"end": 14473,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14460,
											"end": 14477,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14453,
											"end": 14500,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14517,
											"end": 14689,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 14684,
											"end": 14688,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14675,
											"end": 14681,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14517,
											"end": 14689,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 14517,
											"end": 14689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14517,
											"end": 14689,
											"name": "tag",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 14517,
											"end": 14689,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14509,
											"end": 14689,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14509,
											"end": 14689,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14195,
											"end": 14696,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14195,
											"end": 14696,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14195,
											"end": 14696,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14195,
											"end": 14696,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14195,
											"end": 14696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14702,
											"end": 15031,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 14702,
											"end": 15031,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14761,
											"end": 14767,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14810,
											"end": 14812,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14798,
											"end": 14807,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14789,
											"end": 14796,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14785,
											"end": 14808,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14781,
											"end": 14813,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 14778,
											"end": 14897,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14778,
											"end": 14897,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 14778,
											"end": 14897,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14816,
											"end": 14895,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 14816,
											"end": 14895,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 14816,
											"end": 14895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14816,
											"end": 14895,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 14816,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14778,
											"end": 14897,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 14778,
											"end": 14897,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14936,
											"end": 14937,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14961,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 15006,
											"end": 15013,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14997,
											"end": 15003,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14986,
											"end": 14995,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14982,
											"end": 15004,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14961,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 14961,
											"end": 15014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14961,
											"end": 15014,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 14961,
											"end": 15014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14951,
											"end": 15014,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14951,
											"end": 15014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14907,
											"end": 15024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14702,
											"end": 15031,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14702,
											"end": 15031,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14702,
											"end": 15031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14702,
											"end": 15031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14702,
											"end": 15031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "tag",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 15142,
											"end": 15147,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 15124,
											"end": 15148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 15124,
											"end": 15148,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15119,
											"end": 15122,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15112,
											"end": 15149,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15037,
											"end": 15155,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15037,
											"end": 15155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15161,
											"end": 15383,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 15161,
											"end": 15383,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15254,
											"end": 15258,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15292,
											"end": 15294,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15281,
											"end": 15290,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15277,
											"end": 15295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15269,
											"end": 15295,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15269,
											"end": 15295,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15305,
											"end": 15376,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 15373,
											"end": 15374,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15371,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15358,
											"end": 15375,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15349,
											"end": 15355,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15305,
											"end": 15376,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 15305,
											"end": 15376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15305,
											"end": 15376,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 15305,
											"end": 15376,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15161,
											"end": 15383,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15161,
											"end": 15383,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15161,
											"end": 15383,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15161,
											"end": 15383,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15161,
											"end": 15383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15389,
											"end": 15505,
											"name": "tag",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 15389,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15459,
											"end": 15480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 15474,
											"end": 15479,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15459,
											"end": 15480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 15459,
											"end": 15480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15459,
											"end": 15480,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 15459,
											"end": 15480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15452,
											"end": 15457,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15449,
											"end": 15481,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 15439,
											"end": 15499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 15439,
											"end": 15499,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15495,
											"end": 15496,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15492,
											"end": 15493,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15485,
											"end": 15497,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 15439,
											"end": 15499,
											"name": "tag",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 15439,
											"end": 15499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15389,
											"end": 15505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15389,
											"end": 15505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15511,
											"end": 15644,
											"name": "tag",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 15511,
											"end": 15644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15554,
											"end": 15559,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15592,
											"end": 15598,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15579,
											"end": 15599,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 15570,
											"end": 15599,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15570,
											"end": 15599,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15608,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 15632,
											"end": 15637,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15608,
											"end": 15638,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "410"
										},
										{
											"begin": 15608,
											"end": 15638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15608,
											"end": 15638,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 15608,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15511,
											"end": 15644,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15511,
											"end": 15644,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15511,
											"end": 15644,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15511,
											"end": 15644,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15511,
											"end": 15644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15650,
											"end": 16118,
											"name": "tag",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 15650,
											"end": 16118,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15715,
											"end": 15721,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15723,
											"end": 15729,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15772,
											"end": 15774,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 15760,
											"end": 15769,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15751,
											"end": 15758,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15747,
											"end": 15770,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 15743,
											"end": 15775,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 15740,
											"end": 15859,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 15740,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 15740,
											"end": 15859,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15778,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 15778,
											"end": 15857,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 15778,
											"end": 15857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15778,
											"end": 15857,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 15778,
											"end": 15857,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15740,
											"end": 15859,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 15740,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15898,
											"end": 15899,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15923,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 15968,
											"end": 15975,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15959,
											"end": 15965,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15948,
											"end": 15957,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 15944,
											"end": 15966,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15923,
											"end": 15976,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 15923,
											"end": 15976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15923,
											"end": 15976,
											"name": "tag",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 15923,
											"end": 15976,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15913,
											"end": 15976,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15913,
											"end": 15976,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15869,
											"end": 15986,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16025,
											"end": 16027,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16051,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 16093,
											"end": 16100,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16084,
											"end": 16090,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16073,
											"end": 16082,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 16069,
											"end": 16091,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16051,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "411"
										},
										{
											"begin": 16051,
											"end": 16101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16051,
											"end": 16101,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 16051,
											"end": 16101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16041,
											"end": 16101,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16041,
											"end": 16101,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15996,
											"end": 16111,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15650,
											"end": 16118,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15650,
											"end": 16118,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15650,
											"end": 16118,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15650,
											"end": 16118,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15650,
											"end": 16118,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15650,
											"end": 16118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16124,
											"end": 16431,
											"name": "tag",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 16124,
											"end": 16431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16185,
											"end": 16189,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16275,
											"end": 16293,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16273,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16264,
											"end": 16294,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 16261,
											"end": 16317,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 16261,
											"end": 16317,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 16261,
											"end": 16317,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 16297,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 16297,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 16297,
											"end": 16315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16297,
											"end": 16315,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 16297,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16261,
											"end": 16317,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 16261,
											"end": 16317,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16335,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 16357,
											"end": 16363,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16335,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 16335,
											"end": 16364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16335,
											"end": 16364,
											"name": "tag",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 16335,
											"end": 16364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16327,
											"end": 16364,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16327,
											"end": 16364,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16419,
											"end": 16423,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16413,
											"end": 16417,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16409,
											"end": 16424,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16401,
											"end": 16424,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16401,
											"end": 16424,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16124,
											"end": 16431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16124,
											"end": 16431,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16124,
											"end": 16431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16124,
											"end": 16431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16437,
											"end": 16860,
											"name": "tag",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 16437,
											"end": 16860,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16514,
											"end": 16519,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "611"
										},
										{
											"begin": 16555,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 16596,
											"end": 16602,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16555,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "412"
										},
										{
											"begin": 16555,
											"end": 16603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16555,
											"end": 16603,
											"name": "tag",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 16555,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 16539,
											"end": 16604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "tag",
											"source": 18,
											"value": "611"
										},
										{
											"begin": 16539,
											"end": 16604,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16530,
											"end": 16604,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16530,
											"end": 16604,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16627,
											"end": 16633,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16620,
											"end": 16625,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16613,
											"end": 16634,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16665,
											"end": 16669,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16658,
											"end": 16663,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16654,
											"end": 16670,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16703,
											"end": 16706,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16694,
											"end": 16700,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16689,
											"end": 16692,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16685,
											"end": 16701,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16682,
											"end": 16707,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 16679,
											"end": 16791,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 16679,
											"end": 16791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 16679,
											"end": 16791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 16710,
											"end": 16789,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 16710,
											"end": 16789,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 16710,
											"end": 16789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16710,
											"end": 16789,
											"name": "tag",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 16710,
											"end": 16789,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16679,
											"end": 16791,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 16679,
											"end": 16791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16800,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 16847,
											"end": 16853,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16842,
											"end": 16845,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16837,
											"end": 16840,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16800,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 16800,
											"end": 16854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16800,
											"end": 16854,
											"name": "tag",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 16800,
											"end": 16854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16520,
											"end": 16860,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16437,
											"end": 16860,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 16437,
											"end": 16860,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16437,
											"end": 16860,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16437,
											"end": 16860,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16437,
											"end": 16860,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16437,
											"end": 16860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16879,
											"end": 17217,
											"name": "tag",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 16879,
											"end": 17217,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16934,
											"end": 16939,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 16986,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16976,
											"end": 16980,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 16968,
											"end": 16974,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16964,
											"end": 16981,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16960,
											"end": 16987,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 16950,
											"end": 17072,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 16950,
											"end": 17072,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 16991,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 16991,
											"end": 17070,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 16991,
											"end": 17070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16991,
											"end": 17070,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 16991,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16950,
											"end": 17072,
											"name": "tag",
											"source": 18,
											"value": "617"
										},
										{
											"begin": 16950,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17108,
											"end": 17114,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17095,
											"end": 17115,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 17133,
											"end": 17211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 17207,
											"end": 17210,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17199,
											"end": 17205,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17192,
											"end": 17196,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17184,
											"end": 17190,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 17180,
											"end": 17197,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17133,
											"end": 17211,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 17133,
											"end": 17211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17133,
											"end": 17211,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 17133,
											"end": 17211,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17124,
											"end": 17211,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17124,
											"end": 17211,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16940,
											"end": 17217,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16879,
											"end": 17217,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 16879,
											"end": 17217,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16879,
											"end": 17217,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16879,
											"end": 17217,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16879,
											"end": 17217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "tag",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17318,
											"end": 17324,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17326,
											"end": 17332,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 17334,
											"end": 17340,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17342,
											"end": 17348,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 17391,
											"end": 17394,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 17379,
											"end": 17388,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17370,
											"end": 17377,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 17366,
											"end": 17389,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17362,
											"end": 17395,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 17359,
											"end": 17479,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17359,
											"end": 17479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 17359,
											"end": 17479,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17398,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 17398,
											"end": 17477,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 17398,
											"end": 17477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17398,
											"end": 17477,
											"name": "tag",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 17398,
											"end": 17477,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17359,
											"end": 17479,
											"name": "tag",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 17359,
											"end": 17479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17518,
											"end": 17519,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17543,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 17588,
											"end": 17595,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 17579,
											"end": 17585,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17568,
											"end": 17577,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 17564,
											"end": 17586,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17543,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 17543,
											"end": 17596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17543,
											"end": 17596,
											"name": "tag",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 17543,
											"end": 17596,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17533,
											"end": 17596,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 17533,
											"end": 17596,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17489,
											"end": 17606,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17645,
											"end": 17647,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17671,
											"end": 17724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 17716,
											"end": 17723,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 17707,
											"end": 17713,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17696,
											"end": 17705,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 17692,
											"end": 17714,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17671,
											"end": 17724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 17671,
											"end": 17724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17671,
											"end": 17724,
											"name": "tag",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 17671,
											"end": 17724,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17661,
											"end": 17724,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 17661,
											"end": 17724,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17616,
											"end": 17734,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17773,
											"end": 17775,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 17799,
											"end": 17852,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 17844,
											"end": 17851,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 17835,
											"end": 17841,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17824,
											"end": 17833,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 17820,
											"end": 17842,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17799,
											"end": 17852,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 17799,
											"end": 17852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17799,
											"end": 17852,
											"name": "tag",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 17799,
											"end": 17852,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17789,
											"end": 17852,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17789,
											"end": 17852,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17744,
											"end": 17862,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17929,
											"end": 17931,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 17918,
											"end": 17927,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17914,
											"end": 17932,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17901,
											"end": 17933,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 17960,
											"end": 17978,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17952,
											"end": 17958,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17949,
											"end": 17979,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 17946,
											"end": 18063,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17946,
											"end": 18063,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 17946,
											"end": 18063,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17982,
											"end": 18061,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 17982,
											"end": 18061,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 17982,
											"end": 18061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17982,
											"end": 18061,
											"name": "tag",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 17982,
											"end": 18061,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17946,
											"end": 18063,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 17946,
											"end": 18063,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18087,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 18141,
											"end": 18148,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 18132,
											"end": 18138,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18121,
											"end": 18130,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 18117,
											"end": 18139,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18087,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 18087,
											"end": 18149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18087,
											"end": 18149,
											"name": "tag",
											"source": 18,
											"value": "628"
										},
										{
											"begin": 18087,
											"end": 18149,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18077,
											"end": 18149,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18077,
											"end": 18149,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17872,
											"end": 18159,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17223,
											"end": 18166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18172,
											"end": 18646,
											"name": "tag",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 18172,
											"end": 18646,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18240,
											"end": 18246,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18248,
											"end": 18254,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 18297,
											"end": 18299,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 18285,
											"end": 18294,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18276,
											"end": 18283,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18272,
											"end": 18295,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 18268,
											"end": 18300,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 18265,
											"end": 18384,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 18265,
											"end": 18384,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 18265,
											"end": 18384,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 18303,
											"end": 18382,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 18303,
											"end": 18382,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 18303,
											"end": 18382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18303,
											"end": 18382,
											"name": "tag",
											"source": 18,
											"value": "631"
										},
										{
											"begin": 18303,
											"end": 18382,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18265,
											"end": 18384,
											"name": "tag",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 18265,
											"end": 18384,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18423,
											"end": 18424,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18448,
											"end": 18501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 18493,
											"end": 18500,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18484,
											"end": 18490,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18473,
											"end": 18482,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 18469,
											"end": 18491,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18448,
											"end": 18501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 18448,
											"end": 18501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18448,
											"end": 18501,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 18448,
											"end": 18501,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18438,
											"end": 18501,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18438,
											"end": 18501,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18394,
											"end": 18511,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18550,
											"end": 18552,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18576,
											"end": 18629,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 18621,
											"end": 18628,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18612,
											"end": 18618,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18601,
											"end": 18610,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 18597,
											"end": 18619,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18576,
											"end": 18629,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 18576,
											"end": 18629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18576,
											"end": 18629,
											"name": "tag",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 18576,
											"end": 18629,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18566,
											"end": 18629,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18566,
											"end": 18629,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18521,
											"end": 18639,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18172,
											"end": 18646,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18172,
											"end": 18646,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18172,
											"end": 18646,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18172,
											"end": 18646,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18172,
											"end": 18646,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18172,
											"end": 18646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18652,
											"end": 18832,
											"name": "tag",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 18652,
											"end": 18832,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18700,
											"end": 18777,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18697,
											"end": 18698,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18690,
											"end": 18778,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18797,
											"end": 18801,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 18794,
											"end": 18795,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 18787,
											"end": 18802,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18821,
											"end": 18825,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 18818,
											"end": 18819,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18811,
											"end": 18826,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 18838,
											"end": 19158,
											"name": "tag",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 18838,
											"end": 19158,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18882,
											"end": 18888,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18919,
											"end": 18920,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 18913,
											"end": 18917,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18909,
											"end": 18921,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 18899,
											"end": 18921,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18899,
											"end": 18921,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18966,
											"end": 18967,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 18960,
											"end": 18964,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18956,
											"end": 18968,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 18987,
											"end": 19005,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 18977,
											"end": 19058,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 18977,
											"end": 19058,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19043,
											"end": 19047,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 19035,
											"end": 19041,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19031,
											"end": 19048,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 19021,
											"end": 19048,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19021,
											"end": 19048,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18977,
											"end": 19058,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 18977,
											"end": 19058,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19105,
											"end": 19107,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19097,
											"end": 19103,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19094,
											"end": 19108,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 19074,
											"end": 19092,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19071,
											"end": 19109,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19068,
											"end": 19152,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 19068,
											"end": 19152,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19124,
											"end": 19142,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 19124,
											"end": 19142,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 19124,
											"end": 19142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19124,
											"end": 19142,
											"name": "tag",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 19124,
											"end": 19142,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19068,
											"end": 19152,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 19068,
											"end": 19152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18889,
											"end": 19158,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18838,
											"end": 19158,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18838,
											"end": 19158,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18838,
											"end": 19158,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18838,
											"end": 19158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19606,
											"name": "tag",
											"source": 18,
											"value": "140"
										},
										{
											"begin": 19164,
											"end": 19606,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19313,
											"end": 19317,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19351,
											"end": 19353,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 19340,
											"end": 19349,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19336,
											"end": 19354,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19328,
											"end": 19354,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19328,
											"end": 19354,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19364,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 19432,
											"end": 19433,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19421,
											"end": 19430,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19417,
											"end": 19434,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19408,
											"end": 19414,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 19364,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 19364,
											"end": 19435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19364,
											"end": 19435,
											"name": "tag",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 19364,
											"end": 19435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19445,
											"end": 19517,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 19513,
											"end": 19515,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19502,
											"end": 19511,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19498,
											"end": 19516,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19489,
											"end": 19495,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19445,
											"end": 19517,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 19445,
											"end": 19517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19445,
											"end": 19517,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 19445,
											"end": 19517,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19527,
											"end": 19599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 19595,
											"end": 19597,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 19584,
											"end": 19593,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19580,
											"end": 19598,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19571,
											"end": 19577,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19527,
											"end": 19599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 19527,
											"end": 19599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19527,
											"end": 19599,
											"name": "tag",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 19527,
											"end": 19599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19606,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19606,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19606,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19606,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19606,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19606,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19164,
											"end": 19606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19612,
											"end": 19842,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 19612,
											"end": 19842,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19752,
											"end": 19786,
											"name": "PUSH",
											"source": 18,
											"value": "4E6569746865722073656E646572206E6F7220726563697069656E7420697320"
										},
										{
											"begin": 19748,
											"end": 19749,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19740,
											"end": 19746,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19736,
											"end": 19750,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19729,
											"end": 19787,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19821,
											"end": 19834,
											"name": "PUSH",
											"source": 18,
											"value": "77686974656C6973746564000000000000000000000000000000000000000000"
										},
										{
											"begin": 19816,
											"end": 19818,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19808,
											"end": 19814,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19804,
											"end": 19819,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19797,
											"end": 19835,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19612,
											"end": 19842,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19612,
											"end": 19842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "tag",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19990,
											"end": 19993,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20011,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 20075,
											"end": 20077,
											"name": "PUSH",
											"source": 18,
											"value": "2B"
										},
										{
											"begin": 20070,
											"end": 20073,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20011,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 20011,
											"end": 20078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20011,
											"end": 20078,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 20011,
											"end": 20078,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20004,
											"end": 20078,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20004,
											"end": 20078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20087,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 20176,
											"end": 20179,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20087,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 20087,
											"end": 20180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20087,
											"end": 20180,
											"name": "tag",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 20087,
											"end": 20180,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20205,
											"end": 20207,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 20200,
											"end": 20203,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20196,
											"end": 20208,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20189,
											"end": 20208,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20189,
											"end": 20208,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19848,
											"end": 20214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "tag",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20386,
											"end": 20390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20424,
											"end": 20426,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20413,
											"end": 20422,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20409,
											"end": 20427,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20401,
											"end": 20427,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20401,
											"end": 20427,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20473,
											"end": 20482,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20467,
											"end": 20471,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20463,
											"end": 20483,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 20459,
											"end": 20460,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20448,
											"end": 20457,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20444,
											"end": 20461,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20437,
											"end": 20484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20501,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 20627,
											"end": 20631,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20501,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 20501,
											"end": 20632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20501,
											"end": 20632,
											"name": "tag",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 20501,
											"end": 20632,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20493,
											"end": 20632,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20493,
											"end": 20632,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20220,
											"end": 20639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20645,
											"end": 20825,
											"name": "tag",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 20645,
											"end": 20825,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20693,
											"end": 20770,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20690,
											"end": 20691,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20683,
											"end": 20771,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20790,
											"end": 20794,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 20787,
											"end": 20788,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 20780,
											"end": 20795,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 20814,
											"end": 20818,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 20811,
											"end": 20812,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20804,
											"end": 20819,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 20831,
											"end": 21273,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 20831,
											"end": 21273,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20980,
											"end": 20984,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21018,
											"end": 21020,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 21007,
											"end": 21016,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21003,
											"end": 21021,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20995,
											"end": 21021,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20995,
											"end": 21021,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21031,
											"end": 21102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 21099,
											"end": 21100,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21088,
											"end": 21097,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21084,
											"end": 21101,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21075,
											"end": 21081,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 21031,
											"end": 21102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 21031,
											"end": 21102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21031,
											"end": 21102,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 21031,
											"end": 21102,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21112,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 21180,
											"end": 21182,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21169,
											"end": 21178,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21165,
											"end": 21183,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21156,
											"end": 21162,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21112,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 21112,
											"end": 21184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21112,
											"end": 21184,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 21112,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21194,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 21262,
											"end": 21264,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 21251,
											"end": 21260,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21247,
											"end": 21265,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21238,
											"end": 21244,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21194,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 21194,
											"end": 21266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21194,
											"end": 21266,
											"name": "tag",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 21194,
											"end": 21266,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20831,
											"end": 21273,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 20831,
											"end": 21273,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 20831,
											"end": 21273,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20831,
											"end": 21273,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20831,
											"end": 21273,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20831,
											"end": 21273,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20831,
											"end": 21273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21279,
											"end": 21427,
											"name": "tag",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 21279,
											"end": 21427,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21381,
											"end": 21392,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21418,
											"end": 21421,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21403,
											"end": 21421,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21403,
											"end": 21421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21279,
											"end": 21427,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21279,
											"end": 21427,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21279,
											"end": 21427,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21279,
											"end": 21427,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21279,
											"end": 21427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21433,
											"end": 21823,
											"name": "tag",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 21433,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21539,
											"end": 21542,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21567,
											"end": 21606,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 21600,
											"end": 21605,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21567,
											"end": 21606,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 21567,
											"end": 21606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21567,
											"end": 21606,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 21567,
											"end": 21606,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21622,
											"end": 21711,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 21704,
											"end": 21710,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21699,
											"end": 21702,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21622,
											"end": 21711,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 21622,
											"end": 21711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21622,
											"end": 21711,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 21622,
											"end": 21711,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21615,
											"end": 21711,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 21615,
											"end": 21711,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21720,
											"end": 21785,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "658"
										},
										{
											"begin": 21778,
											"end": 21784,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21773,
											"end": 21776,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21766,
											"end": 21770,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21759,
											"end": 21764,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 21755,
											"end": 21771,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21720,
											"end": 21785,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 21720,
											"end": 21785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21720,
											"end": 21785,
											"name": "tag",
											"source": 18,
											"value": "658"
										},
										{
											"begin": 21720,
											"end": 21785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21810,
											"end": 21816,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 21805,
											"end": 21808,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21801,
											"end": 21817,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21794,
											"end": 21817,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21794,
											"end": 21817,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21543,
											"end": 21823,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21433,
											"end": 21823,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21433,
											"end": 21823,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21433,
											"end": 21823,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21433,
											"end": 21823,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21433,
											"end": 21823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21829,
											"end": 22264,
											"name": "tag",
											"source": 18,
											"value": "220"
										},
										{
											"begin": 21829,
											"end": 22264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22009,
											"end": 22012,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22031,
											"end": 22126,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 22122,
											"end": 22125,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22113,
											"end": 22119,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 22031,
											"end": 22126,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 22031,
											"end": 22126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22031,
											"end": 22126,
											"name": "tag",
											"source": 18,
											"value": "660"
										},
										{
											"begin": 22031,
											"end": 22126,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22024,
											"end": 22126,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22024,
											"end": 22126,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22143,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 22234,
											"end": 22237,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22225,
											"end": 22231,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22143,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 22143,
											"end": 22238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22143,
											"end": 22238,
											"name": "tag",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 22143,
											"end": 22238,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22136,
											"end": 22238,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22136,
											"end": 22238,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22255,
											"end": 22258,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22248,
											"end": 22258,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22248,
											"end": 22258,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21829,
											"end": 22264,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 21829,
											"end": 22264,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21829,
											"end": 22264,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21829,
											"end": 22264,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21829,
											"end": 22264,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21829,
											"end": 22264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22270,
											"end": 22411,
											"name": "tag",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 22270,
											"end": 22411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22319,
											"end": 22323,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22342,
											"end": 22345,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22334,
											"end": 22345,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22334,
											"end": 22345,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22365,
											"end": 22368,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22362,
											"end": 22363,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22355,
											"end": 22369,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 22399,
											"end": 22403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22396,
											"end": 22397,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22386,
											"end": 22404,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 22378,
											"end": 22404,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22378,
											"end": 22404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22270,
											"end": 22411,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22270,
											"end": 22411,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22270,
											"end": 22411,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22270,
											"end": 22411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22417,
											"end": 22510,
											"name": "tag",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 22417,
											"end": 22510,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22454,
											"end": 22460,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22501,
											"end": 22503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 22496,
											"end": 22498,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 22489,
											"end": 22494,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22485,
											"end": 22499,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 22481,
											"end": 22504,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 22471,
											"end": 22504,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22471,
											"end": 22504,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22417,
											"end": 22510,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22417,
											"end": 22510,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22417,
											"end": 22510,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22417,
											"end": 22510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22516,
											"end": 22623,
											"name": "tag",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 22516,
											"end": 22623,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22560,
											"end": 22568,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22610,
											"end": 22615,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22604,
											"end": 22608,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22600,
											"end": 22616,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 22579,
											"end": 22616,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22579,
											"end": 22616,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22516,
											"end": 22623,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22516,
											"end": 22623,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22516,
											"end": 22623,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22516,
											"end": 22623,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22516,
											"end": 22623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22629,
											"end": 23022,
											"name": "tag",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 22629,
											"end": 23022,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22698,
											"end": 22704,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22748,
											"end": 22749,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 22736,
											"end": 22746,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22732,
											"end": 22750,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 22771,
											"end": 22868,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 22801,
											"end": 22867,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22790,
											"end": 22799,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22771,
											"end": 22868,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 22771,
											"end": 22868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22771,
											"end": 22868,
											"name": "tag",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 22771,
											"end": 22868,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22889,
											"end": 22928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 22919,
											"end": 22927,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 22908,
											"end": 22917,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22889,
											"end": 22928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 22889,
											"end": 22928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22889,
											"end": 22928,
											"name": "tag",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 22889,
											"end": 22928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22877,
											"end": 22928,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 22877,
											"end": 22928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22961,
											"end": 22965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 22957,
											"end": 22966,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 22950,
											"end": 22955,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22946,
											"end": 22967,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 22937,
											"end": 22967,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 22937,
											"end": 22967,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23010,
											"end": 23014,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 23000,
											"end": 23008,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 22996,
											"end": 23015,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 22989,
											"end": 22994,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22986,
											"end": 23016,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 22976,
											"end": 23016,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22976,
											"end": 23016,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22705,
											"end": 23022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22705,
											"end": 23022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22629,
											"end": 23022,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 22629,
											"end": 23022,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22629,
											"end": 23022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22629,
											"end": 23022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22629,
											"end": 23022,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22629,
											"end": 23022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23028,
											"end": 23088,
											"name": "tag",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 23028,
											"end": 23088,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23056,
											"end": 23059,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23077,
											"end": 23082,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23070,
											"end": 23082,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23070,
											"end": 23082,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23028,
											"end": 23088,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23028,
											"end": 23088,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23028,
											"end": 23088,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23028,
											"end": 23088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23094,
											"end": 23236,
											"name": "tag",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 23094,
											"end": 23236,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23144,
											"end": 23153,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23177,
											"end": 23230,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 23195,
											"end": 23229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 23204,
											"end": 23228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 23222,
											"end": 23227,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23204,
											"end": 23228,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 23204,
											"end": 23228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23204,
											"end": 23228,
											"name": "tag",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 23204,
											"end": 23228,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23195,
											"end": 23229,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 23195,
											"end": 23229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23195,
											"end": 23229,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 23195,
											"end": 23229,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23177,
											"end": 23230,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 23177,
											"end": 23230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23177,
											"end": 23230,
											"name": "tag",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 23177,
											"end": 23230,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23164,
											"end": 23230,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23164,
											"end": 23230,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23094,
											"end": 23236,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23094,
											"end": 23236,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23094,
											"end": 23236,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23094,
											"end": 23236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23242,
											"end": 23317,
											"name": "tag",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 23242,
											"end": 23317,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23285,
											"end": 23288,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23306,
											"end": 23311,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23299,
											"end": 23311,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23299,
											"end": 23311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23242,
											"end": 23317,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23242,
											"end": 23317,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23242,
											"end": 23317,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23242,
											"end": 23317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23323,
											"end": 23592,
											"name": "tag",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 23323,
											"end": 23592,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23433,
											"end": 23472,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 23464,
											"end": 23471,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23433,
											"end": 23472,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 23433,
											"end": 23472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23433,
											"end": 23472,
											"name": "tag",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 23433,
											"end": 23472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23494,
											"end": 23585,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 23543,
											"end": 23584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 23567,
											"end": 23583,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23543,
											"end": 23584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 23543,
											"end": 23584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23543,
											"end": 23584,
											"name": "tag",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 23543,
											"end": 23584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23535,
											"end": 23541,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23528,
											"end": 23532,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23522,
											"end": 23533,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 23494,
											"end": 23585,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 23494,
											"end": 23585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23494,
											"end": 23585,
											"name": "tag",
											"source": 18,
											"value": "676"
										},
										{
											"begin": 23494,
											"end": 23585,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23488,
											"end": 23492,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23481,
											"end": 23586,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 23399,
											"end": 23592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23323,
											"end": 23592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23323,
											"end": 23592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23323,
											"end": 23592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23323,
											"end": 23592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23598,
											"end": 23671,
											"name": "tag",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 23598,
											"end": 23671,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23643,
											"end": 23646,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23598,
											"end": 23671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23598,
											"end": 23671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23677,
											"end": 23866,
											"name": "tag",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 23677,
											"end": 23866,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23754,
											"end": 23786,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 23754,
											"end": 23786,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 23754,
											"end": 23786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23754,
											"end": 23786,
											"name": "tag",
											"source": 18,
											"value": "680"
										},
										{
											"begin": 23754,
											"end": 23786,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23795,
											"end": 23860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 23853,
											"end": 23859,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23845,
											"end": 23851,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23839,
											"end": 23843,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23795,
											"end": 23860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 23795,
											"end": 23860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23795,
											"end": 23860,
											"name": "tag",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 23795,
											"end": 23860,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23730,
											"end": 23866,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23677,
											"end": 23866,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23677,
											"end": 23866,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23677,
											"end": 23866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23872,
											"end": 24058,
											"name": "tag",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 23872,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "tag",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23949,
											"end": 23952,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23942,
											"end": 23947,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23939,
											"end": 23953,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24003,
											"end": 24042,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 24040,
											"end": 24041,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24033,
											"end": 24038,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24003,
											"end": 24042,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 24003,
											"end": 24042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24003,
											"end": 24042,
											"name": "tag",
											"source": 18,
											"value": "686"
										},
										{
											"begin": 24003,
											"end": 24042,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23976,
											"end": 23977,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 23969,
											"end": 23974,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23965,
											"end": 23978,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23956,
											"end": 23978,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23956,
											"end": 23978,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "683"
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "tag",
											"source": 18,
											"value": "685"
										},
										{
											"begin": 23932,
											"end": 24052,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23872,
											"end": 24058,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23872,
											"end": 24058,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23872,
											"end": 24058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24064,
											"end": 24607,
											"name": "tag",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 24064,
											"end": 24607,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24165,
											"end": 24167,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 24160,
											"end": 24163,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24157,
											"end": 24168,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 24154,
											"end": 24600,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 24154,
											"end": 24600,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 24154,
											"end": 24600,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24199,
											"end": 24237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "689"
										},
										{
											"begin": 24231,
											"end": 24236,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24199,
											"end": 24237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 24199,
											"end": 24237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24199,
											"end": 24237,
											"name": "tag",
											"source": 18,
											"value": "689"
										},
										{
											"begin": 24199,
											"end": 24237,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24283,
											"end": 24312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 24301,
											"end": 24311,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24283,
											"end": 24312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 24283,
											"end": 24312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24283,
											"end": 24312,
											"name": "tag",
											"source": 18,
											"value": "690"
										},
										{
											"begin": 24283,
											"end": 24312,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24273,
											"end": 24281,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24269,
											"end": 24313,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24466,
											"end": 24468,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24454,
											"end": 24464,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24451,
											"end": 24469,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 24448,
											"end": 24497,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 24448,
											"end": 24497,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 24448,
											"end": 24497,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 24487,
											"end": 24495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 24472,
											"end": 24495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24472,
											"end": 24495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24448,
											"end": 24497,
											"name": "tag",
											"source": 18,
											"value": "691"
										},
										{
											"begin": 24448,
											"end": 24497,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24510,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 24566,
											"end": 24588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 24584,
											"end": 24587,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24566,
											"end": 24588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 24566,
											"end": 24588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24566,
											"end": 24588,
											"name": "tag",
											"source": 18,
											"value": "693"
										},
										{
											"begin": 24566,
											"end": 24588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24556,
											"end": 24564,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24552,
											"end": 24589,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24539,
											"end": 24550,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24510,
											"end": 24590,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 24510,
											"end": 24590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24510,
											"end": 24590,
											"name": "tag",
											"source": 18,
											"value": "692"
										},
										{
											"begin": 24510,
											"end": 24590,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24169,
											"end": 24600,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24169,
											"end": 24600,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24154,
											"end": 24600,
											"name": "tag",
											"source": 18,
											"value": "688"
										},
										{
											"begin": 24154,
											"end": 24600,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24064,
											"end": 24607,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24064,
											"end": 24607,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24064,
											"end": 24607,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24064,
											"end": 24607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24613,
											"end": 24730,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 24613,
											"end": 24730,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24667,
											"end": 24675,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24717,
											"end": 24722,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24711,
											"end": 24715,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24707,
											"end": 24723,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 24686,
											"end": 24723,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24686,
											"end": 24723,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24613,
											"end": 24730,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24613,
											"end": 24730,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24613,
											"end": 24730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24613,
											"end": 24730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24613,
											"end": 24730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24736,
											"end": 24905,
											"name": "tag",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 24736,
											"end": 24905,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24780,
											"end": 24786,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24813,
											"end": 24864,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 24861,
											"end": 24862,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24857,
											"end": 24863,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 24849,
											"end": 24854,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24846,
											"end": 24847,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 24842,
											"end": 24855,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 24813,
											"end": 24864,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 24813,
											"end": 24864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24813,
											"end": 24864,
											"name": "tag",
											"source": 18,
											"value": "696"
										},
										{
											"begin": 24813,
											"end": 24864,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24809,
											"end": 24865,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 24894,
											"end": 24898,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 24888,
											"end": 24892,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24884,
											"end": 24899,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 24874,
											"end": 24899,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24874,
											"end": 24899,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24787,
											"end": 24905,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24736,
											"end": 24905,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24736,
											"end": 24905,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24736,
											"end": 24905,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24736,
											"end": 24905,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24736,
											"end": 24905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24910,
											"end": 25205,
											"name": "tag",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 24910,
											"end": 25205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24986,
											"end": 24990,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25132,
											"end": 25161,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 25157,
											"end": 25160,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25151,
											"end": 25155,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25161,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 25132,
											"end": 25161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25132,
											"end": 25161,
											"name": "tag",
											"source": 18,
											"value": "698"
										},
										{
											"begin": 25132,
											"end": 25161,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25124,
											"end": 25161,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 25124,
											"end": 25161,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25194,
											"end": 25197,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25191,
											"end": 25192,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 25187,
											"end": 25198,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 25181,
											"end": 25185,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25178,
											"end": 25199,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 25170,
											"end": 25199,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25170,
											"end": 25199,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24910,
											"end": 25205,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 24910,
											"end": 25205,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 24910,
											"end": 25205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24910,
											"end": 25205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24910,
											"end": 25205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25210,
											"end": 26605,
											"name": "tag",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 25210,
											"end": 26605,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25327,
											"end": 25364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 25360,
											"end": 25363,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25327,
											"end": 25364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 25327,
											"end": 25364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25327,
											"end": 25364,
											"name": "tag",
											"source": 18,
											"value": "700"
										},
										{
											"begin": 25327,
											"end": 25364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25429,
											"end": 25447,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25421,
											"end": 25427,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25418,
											"end": 25448,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 25415,
											"end": 25471,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 25415,
											"end": 25471,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "701"
										},
										{
											"begin": 25415,
											"end": 25471,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 25451,
											"end": 25469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "702"
										},
										{
											"begin": 25451,
											"end": 25469,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 25451,
											"end": 25469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25451,
											"end": 25469,
											"name": "tag",
											"source": 18,
											"value": "702"
										},
										{
											"begin": 25451,
											"end": 25469,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25415,
											"end": 25471,
											"name": "tag",
											"source": 18,
											"value": "701"
										},
										{
											"begin": 25415,
											"end": 25471,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25495,
											"end": 25533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 25527,
											"end": 25531,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25521,
											"end": 25532,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 25495,
											"end": 25533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 25495,
											"end": 25533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25495,
											"end": 25533,
											"name": "tag",
											"source": 18,
											"value": "703"
										},
										{
											"begin": 25495,
											"end": 25533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25580,
											"end": 25647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 25640,
											"end": 25646,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25632,
											"end": 25638,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25626,
											"end": 25630,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 25580,
											"end": 25647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 25580,
											"end": 25647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25580,
											"end": 25647,
											"name": "tag",
											"source": 18,
											"value": "704"
										},
										{
											"begin": 25580,
											"end": 25647,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25674,
											"end": 25675,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25698,
											"end": 25702,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25685,
											"end": 25702,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25685,
											"end": 25702,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25730,
											"end": 25732,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 25722,
											"end": 25728,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 25719,
											"end": 25733,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 25747,
											"end": 25748,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 25742,
											"end": 26360,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25742,
											"end": 26360,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 25742,
											"end": 26360,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 25742,
											"end": 26360,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26404,
											"end": 26405,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26421,
											"end": 26427,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26418,
											"end": 26495,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 26418,
											"end": 26495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 26418,
											"end": 26495,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26470,
											"end": 26479,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26465,
											"end": 26468,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 26461,
											"end": 26480,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26455,
											"end": 26481,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 26446,
											"end": 26481,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26446,
											"end": 26481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26418,
											"end": 26495,
											"name": "tag",
											"source": 18,
											"value": "707"
										},
										{
											"begin": 26418,
											"end": 26495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26521,
											"end": 26588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "708"
										},
										{
											"begin": 26581,
											"end": 26587,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26574,
											"end": 26579,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26521,
											"end": 26588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 26521,
											"end": 26588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26521,
											"end": 26588,
											"name": "tag",
											"source": 18,
											"value": "708"
										},
										{
											"begin": 26521,
											"end": 26588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26515,
											"end": 26519,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 26508,
											"end": 26589,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 26377,
											"end": 26599,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25712,
											"end": 26599,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 25712,
											"end": 26599,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25742,
											"end": 26360,
											"name": "tag",
											"source": 18,
											"value": "706"
										},
										{
											"begin": 25742,
											"end": 26360,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25794,
											"end": 25798,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 25790,
											"end": 25799,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 25782,
											"end": 25788,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 25778,
											"end": 25800,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 25828,
											"end": 25865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 25860,
											"end": 25864,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 25828,
											"end": 25865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 25828,
											"end": 25865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25828,
											"end": 25865,
											"name": "tag",
											"source": 18,
											"value": "709"
										},
										{
											"begin": 25828,
											"end": 25865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25887,
											"end": 25888,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "tag",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25915,
											"end": 25922,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25912,
											"end": 25913,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25909,
											"end": 25923,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "712"
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 25994,
											"end": 26003,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 25989,
											"end": 25992,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 25985,
											"end": 26004,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25979,
											"end": 26005,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 25971,
											"end": 25977,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 25964,
											"end": 26006,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 26045,
											"end": 26046,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 26037,
											"end": 26043,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26033,
											"end": 26047,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26023,
											"end": 26047,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26023,
											"end": 26047,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26092,
											"end": 26094,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26081,
											"end": 26090,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 26077,
											"end": 26095,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26064,
											"end": 26095,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 26064,
											"end": 26095,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25938,
											"end": 25942,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 25935,
											"end": 25936,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 25931,
											"end": 25943,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 25926,
											"end": 25943,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 25926,
											"end": 25943,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "710"
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "tag",
											"source": 18,
											"value": "712"
										},
										{
											"begin": 25901,
											"end": 26109,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26137,
											"end": 26143,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 26128,
											"end": 26135,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26125,
											"end": 26144,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 26122,
											"end": 26301,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 26122,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 26122,
											"end": 26301,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 26195,
											"end": 26204,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 26190,
											"end": 26193,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 26186,
											"end": 26205,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26180,
											"end": 26206,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 26238,
											"end": 26286,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "714"
										},
										{
											"begin": 26280,
											"end": 26284,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 26272,
											"end": 26278,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 26268,
											"end": 26285,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 26257,
											"end": 26266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26238,
											"end": 26286,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 26238,
											"end": 26286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26238,
											"end": 26286,
											"name": "tag",
											"source": 18,
											"value": "714"
										},
										{
											"begin": 26238,
											"end": 26286,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26230,
											"end": 26236,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 26223,
											"end": 26287,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 26145,
											"end": 26301,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26122,
											"end": 26301,
											"name": "tag",
											"source": 18,
											"value": "713"
										},
										{
											"begin": 26122,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26347,
											"end": 26348,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 26343,
											"end": 26344,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 26335,
											"end": 26341,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 26331,
											"end": 26345,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 26327,
											"end": 26349,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26321,
											"end": 26325,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 26314,
											"end": 26350,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 25749,
											"end": 26360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25749,
											"end": 26360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25749,
											"end": 26360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25712,
											"end": 26599,
											"name": "tag",
											"source": 18,
											"value": "705"
										},
										{
											"begin": 25712,
											"end": 26599,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 25712,
											"end": 26599,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25302,
											"end": 26605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25302,
											"end": 26605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25302,
											"end": 26605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25210,
											"end": 26605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25210,
											"end": 26605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 25210,
											"end": 26605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26611,
											"end": 26709,
											"name": "tag",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 26611,
											"end": 26709,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26662,
											"end": 26668,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26696,
											"end": 26701,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 26690,
											"end": 26702,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 26680,
											"end": 26702,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26680,
											"end": 26702,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26611,
											"end": 26709,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26611,
											"end": 26709,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26611,
											"end": 26709,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26611,
											"end": 26709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26715,
											"end": 26883,
											"name": "tag",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 26715,
											"end": 26883,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26798,
											"end": 26809,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 26832,
											"end": 26838,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26827,
											"end": 26830,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26820,
											"end": 26839,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 26872,
											"end": 26876,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 26867,
											"end": 26870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 26863,
											"end": 26877,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 26848,
											"end": 26877,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 26848,
											"end": 26877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26715,
											"end": 26883,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26715,
											"end": 26883,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26715,
											"end": 26883,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26715,
											"end": 26883,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26715,
											"end": 26883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 26889,
											"end": 27262,
											"name": "tag",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 26889,
											"end": 27262,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 26975,
											"end": 26978,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27003,
											"end": 27041,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 27035,
											"end": 27040,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27003,
											"end": 27041,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 27003,
											"end": 27041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27003,
											"end": 27041,
											"name": "tag",
											"source": 18,
											"value": "718"
										},
										{
											"begin": 27003,
											"end": 27041,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27057,
											"end": 27127,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 27120,
											"end": 27126,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27115,
											"end": 27118,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 27057,
											"end": 27127,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 27057,
											"end": 27127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27057,
											"end": 27127,
											"name": "tag",
											"source": 18,
											"value": "719"
										},
										{
											"begin": 27057,
											"end": 27127,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27050,
											"end": 27127,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 27050,
											"end": 27127,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27136,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 27194,
											"end": 27200,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27189,
											"end": 27192,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 27182,
											"end": 27186,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 27175,
											"end": 27180,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 27171,
											"end": 27187,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27136,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 27136,
											"end": 27201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27136,
											"end": 27201,
											"name": "tag",
											"source": 18,
											"value": "720"
										},
										{
											"begin": 27136,
											"end": 27201,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27226,
											"end": 27255,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 27248,
											"end": 27254,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27226,
											"end": 27255,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 27226,
											"end": 27255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27226,
											"end": 27255,
											"name": "tag",
											"source": 18,
											"value": "721"
										},
										{
											"begin": 27226,
											"end": 27255,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27221,
											"end": 27224,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 27217,
											"end": 27256,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27210,
											"end": 27256,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27210,
											"end": 27256,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26979,
											"end": 27262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26889,
											"end": 27262,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 26889,
											"end": 27262,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 26889,
											"end": 27262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26889,
											"end": 27262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 26889,
											"end": 27262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "tag",
											"source": 18,
											"value": "281"
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27463,
											"end": 27467,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27501,
											"end": 27504,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 27490,
											"end": 27499,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 27486,
											"end": 27505,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27478,
											"end": 27505,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27478,
											"end": 27505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27515,
											"end": 27586,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "723"
										},
										{
											"begin": 27583,
											"end": 27584,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 27572,
											"end": 27581,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27568,
											"end": 27585,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27559,
											"end": 27565,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 27515,
											"end": 27586,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 27515,
											"end": 27586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27515,
											"end": 27586,
											"name": "tag",
											"source": 18,
											"value": "723"
										},
										{
											"begin": 27515,
											"end": 27586,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27596,
											"end": 27668,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "724"
										},
										{
											"begin": 27664,
											"end": 27666,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 27653,
											"end": 27662,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27649,
											"end": 27667,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27640,
											"end": 27646,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 27596,
											"end": 27668,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 27596,
											"end": 27668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27596,
											"end": 27668,
											"name": "tag",
											"source": 18,
											"value": "724"
										},
										{
											"begin": 27596,
											"end": 27668,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27678,
											"end": 27750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "725"
										},
										{
											"begin": 27746,
											"end": 27748,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 27735,
											"end": 27744,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27731,
											"end": 27749,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27722,
											"end": 27728,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 27678,
											"end": 27750,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 27678,
											"end": 27750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27678,
											"end": 27750,
											"name": "tag",
											"source": 18,
											"value": "725"
										},
										{
											"begin": 27678,
											"end": 27750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27797,
											"end": 27806,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27791,
											"end": 27795,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27787,
											"end": 27807,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 27782,
											"end": 27784,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 27771,
											"end": 27780,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 27767,
											"end": 27785,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 27760,
											"end": 27808,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 27825,
											"end": 27901,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "726"
										},
										{
											"begin": 27896,
											"end": 27900,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27887,
											"end": 27893,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 27825,
											"end": 27901,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 27825,
											"end": 27901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27825,
											"end": 27901,
											"name": "tag",
											"source": 18,
											"value": "726"
										},
										{
											"begin": 27825,
											"end": 27901,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27817,
											"end": 27901,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27817,
											"end": 27901,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27268,
											"end": 27908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 27914,
											"end": 28055,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 27914,
											"end": 28055,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27970,
											"end": 27975,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28001,
											"end": 28007,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 27995,
											"end": 28008,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 27986,
											"end": 28008,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 27986,
											"end": 28008,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28017,
											"end": 28049,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "728"
										},
										{
											"begin": 28043,
											"end": 28048,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 28017,
											"end": 28049,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 28017,
											"end": 28049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28017,
											"end": 28049,
											"name": "tag",
											"source": 18,
											"value": "728"
										},
										{
											"begin": 28017,
											"end": 28049,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 27914,
											"end": 28055,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 27914,
											"end": 28055,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 27914,
											"end": 28055,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27914,
											"end": 28055,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 27914,
											"end": 28055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28061,
											"end": 28410,
											"name": "tag",
											"source": 18,
											"value": "284"
										},
										{
											"begin": 28061,
											"end": 28410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28130,
											"end": 28136,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28179,
											"end": 28181,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 28167,
											"end": 28176,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28158,
											"end": 28165,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28154,
											"end": 28177,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 28150,
											"end": 28182,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 28147,
											"end": 28266,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 28147,
											"end": 28266,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "730"
										},
										{
											"begin": 28147,
											"end": 28266,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 28185,
											"end": 28264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 28185,
											"end": 28264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 28185,
											"end": 28264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28185,
											"end": 28264,
											"name": "tag",
											"source": 18,
											"value": "731"
										},
										{
											"begin": 28185,
											"end": 28264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28147,
											"end": 28266,
											"name": "tag",
											"source": 18,
											"value": "730"
										},
										{
											"begin": 28147,
											"end": 28266,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28305,
											"end": 28306,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28330,
											"end": 28393,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 28385,
											"end": 28392,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28376,
											"end": 28382,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28365,
											"end": 28374,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 28361,
											"end": 28383,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28330,
											"end": 28393,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 28330,
											"end": 28393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28330,
											"end": 28393,
											"name": "tag",
											"source": 18,
											"value": "732"
										},
										{
											"begin": 28330,
											"end": 28393,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28320,
											"end": 28393,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28320,
											"end": 28393,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28276,
											"end": 28403,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28061,
											"end": 28410,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28061,
											"end": 28410,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 28061,
											"end": 28410,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28061,
											"end": 28410,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28061,
											"end": 28410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28416,
											"end": 28748,
											"name": "tag",
											"source": 18,
											"value": "326"
										},
										{
											"begin": 28416,
											"end": 28748,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28537,
											"end": 28541,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28575,
											"end": 28577,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 28564,
											"end": 28573,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 28560,
											"end": 28578,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28552,
											"end": 28578,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 28552,
											"end": 28578,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28588,
											"end": 28659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 28656,
											"end": 28657,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28645,
											"end": 28654,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28641,
											"end": 28658,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28632,
											"end": 28638,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 28588,
											"end": 28659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 28588,
											"end": 28659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28588,
											"end": 28659,
											"name": "tag",
											"source": 18,
											"value": "734"
										},
										{
											"begin": 28588,
											"end": 28659,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28669,
											"end": 28741,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "735"
										},
										{
											"begin": 28737,
											"end": 28739,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 28726,
											"end": 28735,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 28722,
											"end": 28740,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 28713,
											"end": 28719,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 28669,
											"end": 28741,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 28669,
											"end": 28741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28669,
											"end": 28741,
											"name": "tag",
											"source": 18,
											"value": "735"
										},
										{
											"begin": 28669,
											"end": 28741,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28416,
											"end": 28748,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 28416,
											"end": 28748,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 28416,
											"end": 28748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28416,
											"end": 28748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28416,
											"end": 28748,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 28416,
											"end": 28748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 28754,
											"end": 28934,
											"name": "tag",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 28754,
											"end": 28934,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 28802,
											"end": 28879,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28799,
											"end": 28800,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28792,
											"end": 28880,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28899,
											"end": 28903,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 28896,
											"end": 28897,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 28889,
											"end": 28904,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 28923,
											"end": 28927,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 28920,
											"end": 28921,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 28913,
											"end": 28928,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/SimpleNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addToWhitelist(address)": "e43252d7",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getMsgSender()": "7a6ce2e1",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintNFT((uint256,address,string)[])": "5f6c96a0",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"badgeID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMsgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"badgeID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"internalType\":\"struct SimpleNFT.BadgeInfo[]\",\"name\":\"badges\",\"type\":\"tuple[]\"}],\"name\":\"mintNFT\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"badgeID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"internalType\":\"struct SimpleNFT.BadgeTokenPair[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleNFT.sol\":\"SimpleNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/SimpleNFT.sol\":{\"keccak256\":\"0x3253f52270ef38a5c0f035b53bac52b35371f9431124cda2b139f08c5eae26bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51b055ad1477b712f47b950326349645574d9ad280470f35dc1b1c242b30da6b\",\"dweb:/ipfs/QmXEvtW89vTeuWz4FLLUa4v2hsXk7nekZypn2ssVp4u3Q9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1488,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3177,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "whitelist",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 3180,
								"contract": "contracts/SimpleNFT.sol:SimpleNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(Counter)1642_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1642_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1641,
										"contract": "contracts/SimpleNFT.sol:SimpleNFT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1636
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1637,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1636,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1636,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1636
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2002,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2001,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2001,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2001,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								2001
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1636
						],
						"ERC165": [
							1989
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							2001
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1614
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1965
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1615,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1614,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1637,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1636,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1966,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1965,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1990,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2001,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1989,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1636,
										"src": "804:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1989,
										"src": "813:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "821:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1614,
										"src": "830:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1614,
								1442,
								1989,
								2001,
								1636
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1965,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1325,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1988,
										2000
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1614_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1614",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1988,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1989,
												"src": "1637:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2001,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1325,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1325,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2257:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2274:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2267:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1325,
									"src": "2185:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1599
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2425:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2442:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2435:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2410:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:5"
									},
									"scope": 1325,
									"src": "2365:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2580:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2590:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2565:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:5"
									},
									"scope": 1325,
									"src": "2518:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1613
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2756:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2780:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2766:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2799:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2823:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2856:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2901:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1778,
																	"src": "2901:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2843:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2695:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2741:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:5"
									},
									"scope": 1325,
									"src": "2677:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3240:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3250:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3225:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:5"
									},
									"scope": 1325,
									"src": "3174:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3384:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3403:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3416:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3394:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3340:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3352:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:5"
									},
									"scope": 1325,
									"src": "3323:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3573:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3583:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3636:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3623:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3616:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3564:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:5"
									},
									"scope": 1325,
									"src": "3497:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3793:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "3822:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3836:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3846:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3803:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3745:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3763:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:5"
									},
									"scope": 1325,
									"src": "3718:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4022:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4039:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4058:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4065:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4032:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3954:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3969:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4016:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:5"
									},
									"scope": 1325,
									"src": "3928:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4223:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4233:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4255:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4269:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4538:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4570:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4574:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "4583:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4562:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4627:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4606:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4633:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4675:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4681:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4690:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4647:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4165:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4179:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:5"
									},
									"scope": 1325,
									"src": "4143:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4863:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4890:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4896:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4900:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4873:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:5"
									},
									"scope": 1325,
									"src": "4787:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5088:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5111:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5117:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5121:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5098:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5168:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5172:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5181:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5139:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5011:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5025:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5037:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5054:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:5"
									},
									"scope": 1325,
									"src": "4985:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5782:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5799:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5792:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5725:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5773:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:5"
									},
									"scope": 1325,
									"src": "5707:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6017:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6034:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6050:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6027:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5960:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6008:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:5"
									},
									"scope": 1325,
									"src": "5938:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6485:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6552:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6561:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6589:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6596:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6572:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6621:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6608:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6633:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6495:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6399:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6414:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6431:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6479:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:5"
									},
									"scope": 1325,
									"src": "6376:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7179:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7208:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7215:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7224:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7194:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7189:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7234:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7252:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7350:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7402:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7411:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7248:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7273:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7321:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7108:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7123:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7140:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:5"
									},
									"scope": 1325,
									"src": "7082:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8167:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8201:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8211:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8118:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8135:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:5"
									},
									"scope": 1325,
									"src": "8092:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8933:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8943:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8967:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8958:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9035:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9031:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9055:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9086:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9092:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9098:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9069:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9161:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9157:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9181:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9298:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9277:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9368:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9378:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9427:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9423:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9445:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9487:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9497:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9540:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9548:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9559:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9586:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9596:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9577:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9572:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9622:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9615:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8867:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8884:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8924:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:5"
									},
									"scope": 1325,
									"src": "8838:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10008:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10022:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10018:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10040:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10054:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10114:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10146:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10150:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10138:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10184:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10180:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10213:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10227:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9970:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:5"
									},
									"scope": 1325,
									"src": "9955:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10690:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10710:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10700:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:5"
									},
									"scope": 1325,
									"src": "10633:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11038:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11054:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11058:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11048:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11111:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11115:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11124:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11076:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10973:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10985:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11002:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:5"
									},
									"scope": 1325,
									"src": "10954:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11503:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11513:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11557:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11591:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11587:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11620:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11664:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11634:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11477:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:5"
									},
									"scope": 1325,
									"src": "11462:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12084:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12098:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12094:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12116:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12130:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12190:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12222:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12226:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12214:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12260:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12362:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12379:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12358:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12385:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12427:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12433:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12442:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12399:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12256:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12289:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12333:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12303:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12032:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12046:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12058:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:5"
									},
									"scope": 1325,
									"src": "12013:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13481:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13511:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13515:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13491:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13429:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13443:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:5"
									},
									"scope": 1325,
									"src": "13406:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13873:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13899:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13944:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13950:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13954:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13921:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13794:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13808:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13820:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13837:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:5"
									},
									"scope": 1325,
									"src": "13771:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14488:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14507:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14511:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14520:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14498:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14436:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14448:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14465:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:5"
									},
									"scope": 1325,
									"src": "14418:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14814:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14880:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14893:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14876:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14913:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14927:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14957:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14943:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15093:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15115:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15124:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15150:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15157:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15133:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15089:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15164:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15211:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15245:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15260:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15292:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15299:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15303:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15283:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15346:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15362:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15373:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14738:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14781:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:5"
									},
									"scope": 1325,
									"src": "14720:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15684:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15698:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15694:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15722:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15765:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15736:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15794:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15813:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15820:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15832:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15877:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15887:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15855:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15850:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15619:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15634:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15652:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:5"
									},
									"scope": 1325,
									"src": "15591:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16210:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16220:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16236:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16267:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16263:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16288:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16332:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16302:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16360:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16161:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16201:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:5"
									},
									"scope": 1325,
									"src": "16138:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17020:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17034:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17030:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17054:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17168:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17190:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17200:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17200:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17186:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17243:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17294:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17153:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:5"
																	},
																	"src": "17144:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17359:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17381:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17480:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:5",
																								"nodeType": "YulBlock",
																								"src": "17566:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:5"
																													},
																													"nativeSrc": "17599:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:5"
																													},
																													"nativeSrc": "17616:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:5"
																											},
																											"nativeSrc": "17592:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:5"
																										},
																										"nativeSrc": "17592:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17377:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17401:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17452:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17338:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:5"
																	},
																	"src": "17331:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "17109:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17123:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17129:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17138:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17088:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17072:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17072:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17068:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16950:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16964:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16976:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16993:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:5"
									},
									"scope": 1325,
									"src": "16918:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "776:16926:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17596:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 2002,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2001,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2001,
										"src": "287:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								2001
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1442,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1442,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1860:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1874:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1886:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1903:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:6"
									},
									"scope": 1442,
									"src": "1834:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2675:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2689:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2701:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1442,
									"src": "2649:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3492:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3506:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:6"
									},
									"scope": 1442,
									"src": "3470:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4024:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4036:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:6"
									},
									"scope": 1442,
									"src": "4007:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4415:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4433:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:6"
									},
									"scope": 1442,
									"src": "4388:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4628:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4668:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:6"
									},
									"scope": 1442,
									"src": "4607:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4861:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4876:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4917:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:6"
									},
									"scope": 1442,
									"src": "4835:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "266:4659:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4818:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "867:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "915:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "940:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "984:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:7"
									},
									"scope": 1460,
									"src": "832:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "295:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							2001
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1965
						]
					},
					"id": 1587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1326,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1966,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1965,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 176,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1467,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 152,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1469,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2001,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1472,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:8"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:8"
								},
								{
									"baseName": {
										"id": 1474,
										"name": "ERC721",
										"nameLocations": [
											"479:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "479:6:8"
									},
									"id": 1475,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1471,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1586,
							"linearizedBaseContracts": [
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1989,
								2001,
								1636
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1478,
									"libraryName": {
										"id": 1476,
										"name": "Strings",
										"nameLocations": [
											"498:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1965,
										"src": "498:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:8",
									"typeName": {
										"id": 1477,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1484,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "706:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1479,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1482,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1481,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1480,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:8",
												"typeDescriptions": {}
											}
										},
										"id": 1483,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1488,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1586,
									"src": "817:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1487,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:8",
										"keyType": {
											"id": 1485,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1486,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										2000
									],
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "1045:99:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1499,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "1062:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1500,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "1077:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "1125:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1502,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1101:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1507,
												"nodeType": "Return",
												"src": "1055:82:8"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1493,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1013:6:8"
											},
											{
												"id": 1494,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2001,
												"src": "1021:7:8"
											}
										],
										"src": "1004:25:8"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "964:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1039:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:8"
									},
									"scope": 1586,
									"src": "937:207:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1565,
										"nodeType": "Block",
										"src": "1298:505:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1322:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1308:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:8"
											},
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1341:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"baseExpression": {
														"id": 1524,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "1367:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1526,
													"indexExpression": {
														"id": 1525,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "1378:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:8"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1565,
														"src": "1396:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1528,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1530,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1417:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1535,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "1506:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1533,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "1496:70:8",
												"trueBody": {
													"id": 1542,
													"nodeType": "Block",
													"src": "1525:41:8",
													"statements": [
														{
															"expression": {
																"id": 1540,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "1546:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1541,
															"nodeType": "Return",
															"src": "1539:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1546,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "1671:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "1661:95:8",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "1694:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1554,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1529,
																		"src": "1729:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1555,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "1735:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1551,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1517,
															"id": 1557,
															"nodeType": "Return",
															"src": "1708:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "1788:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1560,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1586_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1773:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1564,
												"nodeType": "Return",
												"src": "1766:30:8"
											}
										]
									},
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1514,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:8"
									},
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1228:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1283:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:8"
									},
									"scope": 1586,
									"src": "1210:593:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "2003:86:8",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1574,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "2013:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1576,
														"indexExpression": {
															"id": 1575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2024:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1577,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "2035:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "2074:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "EmitStatement",
												"src": "2054:28:8"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1944:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1961:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:8"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:8"
									},
									"scope": 1586,
									"src": "1922:167:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1587,
							"src": "431:1660:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1964:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1614
						]
					},
					"id": 1615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1615,
							"sourceUnit": 1443,
							"src": "153:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1589,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1592,
										"name": "IERC721",
										"nameLocations": [
											"357:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:9"
									},
									"id": 1593,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1591,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1614,
							"linearizedBaseContracts": [
								1614,
								1442,
								2001
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:9"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "473:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:9"
									},
									"scope": 1614,
									"src": "434:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:9"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "600:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:9"
									},
									"scope": 1614,
									"src": "559:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "734:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:9"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "774:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:9"
									},
									"scope": 1614,
									"src": "716:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1615,
							"src": "328:463:9",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1636
						]
					},
					"id": 1637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1617,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1636,
							"linearizedBaseContracts": [
								1636
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1622,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1624,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1636,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1631,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1633,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1636,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1637,
							"src": "624:235:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1710
						]
					},
					"id": 1711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1639,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:11",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1710,
							"linearizedBaseContracts": [
								1710
							],
							"name": "Counters",
							"nameLocation": "432:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1642,
									"members": [
										{
											"constant": false,
											"id": 1641,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1642,
											"src": "786:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1640,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:11",
									"nodeType": "StructDefinition",
									"scope": 1710,
									"src": "447:374:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "901:38:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1650,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "918:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:11",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1641,
													"src": "918:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1649,
												"id": 1652,
												"nodeType": "Return",
												"src": "911:21:11"
											}
										]
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "844:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1643,
														"name": "Counter",
														"nameLocations": [
															"844:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1642,
														"src": "844:7:11"
													},
													"referencedDeclaration": 1642,
													"src": "844:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:11"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "892:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:11"
									},
									"scope": 1710,
									"src": "827:112:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "998:70:11",
										"statements": [
											{
												"id": 1666,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:11",
												"statements": [
													{
														"expression": {
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1660,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "1032:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:11",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1641,
																"src": "1032:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1665,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:11"
													}
												]
											}
										]
									},
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "964:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1655,
														"name": "Counter",
														"nameLocations": [
															"964:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1642,
														"src": "964:7:11"
													},
													"referencedDeclaration": 1642,
													"src": "964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:11"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:11"
									},
									"scope": 1710,
									"src": "945:123:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "1127:176:11",
										"statements": [
											{
												"assignments": [
													1675
												],
												"declarations": [
													{
														"constant": false,
														"id": 1675,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1695,
														"src": "1137:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1678,
												"initialValue": {
													"expression": {
														"id": 1676,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "1153:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:11",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1641,
													"src": "1153:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1680,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "1185:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1679,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:11"
											},
											{
												"id": 1694,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:11",
												"statements": [
													{
														"expression": {
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1686,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "1260:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:11",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1641,
																"src": "1260:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "1277:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1693,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:11"
													}
												]
											}
										]
									},
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1093:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1669,
														"name": "Counter",
														"nameLocations": [
															"1093:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1642,
														"src": "1093:7:11"
													},
													"referencedDeclaration": 1642,
													"src": "1093:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:11"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:11"
									},
									"scope": 1710,
									"src": "1074:229:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "1358:35:11",
										"statements": [
											{
												"expression": {
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1702,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "1368:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:11",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1641,
														"src": "1368:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:11"
											}
										]
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "1324:23:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1698,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1697,
														"name": "Counter",
														"nameLocations": [
															"1324:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1642,
														"src": "1324:7:11"
													},
													"referencedDeclaration": 1642,
													"src": "1324:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:11"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:11"
									},
									"scope": 1710,
									"src": "1309:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1711,
							"src": "424:971:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3055
						],
						"SignedMath": [
							3160
						],
						"Strings": [
							1965
						]
					},
					"id": 1966,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1966,
							"sourceUnit": 3056,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1713,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3055,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1716,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1966,
							"sourceUnit": 3161,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1715,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3160,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1717,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1965,
							"linearizedBaseContracts": [
								1965
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1720,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1965,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1718,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1719,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1723,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1965,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1721,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1722,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1730,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1776,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1739
														],
														"declarations": [
															{
																"constant": false,
																"id": 1739,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1776,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1746,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1742,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1740,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3055,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3055_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2875,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1748
														],
														"declarations": [
															{
																"constant": false,
																"id": 1748,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1776,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1747,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1753,
														"initialValue": {
															"arguments": [
																{
																	"id": 1751,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1749,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1755
														],
														"declarations": [
															{
																"constant": false,
																"id": 1755,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1776,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1754,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1756,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1748,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1739,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1755,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1757,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1772,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1759,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1755,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1761,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1720,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1755,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1733,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1762,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1763,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1766,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1767,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1771,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1770,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1773,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1774,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1737,
														"id": 1775,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1735,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1965,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1789,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1798,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1781,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1796,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3160_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3159,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1795,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1786,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1785,
												"id": 1802,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1780,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1783,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1965,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1822,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1813,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1807,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1816,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1807,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1814,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3055,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3055_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2997,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1812,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1824,
																	1907,
																	1927
																],
																"referencedDeclaration": 1907,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1811,
														"id": 1821,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1809,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1965,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1834,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1837,
												"initialValue": {
													"id": 1836,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1827,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1839
												],
												"declarations": [
													{
														"constant": false,
														"id": 1839,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1838,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1848,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1843,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1840,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1849,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1851,
														"indexExpression": {
															"hexValue": "30",
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1855,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1857,
														"indexExpression": {
															"hexValue": "31",
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1889,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1875,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1877,
																	"indexExpression": {
																		"id": 1876,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1862,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1878,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1882,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1879,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1835,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1884,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1885,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1888,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1869,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1890,
												"initializationExpression": {
													"assignments": [
														1862
													],
													"declarations": [
														{
															"constant": false,
															"id": 1862,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1890,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1861,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1868,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1864,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1872,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1874,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1891,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1900,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1899,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1895,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1827,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1896,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1894,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1898,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1903,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1901,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1833,
												"id": 1905,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1831,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1965,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1920,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1910,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1918,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1916,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1923,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1915,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1824,
															1907,
															1927
														],
														"referencedDeclaration": 1907,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1914,
												"id": 1925,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1912,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1965,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1937,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1944,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1942,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1951,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1930,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1949,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1948,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1957,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1932,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1955,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1954,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1936,
												"id": 1962,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1929,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1965,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1966,
							"src": "251:2847:12",
							"usedErrors": [
								1730
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1989
						],
						"IERC165": [
							2001
						]
					},
					"id": 1990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1967,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1969,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1990,
							"sourceUnit": 2002,
							"src": "140:38:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1968,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2001,
										"src": "148:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1971,
										"name": "IERC165",
										"nameLocations": [
											"687:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2001,
										"src": "687:7:13"
									},
									"id": 1972,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1970,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1989,
							"linearizedBaseContracts": [
								1989,
								2001
							],
							"name": "ERC165",
							"nameLocation": "677:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2000
									],
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "844:64:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1980,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "861:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1982,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2001,
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2001_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2001_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1981,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2001",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:13",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1979,
												"id": 1986,
												"nodeType": "Return",
												"src": "854:47:13"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "789:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:13"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "838:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:13"
									},
									"scope": 1989,
									"src": "762:146:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1990,
							"src": "659:251:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2001
						]
					},
					"id": 2002,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1991,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1992,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:14",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2001,
							"linearizedBaseContracts": [
								2001
							],
							"name": "IERC165",
							"nameLocation": "431:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:14",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "817:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1994,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:14"
									},
									"returnParameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "860:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:14"
									},
									"scope": 2001,
									"src": "790:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2002,
							"src": "421:447:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3055
						]
					},
					"id": 3056,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2003,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2004,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:15",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3055,
							"linearizedBaseContracts": [
								3055
							],
							"name": "Math",
							"nameLocation": "211:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:15",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2007,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:15"
									},
									"src": "277:29:15"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2012,
									"members": [
										{
											"id": 2008,
											"name": "Floor",
											"nameLocation": "336:5:15",
											"nodeType": "EnumValue",
											"src": "336:5:15"
										},
										{
											"id": 2009,
											"name": "Ceil",
											"nameLocation": "379:4:15",
											"nodeType": "EnumValue",
											"src": "379:4:15"
										},
										{
											"id": 2010,
											"name": "Trunc",
											"nameLocation": "421:5:15",
											"nodeType": "EnumValue",
											"src": "421:5:15"
										},
										{
											"id": 2011,
											"name": "Expand",
											"nameLocation": "451:6:15",
											"nodeType": "EnumValue",
											"src": "451:6:15"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:15",
									"nodeType": "EnumDefinition",
									"src": "312:169:15"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "661:140:15",
										"statements": [
											{
												"id": 2042,
												"nodeType": "UncheckedBlock",
												"src": "671:124:15",
												"statements": [
													{
														"assignments": [
															2025
														],
														"declarations": [
															{
																"constant": false,
																"id": 2025,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2042,
																"src": "695:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2024,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2029,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2026,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "707:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2027,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "711:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2030,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "730:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2031,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "734:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2037,
														"nodeType": "IfStatement",
														"src": "726:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2035,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2023,
															"id": 2036,
															"nodeType": "Return",
															"src": "737:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2039,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "782:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2040,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2023,
														"id": 2041,
														"nodeType": "Return",
														"src": "768:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:15",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "612:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:15"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "646:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "652:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:15"
									},
									"scope": 3055,
									"src": "585:216:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "984:113:15",
										"statements": [
											{
												"id": 2070,
												"nodeType": "UncheckedBlock",
												"src": "994:97:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2056,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2049,
																"src": "1022:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2057,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "1026:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2063,
														"nodeType": "IfStatement",
														"src": "1018:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2061,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2055,
															"id": 2062,
															"nodeType": "Return",
															"src": "1029:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2065,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2047,
																		"src": "1074:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2066,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "1078:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2068,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2055,
														"id": 2069,
														"nodeType": "Return",
														"src": "1060:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:15",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "924:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "935:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:15"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "969:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "975:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:15"
									},
									"scope": 3055,
									"src": "908:189:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "1283:417:15",
										"statements": [
											{
												"id": 2112,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2084,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "1551:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2091,
														"nodeType": "IfStatement",
														"src": "1547:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2089,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2083,
															"id": 2090,
															"nodeType": "Return",
															"src": "1559:16:15"
														}
													},
													{
														"assignments": [
															2093
														],
														"declarations": [
															{
																"constant": false,
																"id": 2093,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2112,
																"src": "1589:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2092,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2097,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2094,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "1601:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2095,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "1605:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2098,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2093,
																	"src": "1624:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2099,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "1628:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2101,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "1633:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2107,
														"nodeType": "IfStatement",
														"src": "1620:33:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2083,
															"id": 2106,
															"nodeType": "Return",
															"src": "1636:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2109,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2093,
																	"src": "1681:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2110,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2083,
														"id": 2111,
														"nodeType": "Return",
														"src": "1667:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2073,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:15",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "1223:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "1234:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:15"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "1268:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "1274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:15"
									},
									"scope": 3055,
									"src": "1207:493:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "1887:114:15",
										"statements": [
											{
												"id": 2140,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2126,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2119,
																"src": "1925:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2133,
														"nodeType": "IfStatement",
														"src": "1921:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2131,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2125,
															"id": 2132,
															"nodeType": "Return",
															"src": "1933:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2135,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "1978:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2136,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2119,
																		"src": "1982:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2138,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2125,
														"id": 2139,
														"nodeType": "Return",
														"src": "1964:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:15",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "1827:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "1838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:15"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "1872:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "1878:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:15"
									},
									"scope": 3055,
									"src": "1811:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "2198:114:15",
										"statements": [
											{
												"id": 2168,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2154,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "2236:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2161,
														"nodeType": "IfStatement",
														"src": "2232:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2159,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2153,
															"id": 2160,
															"nodeType": "Return",
															"src": "2244:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2163,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2145,
																		"src": "2289:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2164,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "2293:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2166,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2153,
														"id": 2167,
														"nodeType": "Return",
														"src": "2275:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:15",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "2138:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "2149:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:15"
									},
									"returnParameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "2183:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "2189:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:15"
									},
									"scope": 3055,
									"src": "2122:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2187,
										"nodeType": "Block",
										"src": "2449:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2180,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "2466:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2181,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "2470:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2184,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2175,
														"src": "2478:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:15",
													"trueExpression": {
														"id": 2183,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2173,
														"src": "2474:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2179,
												"id": 2186,
												"nodeType": "Return",
												"src": "2459:20:15"
											}
										]
									},
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:15",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "2395:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "2406:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:15"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2188,
												"src": "2440:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:15"
									},
									"scope": 3055,
									"src": "2382:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "2624:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2198,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "2641:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2199,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2193,
															"src": "2645:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2202,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2193,
														"src": "2653:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:15",
													"trueExpression": {
														"id": 2201,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2191,
														"src": "2649:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2197,
												"id": 2204,
												"nodeType": "Return",
												"src": "2634:20:15"
											}
										]
									},
									"documentation": {
										"id": 2189,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:15",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "2570:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "2581:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:15"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "2615:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:15"
									},
									"scope": 3055,
									"src": "2557:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "2845:82:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2216,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2209,
																	"src": "2900:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2217,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "2904:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2219,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2220,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "2910:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2221,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2211,
																		"src": "2914:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2223,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2215,
												"id": 2227,
												"nodeType": "Return",
												"src": "2892:28:15"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:15",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "2791:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "2802:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:15"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "2836:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:15"
									},
									"scope": 3055,
									"src": "2774:153:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "3219:260:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2239,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "3233:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2247,
												"nodeType": "IfStatement",
												"src": "3229:127:15",
												"trueBody": {
													"id": 2246,
													"nodeType": "Block",
													"src": "3241:115:15",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2242,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "3340:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2243,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "3344:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2238,
															"id": 2245,
															"nodeType": "Return",
															"src": "3333:12:15"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2248,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "3444:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2252,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "3458:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2256,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "3467:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:15",
													"trueExpression": {
														"hexValue": "30",
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2238,
												"id": 2261,
												"nodeType": "Return",
												"src": "3437:35:15"
											}
										]
									},
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:15",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3165:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3176:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:15"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:15"
									},
									"scope": 3055,
									"src": "3148:331:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "3901:4018:15",
										"statements": [
											{
												"id": 2387,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:15",
												"statements": [
													{
														"assignments": [
															2276
														],
														"declarations": [
															{
																"constant": false,
																"id": 2276,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2387,
																"src": "4232:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2275,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2280,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2277,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "4248:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2278,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "4252:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:15"
													},
													{
														"assignments": [
															2282
														],
														"declarations": [
															{
																"constant": false,
																"id": 2282,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2387,
																"src": "4312:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2283,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:15"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:15",
															"nodeType": "YulBlock",
															"src": "4392:122:15",
															"statements": [
																{
																	"nativeSrc": "4410:30:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:15"
																				},
																				"nativeSrc": "4433:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:15"
																		},
																		"nativeSrc": "4420:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:15"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:15",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:15",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:15"
																				},
																				"nativeSrc": "4470:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:15"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:15"
																				},
																				"nativeSrc": "4486:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:15"
																		},
																		"nativeSrc": "4466:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2266,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2268,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:15",
																"valueSize": 1
															}
														],
														"id": 2284,
														"nodeType": "InlineAssembly",
														"src": "4383:131:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2285,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "4595:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2293,
														"nodeType": "IfStatement",
														"src": "4591:368:15",
														"trueBody": {
															"id": 2292,
															"nodeType": "Block",
															"src": "4607:352:15",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2288,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "4925:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2289,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2270,
																			"src": "4933:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2274,
																	"id": 2291,
																	"nodeType": "Return",
																	"src": "4918:26:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2294,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "5065:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2295,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "5080:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2301,
														"nodeType": "IfStatement",
														"src": "5061:88:15",
														"trueBody": {
															"id": 2300,
															"nodeType": "Block",
															"src": "5087:62:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2297,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2007,
																			"src": "5112:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2299,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:15"
																}
															]
														}
													},
													{
														"assignments": [
															2303
														],
														"declarations": [
															{
																"constant": false,
																"id": 2303,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:15",
																"nodeType": "VariableDeclaration",
																"scope": 2387,
																"src": "5404:17:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2302,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2304,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:15"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:15",
															"nodeType": "YulBlock",
															"src": "5444:291:15",
															"statements": [
																{
																	"nativeSrc": "5513:38:15",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:15"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:15"
																		},
																		"nativeSrc": "5526:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:15"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:15",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:15",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:15"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:15"
																				},
																				"nativeSrc": "5653:20:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:15"
																		},
																		"nativeSrc": "5642:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:15",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:15"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:15"
																		},
																		"nativeSrc": "5700:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2270,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2282,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2303,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2303,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2303,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2266,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2268,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:15",
																"valueSize": 1
															}
														],
														"id": 2305,
														"nodeType": "InlineAssembly",
														"src": "5435:300:15"
													},
													{
														"assignments": [
															2307
														],
														"declarations": [
															{
																"constant": false,
																"id": 2307,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 2387,
																"src": "5939:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2306,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2314,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2308,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "5954:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2310,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2270,
																			"src": "5973:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2312,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:15"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:15",
															"nodeType": "YulBlock",
															"src": "6008:362:15",
															"statements": [
																{
																	"nativeSrc": "6073:37:15",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:15"
																		},
																		"nativeSrc": "6088:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:15"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:15",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:15"
																		},
																		"nativeSrc": "6186:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:15",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:15",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:15"
																						},
																						"nativeSrc": "6333:12:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:15"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:15"
																				},
																				"nativeSrc": "6329:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:15"
																		},
																		"nativeSrc": "6325:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:15"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2270,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2270,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2276,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2307,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2307,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2307,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2307,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2307,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:15",
																"valueSize": 1
															}
														],
														"id": 2315,
														"nodeType": "InlineAssembly",
														"src": "5999:371:15"
													},
													{
														"expression": {
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2316,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "6436:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2317,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "6445:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2318,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2307,
																	"src": "6453:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2321,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:15"
													},
													{
														"assignments": [
															2323
														],
														"declarations": [
															{
																"constant": false,
																"id": 2323,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 2387,
																"src": "6775:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2322,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2330,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2325,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2270,
																			"src": "6798:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2327,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:15"
													},
													{
														"expression": {
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2331,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "7031:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2333,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "7046:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2334,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "7060:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2338,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:15"
													},
													{
														"expression": {
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2339,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "7100:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2341,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "7115:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2342,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "7129:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2346,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:15"
													},
													{
														"expression": {
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2347,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "7170:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2349,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "7185:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2350,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "7199:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2354,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:15"
													},
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2355,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "7240:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2357,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "7255:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2358,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "7269:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:15"
													},
													{
														"expression": {
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2363,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "7310:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2365,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "7325:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2366,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "7339:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2370,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:15"
													},
													{
														"expression": {
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2371,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "7381:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2373,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "7396:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2374,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "7410:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2378,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:15"
													},
													{
														"expression": {
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2379,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2273,
																"src": "7851:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2380,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2276,
																	"src": "7860:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2381,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "7868:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2384,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:15"
													},
													{
														"expression": {
															"id": 2385,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "7896:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2274,
														"id": 2386,
														"nodeType": "Return",
														"src": "7889:13:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:15",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "3819:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "3830:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "3841:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:15"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "3885:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:15"
									},
									"scope": 3055,
									"src": "3803:4116:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2431,
										"nodeType": "Block",
										"src": "8161:192:15",
										"statements": [
											{
												"assignments": [
													2405
												],
												"declarations": [
													{
														"constant": false,
														"id": 2405,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2431,
														"src": "8171:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2404,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2411,
												"initialValue": {
													"arguments": [
														{
															"id": 2407,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "8195:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2408,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2394,
															"src": "8198:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2409,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "8201:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2406,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2389,
															2432
														],
														"referencedDeclaration": 2389,
														"src": "8188:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2413,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "8244:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2012",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2012",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2412,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3054,
															"src": "8227:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2012_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2416,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "8264:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2417,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "8267:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2418,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "8270:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2415,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2428,
												"nodeType": "IfStatement",
												"src": "8223:101:15",
												"trueBody": {
													"id": 2427,
													"nodeType": "Block",
													"src": "8288:36:15",
													"statements": [
														{
															"expression": {
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2423,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2405,
																	"src": "8302:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2426,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2429,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2405,
													"src": "8340:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2403,
												"id": 2430,
												"nodeType": "Return",
												"src": "8333:13:15"
											}
										]
									},
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:15",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "8067:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "8078:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "8089:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "8110:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2012",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2398,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2397,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2012,
														"src": "8110:8:15"
													},
													"referencedDeclaration": 2012,
													"src": "8110:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2012",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:15"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2432,
												"src": "8152:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:15"
									},
									"scope": 3055,
									"src": "8051:302:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2543,
										"nodeType": "Block",
										"src": "8644:1585:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2440,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "8658:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2446,
												"nodeType": "IfStatement",
												"src": "8654:45:15",
												"trueBody": {
													"id": 2445,
													"nodeType": "Block",
													"src": "8666:33:15",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2439,
															"id": 2444,
															"nodeType": "Return",
															"src": "8680:8:15"
														}
													]
												}
											},
											{
												"assignments": [
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2448,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2543,
														"src": "9378:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2447,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2457,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2451,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "9406:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2450,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2711,
																			2746
																		],
																		"referencedDeclaration": 2711,
																		"src": "9401:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2455,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:15"
											},
											{
												"id": 2542,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:15",
												"statements": [
													{
														"expression": {
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "9839:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2459,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "9849:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2460,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "9858:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2461,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2448,
																					"src": "9862:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2464,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2468,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:15"
													},
													{
														"expression": {
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2469,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "9888:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2470,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "9898:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2471,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "9907:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2472,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2448,
																					"src": "9911:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2475,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2479,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:15"
													},
													{
														"expression": {
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2480,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "9937:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2481,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "9947:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2482,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "9956:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2483,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2448,
																					"src": "9960:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2486,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2490,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:15"
													},
													{
														"expression": {
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2491,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "9986:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2492,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "9996:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2493,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "10005:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2494,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2448,
																					"src": "10009:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2497,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2501,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:15"
													},
													{
														"expression": {
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2502,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10035:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2503,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "10045:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2504,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "10054:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2505,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2448,
																					"src": "10058:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2512,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:15"
													},
													{
														"expression": {
															"id": 2522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2513,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10084:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2514,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "10094:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2515,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "10103:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2516,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2448,
																					"src": "10107:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2519,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2523,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:15"
													},
													{
														"expression": {
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2524,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2448,
																"src": "10133:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2525,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2448,
																				"src": "10143:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2526,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "10152:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2527,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2448,
																					"src": "10156:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2530,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2534,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2536,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "10193:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2537,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2435,
																		"src": "10201:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2538,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2448,
																		"src": "10205:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2535,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "10189:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2439,
														"id": 2541,
														"nodeType": "Return",
														"src": "10182:30:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2433,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:15",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "8601:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:15"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2544,
												"src": "8635:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:15"
									},
									"scope": 3055,
									"src": "8587:1642:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "10405:164:15",
										"statements": [
											{
												"id": 2577,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:15",
												"statements": [
													{
														"assignments": [
															2556
														],
														"declarations": [
															{
																"constant": false,
																"id": 2556,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2577,
																"src": "10439:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2555,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2560,
														"initialValue": {
															"arguments": [
																{
																	"id": 2558,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "10461:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2557,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2544,
																	2579
																],
																"referencedDeclaration": 2544,
																"src": "10456:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2561,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2556,
																"src": "10484:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2563,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2550,
																						"src": "10511:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2012",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2012",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2562,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3054,
																					"src": "10494:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2012_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2565,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2556,
																						"src": "10524:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2566,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2556,
																						"src": "10533:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2568,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2547,
																					"src": "10542:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2554,
														"id": 2576,
														"nodeType": "Return",
														"src": "10477:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2545,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:15",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "10343:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "10354:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2012",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2549,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2548,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2012,
														"src": "10354:8:15"
													},
													"referencedDeclaration": 2012,
													"src": "10354:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2012",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:15"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "10396:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:15"
									},
									"scope": 3055,
									"src": "10329:240:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2710,
										"nodeType": "Block",
										"src": "10760:922:15",
										"statements": [
											{
												"assignments": [
													2588
												],
												"declarations": [
													{
														"constant": false,
														"id": 2588,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2710,
														"src": "10770:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2590,
												"initialValue": {
													"hexValue": "30",
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:15"
											},
											{
												"id": 2707,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "10826:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2605,
														"nodeType": "IfStatement",
														"src": "10822:99:15",
														"trueBody": {
															"id": 2604,
															"nodeType": "Block",
															"src": "10844:77:15",
															"statements": [
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2596,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "10862:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:15"
																},
																{
																	"expression": {
																		"id": 2602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "10893:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2603,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2606,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "10938:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2620,
														"nodeType": "IfStatement",
														"src": "10934:96:15",
														"trueBody": {
															"id": 2619,
															"nodeType": "Block",
															"src": "10955:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2611,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "10973:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2614,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:15"
																},
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "11003:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2621,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "11047:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2635,
														"nodeType": "IfStatement",
														"src": "11043:96:15",
														"trueBody": {
															"id": 2634,
															"nodeType": "Block",
															"src": "11064:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2626,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "11082:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2629,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:15"
																},
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "11112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "11156:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2650,
														"nodeType": "IfStatement",
														"src": "11152:96:15",
														"trueBody": {
															"id": 2649,
															"nodeType": "Block",
															"src": "11173:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "11191:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2644,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:15"
																},
																{
																	"expression": {
																		"id": 2647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2645,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "11221:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2648,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "11265:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2665,
														"nodeType": "IfStatement",
														"src": "11261:93:15",
														"trueBody": {
															"id": 2664,
															"nodeType": "Block",
															"src": "11281:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2656,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "11299:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2659,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:15"
																},
																{
																	"expression": {
																		"id": 2662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "11328:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2663,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "11371:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2680,
														"nodeType": "IfStatement",
														"src": "11367:93:15",
														"trueBody": {
															"id": 2679,
															"nodeType": "Block",
															"src": "11387:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "11405:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2674,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:15"
																},
																{
																	"expression": {
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2675,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "11434:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2678,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "11477:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2695,
														"nodeType": "IfStatement",
														"src": "11473:93:15",
														"trueBody": {
															"id": 2694,
															"nodeType": "Block",
															"src": "11493:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2686,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "11511:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2689,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:15"
																},
																{
																	"expression": {
																		"id": 2692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2690,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "11540:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2693,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2696,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "11583:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2706,
														"nodeType": "IfStatement",
														"src": "11579:64:15",
														"trueBody": {
															"id": 2705,
															"nodeType": "Block",
															"src": "11599:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2701,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2588,
																			"src": "11617:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2704,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2708,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2588,
													"src": "11669:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2586,
												"id": 2709,
												"nodeType": "Return",
												"src": "11662:13:15"
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:15",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "10713:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:15"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "10751:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:15"
									},
									"scope": 3055,
									"src": "10699:983:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2745,
										"nodeType": "Block",
										"src": "11915:168:15",
										"statements": [
											{
												"id": 2744,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:15",
												"statements": [
													{
														"assignments": [
															2723
														],
														"declarations": [
															{
																"constant": false,
																"id": 2723,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2744,
																"src": "11949:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2722,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2727,
														"initialValue": {
															"arguments": [
																{
																	"id": 2725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2714,
																	"src": "11971:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2724,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2711,
																	2746
																],
																"referencedDeclaration": 2711,
																"src": "11966:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2728,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2723,
																"src": "11998:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2730,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2717,
																						"src": "12025:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2012",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2012",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2729,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3054,
																					"src": "12008:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2012_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2732,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2733,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2723,
																						"src": "12043:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2735,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2714,
																					"src": "12052:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2741,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2721,
														"id": 2743,
														"nodeType": "Return",
														"src": "11991:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2712,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:15",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "11849:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "11864:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2012",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2716,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2715,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2012,
														"src": "11864:8:15"
													},
													"referencedDeclaration": 2012,
													"src": "11864:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2012",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:15"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "11906:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:15"
									},
									"scope": 3055,
									"src": "11835:248:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2874,
										"nodeType": "Block",
										"src": "12276:854:15",
										"statements": [
											{
												"assignments": [
													2755
												],
												"declarations": [
													{
														"constant": false,
														"id": 2755,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2874,
														"src": "12286:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2757,
												"initialValue": {
													"hexValue": "30",
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:15"
											},
											{
												"id": 2871,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2758,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "12342:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2774,
														"nodeType": "IfStatement",
														"src": "12338:103:15",
														"trueBody": {
															"id": 2773,
															"nodeType": "Block",
															"src": "12361:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12379:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2768,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:15"
																},
																{
																	"expression": {
																		"id": 2771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2769,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "12414:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2772,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2775,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "12458:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2791,
														"nodeType": "IfStatement",
														"src": "12454:103:15",
														"trueBody": {
															"id": 2790,
															"nodeType": "Block",
															"src": "12477:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2780,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12495:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2785,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:15"
																},
																{
																	"expression": {
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2786,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "12530:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2789,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2792,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "12574:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2808,
														"nodeType": "IfStatement",
														"src": "12570:103:15",
														"trueBody": {
															"id": 2807,
															"nodeType": "Block",
															"src": "12593:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2797,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12611:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2802,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:15"
																},
																{
																	"expression": {
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2803,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "12646:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2806,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2809,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "12690:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2825,
														"nodeType": "IfStatement",
														"src": "12686:100:15",
														"trueBody": {
															"id": 2824,
															"nodeType": "Block",
															"src": "12708:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2814,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12726:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2817,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2819,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:15"
																},
																{
																	"expression": {
																		"id": 2822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2820,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "12760:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2823,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2826,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "12803:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2842,
														"nodeType": "IfStatement",
														"src": "12799:100:15",
														"trueBody": {
															"id": 2841,
															"nodeType": "Block",
															"src": "12821:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2831,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12839:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2836,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:15"
																},
																{
																	"expression": {
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2837,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "12873:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2840,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2843,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "12916:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2859,
														"nodeType": "IfStatement",
														"src": "12912:100:15",
														"trueBody": {
															"id": 2858,
															"nodeType": "Block",
															"src": "12934:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2749,
																			"src": "12952:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2853,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:15"
																},
																{
																	"expression": {
																		"id": 2856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2854,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "12986:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2857,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2860,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "13029:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2870,
														"nodeType": "IfStatement",
														"src": "13025:66:15",
														"trueBody": {
															"id": 2869,
															"nodeType": "Block",
															"src": "13047:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2865,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2755,
																			"src": "13065:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2868,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2872,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2755,
													"src": "13117:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2753,
												"id": 2873,
												"nodeType": "Return",
												"src": "13110:13:15"
											}
										]
									},
									"documentation": {
										"id": 2747,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:15",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "12229:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:15"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "12267:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:15"
									},
									"scope": 3055,
									"src": "12214:916:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2909,
										"nodeType": "Block",
										"src": "13365:170:15",
										"statements": [
											{
												"id": 2908,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:15",
												"statements": [
													{
														"assignments": [
															2887
														],
														"declarations": [
															{
																"constant": false,
																"id": 2887,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2908,
																"src": "13399:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2886,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2891,
														"initialValue": {
															"arguments": [
																{
																	"id": 2889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2878,
																	"src": "13422:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2888,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2875,
																	2910
																],
																"referencedDeclaration": 2875,
																"src": "13416:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2892,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "13449:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2894,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2881,
																						"src": "13476:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2012",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2012",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2893,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3054,
																					"src": "13459:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2012_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2898,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2896,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2897,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2887,
																						"src": "13495:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2899,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2878,
																					"src": "13504:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2905,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2885,
														"id": 2907,
														"nodeType": "Return",
														"src": "13442:76:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:15",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "13299:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "13314:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2012",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2880,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2879,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2012,
														"src": "13314:8:15"
													},
													"referencedDeclaration": 2012,
													"src": "13314:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2012",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:15"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "13356:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:15"
									},
									"scope": 3055,
									"src": "13284:251:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2996,
										"nodeType": "Block",
										"src": "13855:600:15",
										"statements": [
											{
												"assignments": [
													2919
												],
												"declarations": [
													{
														"constant": false,
														"id": 2919,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2996,
														"src": "13865:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2918,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2921,
												"initialValue": {
													"hexValue": "30",
													"id": 2920,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:15"
											},
											{
												"id": 2993,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "13921:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2936,
														"nodeType": "IfStatement",
														"src": "13917:98:15",
														"trueBody": {
															"id": 2935,
															"nodeType": "Block",
															"src": "13939:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2927,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2913,
																			"src": "13957:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2930,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:15"
																},
																{
																	"expression": {
																		"id": 2933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2931,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2919,
																			"src": "13988:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2934,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2937,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "14032:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2951,
														"nodeType": "IfStatement",
														"src": "14028:95:15",
														"trueBody": {
															"id": 2950,
															"nodeType": "Block",
															"src": "14049:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2942,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2913,
																			"src": "14067:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2945,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:15"
																},
																{
																	"expression": {
																		"id": 2948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2946,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2919,
																			"src": "14097:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2949,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2952,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "14140:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2955,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2966,
														"nodeType": "IfStatement",
														"src": "14136:95:15",
														"trueBody": {
															"id": 2965,
															"nodeType": "Block",
															"src": "14157:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2957,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2913,
																			"src": "14175:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2960,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:15"
																},
																{
																	"expression": {
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2961,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2919,
																			"src": "14205:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2964,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "14248:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2981,
														"nodeType": "IfStatement",
														"src": "14244:95:15",
														"trueBody": {
															"id": 2980,
															"nodeType": "Block",
															"src": "14265:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2913,
																			"src": "14283:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2975,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:15"
																},
																{
																	"expression": {
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2976,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2919,
																			"src": "14313:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2979,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "14356:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2992,
														"nodeType": "IfStatement",
														"src": "14352:64:15",
														"trueBody": {
															"id": 2991,
															"nodeType": "Block",
															"src": "14372:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2987,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2919,
																			"src": "14390:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2990,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2994,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2919,
													"src": "14442:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2917,
												"id": 2995,
												"nodeType": "Return",
												"src": "14435:13:15"
											}
										]
									},
									"documentation": {
										"id": 2911,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:15",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "13808:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:15"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2997,
												"src": "13846:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:15"
									},
									"scope": 3055,
									"src": "13792:663:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3034,
										"nodeType": "Block",
										"src": "14692:177:15",
										"statements": [
											{
												"id": 3033,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:15",
												"statements": [
													{
														"assignments": [
															3009
														],
														"declarations": [
															{
																"constant": false,
																"id": 3009,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 3033,
																"src": "14726:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3008,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3013,
														"initialValue": {
															"arguments": [
																{
																	"id": 3011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3000,
																	"src": "14750:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3010,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2997,
																	3035
																],
																"referencedDeclaration": 2997,
																"src": "14743:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3014,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3009,
																"src": "14777:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3016,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3003,
																						"src": "14804:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2012",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2012",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3015,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3054,
																					"src": "14787:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2012_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3023,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3018,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3021,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3019,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3009,
																									"src": "14823:6:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3020,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3022,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3024,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3000,
																					"src": "14838:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3007,
														"id": 3032,
														"nodeType": "Return",
														"src": "14770:82:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2998,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:15",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "14626:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "14641:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2012",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3002,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3001,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2012,
														"src": "14641:8:15"
													},
													"referencedDeclaration": 2012,
													"src": "14641:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2012",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:15"
									},
									"returnParameters": {
										"id": 3007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3035,
												"src": "14683:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:15"
									},
									"scope": 3055,
									"src": "14610:259:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3053,
										"nodeType": "Block",
										"src": "15067:48:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3046,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3039,
																	"src": "15090:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2012",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2012",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3044,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3043,
												"id": 3052,
												"nodeType": "Return",
												"src": "15077:31:15"
											}
										]
									},
									"documentation": {
										"id": 3036,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:15",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3054,
												"src": "15019:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2012",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3038,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3037,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2012,
														"src": "15019:8:15"
													},
													"referencedDeclaration": 2012,
													"src": "15019:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2012",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:15"
									},
									"returnParameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3054,
												"src": "15061:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:15"
									},
									"scope": 3055,
									"src": "14993:122:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3056,
							"src": "203:14914:15",
							"usedErrors": [
								2007
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3160
						]
					},
					"id": 3161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3057,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3058,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:16",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3160,
							"linearizedBaseContracts": [
								3160
							],
							"name": "SignedMath",
							"nameLocation": "224:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3075,
										"nodeType": "Block",
										"src": "376:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3068,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3061,
															"src": "393:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3069,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3063,
															"src": "397:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3072,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3063,
														"src": "405:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:16",
													"trueExpression": {
														"id": 3071,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3061,
														"src": "401:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3067,
												"id": 3074,
												"nodeType": "Return",
												"src": "386:20:16"
											}
										]
									},
									"documentation": {
										"id": 3059,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:16",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3061,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "325:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3060,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "335:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3062,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:16"
									},
									"returnParameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3076,
												"src": "368:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3065,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:16"
									},
									"scope": 3160,
									"src": "312:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3093,
										"nodeType": "Block",
										"src": "555:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3086,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3079,
															"src": "572:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3087,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3081,
															"src": "576:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3090,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "584:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:16",
													"trueExpression": {
														"id": 3089,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3079,
														"src": "580:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3085,
												"id": 3092,
												"nodeType": "Return",
												"src": "565:20:16"
											}
										]
									},
									"documentation": {
										"id": 3077,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:16",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "504:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3078,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "514:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3080,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:16"
									},
									"returnParameters": {
										"id": 3085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "547:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3083,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:16"
									},
									"scope": 3160,
									"src": "491:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3137,
										"nodeType": "Block",
										"src": "797:162:16",
										"statements": [
											{
												"assignments": [
													3105
												],
												"declarations": [
													{
														"constant": false,
														"id": 3105,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 3137,
														"src": "859:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3104,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3118,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3106,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3097,
																	"src": "871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3107,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3099,
																	"src": "875:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3109,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3110,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3097,
																				"src": "882:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3111,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3099,
																				"src": "886:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3113,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3116,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3119,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3105,
														"src": "911:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3124,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3105,
																						"src": "931:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3123,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3122,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3120,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3129,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3097,
																				"src": "945:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3130,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3099,
																				"src": "949:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3132,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3134,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3103,
												"id": 3136,
												"nodeType": "Return",
												"src": "904:48:16"
											}
										]
									},
									"documentation": {
										"id": 3095,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:16",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "746:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3096,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "756:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3098,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:16"
									},
									"returnParameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "789:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3101,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:16"
									},
									"scope": 3160,
									"src": "729:230:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3158,
										"nodeType": "Block",
										"src": "1103:158:16",
										"statements": [
											{
												"id": 3157,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3148,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3141,
																			"src": "1228:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:16",
																		"subExpression": {
																			"id": 3152,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3141,
																			"src": "1242:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:16",
																	"trueExpression": {
																		"id": 3151,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3141,
																		"src": "1237:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3146,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3145,
														"id": 3156,
														"nodeType": "Return",
														"src": "1213:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3139,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:16",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3141,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "1061:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:16"
									},
									"returnParameters": {
										"id": 3145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "1094:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:16"
									},
									"scope": 3160,
									"src": "1048:213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3161,
							"src": "216:1047:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:16"
				},
				"id": 16
			},
			"contracts/SimpleNFT.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleNFT.sol",
					"exportedSymbols": {
						"Context": [
							1636
						],
						"Counters": [
							1710
						],
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1586
						],
						"IERC165": [
							2001
						],
						"IERC4906": [
							175
						],
						"Ownable": [
							147
						],
						"SimpleNFT": [
							3345
						],
						"Strings": [
							1965
						]
					},
					"id": 3346,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3346,
							"sourceUnit": 1587,
							"src": "60:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3346,
							"sourceUnit": 1711,
							"src": "140:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3346,
							"sourceUnit": 148,
							"src": "194:52:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3166,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"272:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1586,
										"src": "272:16:17"
									},
									"id": 3167,
									"nodeType": "InheritanceSpecifier",
									"src": "272:16:17"
								},
								{
									"baseName": {
										"id": 3168,
										"name": "Ownable",
										"nameLocations": [
											"290:7:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "290:7:17"
									},
									"id": 3169,
									"nodeType": "InheritanceSpecifier",
									"src": "290:7:17"
								}
							],
							"canonicalName": "SimpleNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3345,
							"linearizedBaseContracts": [
								3345,
								147,
								1586,
								1325,
								269,
								1614,
								175,
								1442,
								1989,
								2001,
								1636
							],
							"name": "SimpleNFT",
							"nameLocation": "259:9:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3173,
									"libraryName": {
										"id": 3170,
										"name": "Counters",
										"nameLocations": [
											"311:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1710,
										"src": "311:8:17"
									},
									"nodeType": "UsingForDirective",
									"src": "305:36:17",
									"typeName": {
										"id": 3172,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3171,
											"name": "Counters.Counter",
											"nameLocations": [
												"324:8:17",
												"333:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1642,
											"src": "324:16:17"
										},
										"referencedDeclaration": 1642,
										"src": "324:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 3177,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "379:9:17",
									"nodeType": "VariableDeclaration",
									"scope": 3345,
									"src": "347:41:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3176,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3174,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "355:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "347:24:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3175,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "366:4:17",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3180,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "420:15:17",
									"nodeType": "VariableDeclaration",
									"scope": 3345,
									"src": "395:40:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1642_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3179,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3178,
											"name": "Counters.Counter",
											"nameLocations": [
												"395:8:17",
												"404:7:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1642,
											"src": "395:16:17"
										},
										"referencedDeclaration": 1642,
										"src": "395:16:17",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1642_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "SimpleNFT.BadgeInfo",
									"id": 3187,
									"members": [
										{
											"constant": false,
											"id": 3182,
											"mutability": "mutable",
											"name": "badgeID",
											"nameLocation": "847:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3187,
											"src": "842:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3181,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "842:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3184,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "873:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 3187,
											"src": "865:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3183,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "865:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3186,
											"mutability": "mutable",
											"name": "metadataURI",
											"nameLocation": "900:11:17",
											"nodeType": "VariableDeclaration",
											"scope": 3187,
											"src": "893:18:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3185,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "893:6:17",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BadgeInfo",
									"nameLocation": "821:9:17",
									"nodeType": "StructDefinition",
									"scope": 3345,
									"src": "814:105:17",
									"visibility": "public"
								},
								{
									"canonicalName": "SimpleNFT.BadgeTokenPair",
									"id": 3192,
									"members": [
										{
											"constant": false,
											"id": 3189,
											"mutability": "mutable",
											"name": "badgeID",
											"nameLocation": "965:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3192,
											"src": "960:12:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3188,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "960:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3191,
											"mutability": "mutable",
											"name": "tokenID",
											"nameLocation": "991:7:17",
											"nodeType": "VariableDeclaration",
											"scope": 3192,
											"src": "983:15:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3190,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "983:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BadgeTokenPair",
									"nameLocation": "934:14:17",
									"nodeType": "StructDefinition",
									"scope": 3345,
									"src": "927:79:17",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3203,
										"nodeType": "Block",
										"src": "1076:2:17",
										"statements": []
									},
									"id": 3204,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53696d706c654e4654",
													"id": 3195,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1035:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ec267fca141c764221852299d9f5858d47427ee7d73224d7f49061ac8e3af920",
														"typeString": "literal_string \"SimpleNFT\""
													},
													"value": "SimpleNFT"
												},
												{
													"hexValue": "534e4654",
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1048:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a18789003a02245e0d622227aa1c8c4381221a4274a0fd7a60fd5b2a63f59639",
														"typeString": "literal_string \"SNFT\""
													},
													"value": "SNFT"
												}
											],
											"id": 3197,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3194,
												"name": "ERC721",
												"nameLocations": [
													"1028:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1028:6:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1028:27:17"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3199,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1064:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1068:6:17",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1064:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3201,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3198,
												"name": "Ownable",
												"nameLocations": [
													"1056:7:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1056:7:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1056:19:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:17"
									},
									"returnParameters": {
										"id": 3202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:17"
									},
									"scope": 3345,
									"src": "1014:64:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3215,
										"nodeType": "Block",
										"src": "1138:45:17",
										"statements": [
											{
												"expression": {
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3209,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "1149:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3211,
														"indexExpression": {
															"id": 3210,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3206,
															"src": "1159:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1149:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1171:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1149:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3214,
												"nodeType": "ExpressionStatement",
												"src": "1149:26:17"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 3216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addToWhitelist",
									"nameLocation": "1095:14:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1118:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "1110:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:18:17"
									},
									"returnParameters": {
										"id": 3208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1138:0:17"
									},
									"scope": 3345,
									"src": "1086:97:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3227,
										"nodeType": "Block",
										"src": "1248:46:17",
										"statements": [
											{
												"expression": {
													"id": 3225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3221,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "1259:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3223,
														"indexExpression": {
															"id": 3222,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "1269:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1259:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1281:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1259:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3226,
												"nodeType": "ExpressionStatement",
												"src": "1259:27:17"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 3228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromWhitelist",
									"nameLocation": "1200:19:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3218,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1228:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "1220:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:18:17"
									},
									"returnParameters": {
										"id": 3220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1248:0:17"
									},
									"scope": 3345,
									"src": "1191:103:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "f371d67483809edbc84279729528d26a3e37ce67f1e3a911778dbf88ff927ca2",
									"id": 3236,
									"name": "TokenMinted",
									"nameLocation": "1308:11:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"indexed": false,
												"mutability": "mutable",
												"name": "badgeID",
												"nameLocation": "1328:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3236,
												"src": "1320:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3232,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "1345:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 3236,
												"src": "1337:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3234,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1362:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3236,
												"src": "1354:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1319:53:17"
									},
									"src": "1302:71:17"
								},
								{
									"body": {
										"id": 3334,
										"nodeType": "Block",
										"src": "1490:774:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3248,
																"name": "whitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3177,
																"src": "1505:9:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3251,
															"indexExpression": {
																"expression": {
																	"id": 3249,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1515:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1519:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1515:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1505:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6569746865722073656e646572206e6f7220726563697069656e742069732077686974656c6973746564",
															"id": 3252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1528:45:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca",
																"typeString": "literal_string \"Neither sender nor recipient is whitelisted\""
															},
															"value": "Neither sender nor recipient is whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_087f314e6d05b874fc2c8525662c42e5c4a0e5f34835ad90d6b704fc12130fca",
																"typeString": "literal_string \"Neither sender nor recipient is whitelisted\""
															}
														],
														"id": 3247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1497:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1497:77:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3254,
												"nodeType": "ExpressionStatement",
												"src": "1497:77:17"
											},
											{
												"assignments": [
													3259
												],
												"declarations": [
													{
														"constant": false,
														"id": 3259,
														"mutability": "mutable",
														"name": "badgeTokenPairs",
														"nameLocation": "1605:15:17",
														"nodeType": "VariableDeclaration",
														"scope": 3334,
														"src": "1581:39:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SimpleNFT.BadgeTokenPair[]"
														},
														"typeName": {
															"baseType": {
																"id": 3257,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3256,
																	"name": "BadgeTokenPair",
																	"nameLocations": [
																		"1581:14:17"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3192,
																	"src": "1581:14:17"
																},
																"referencedDeclaration": 3192,
																"src": "1581:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BadgeTokenPair_$3192_storage_ptr",
																	"typeString": "struct SimpleNFT.BadgeTokenPair"
																}
															},
															"id": 3258,
															"nodeType": "ArrayTypeName",
															"src": "1581:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BadgeTokenPair_$3192_storage_$dyn_storage_ptr",
																"typeString": "struct SimpleNFT.BadgeTokenPair[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3267,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3264,
																"name": "badges",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3240,
																"src": "1644:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct SimpleNFT.BadgeInfo memory[] memory"
																}
															},
															"id": 3265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1651:6:17",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1644:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1623:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SimpleNFT.BadgeTokenPair memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3261,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3260,
																	"name": "BadgeTokenPair",
																	"nameLocations": [
																		"1627:14:17"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3192,
																	"src": "1627:14:17"
																},
																"referencedDeclaration": 3192,
																"src": "1627:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BadgeTokenPair_$3192_storage_ptr",
																	"typeString": "struct SimpleNFT.BadgeTokenPair"
																}
															},
															"id": 3262,
															"nodeType": "ArrayTypeName",
															"src": "1627:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BadgeTokenPair_$3192_storage_$dyn_storage_ptr",
																"typeString": "struct SimpleNFT.BadgeTokenPair[]"
															}
														}
													},
													"id": 3266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:35:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SimpleNFT.BadgeTokenPair memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1581:77:17"
											},
											{
												"body": {
													"id": 3330,
													"nodeType": "Block",
													"src": "1706:462:17",
													"statements": [
														{
															"assignments": [
																3280
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3280,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "1725:7:17",
																	"nodeType": "VariableDeclaration",
																	"scope": 3330,
																	"src": "1717:15:17",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3279,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1717:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3284,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3281,
																		"name": "_tokenIdCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3180,
																		"src": "1735:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1642_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 3282,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1751:7:17",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1654,
																	"src": "1735:23:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1642_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1642_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 3283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1735:25:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1717:43:17"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3285,
																		"name": "_tokenIdCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3180,
																		"src": "1771:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1642_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 3287,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1787:9:17",
																	"memberName": "increment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1668,
																	"src": "1771:25:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1642_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1642_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer)"
																	}
																},
																"id": 3288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1771:27:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3289,
															"nodeType": "ExpressionStatement",
															"src": "1771:27:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3291,
																				"name": "badges",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3240,
																				"src": "1815:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct SimpleNFT.BadgeInfo memory[] memory"
																				}
																			},
																			"id": 3293,
																			"indexExpression": {
																				"id": 3292,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3269,
																				"src": "1822:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1815:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BadgeInfo_$3187_memory_ptr",
																				"typeString": "struct SimpleNFT.BadgeInfo memory"
																			}
																		},
																		"id": 3294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1825:9:17",
																		"memberName": "recipient",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3184,
																		"src": "1815:19:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3295,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3280,
																		"src": "1836:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3290,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "1809:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1809:35:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3297,
															"nodeType": "ExpressionStatement",
															"src": "1809:35:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3299,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3280,
																		"src": "1868:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3300,
																				"name": "badges",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3240,
																				"src": "1877:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct SimpleNFT.BadgeInfo memory[] memory"
																				}
																			},
																			"id": 3302,
																			"indexExpression": {
																				"id": 3301,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3269,
																				"src": "1884:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1877:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BadgeInfo_$3187_memory_ptr",
																				"typeString": "struct SimpleNFT.BadgeInfo memory"
																			}
																		},
																		"id": 3303,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1887:11:17",
																		"memberName": "metadataURI",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3186,
																		"src": "1877:21:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 3298,
																	"name": "_setTokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "1855:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,string memory)"
																	}
																},
																"id": 3304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1855:44:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3305,
															"nodeType": "ExpressionStatement",
															"src": "1855:44:17"
														},
														{
															"expression": {
																"id": 3316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3306,
																		"name": "badgeTokenPairs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3259,
																		"src": "1910:15:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct SimpleNFT.BadgeTokenPair memory[] memory"
																		}
																	},
																	"id": 3308,
																	"indexExpression": {
																		"id": 3307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3269,
																		"src": "1926:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1910:18:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BadgeTokenPair_$3192_memory_ptr",
																		"typeString": "struct SimpleNFT.BadgeTokenPair memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 3310,
																					"name": "badges",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3240,
																					"src": "1970:6:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct SimpleNFT.BadgeInfo memory[] memory"
																					}
																				},
																				"id": 3312,
																				"indexExpression": {
																					"id": 3311,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3269,
																					"src": "1977:1:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1970:9:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_BadgeInfo_$3187_memory_ptr",
																					"typeString": "struct SimpleNFT.BadgeInfo memory"
																				}
																			},
																			"id": 3313,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1980:7:17",
																			"memberName": "badgeID",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3182,
																			"src": "1970:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 3314,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3280,
																			"src": "2011:7:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3309,
																		"name": "BadgeTokenPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3192,
																		"src": "1931:14:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_BadgeTokenPair_$3192_storage_ptr_$",
																			"typeString": "type(struct SimpleNFT.BadgeTokenPair storage pointer)"
																		}
																	},
																	"id": 3315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"1961:7:17",
																		"2002:7:17"
																	],
																	"names": [
																		"badgeID",
																		"tokenID"
																	],
																	"nodeType": "FunctionCall",
																	"src": "1931:99:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_BadgeTokenPair_$3192_memory_ptr",
																		"typeString": "struct SimpleNFT.BadgeTokenPair memory"
																	}
																},
																"src": "1910:120:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_BadgeTokenPair_$3192_memory_ptr",
																	"typeString": "struct SimpleNFT.BadgeTokenPair memory"
																}
															},
															"id": 3317,
															"nodeType": "ExpressionStatement",
															"src": "1910:120:17"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3319,
																				"name": "badges",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3240,
																				"src": "2112:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct SimpleNFT.BadgeInfo memory[] memory"
																				}
																			},
																			"id": 3321,
																			"indexExpression": {
																				"id": 3320,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3269,
																				"src": "2119:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2112:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BadgeInfo_$3187_memory_ptr",
																				"typeString": "struct SimpleNFT.BadgeInfo memory"
																			}
																		},
																		"id": 3322,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2122:7:17",
																		"memberName": "badgeID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3182,
																		"src": "2112:17:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3323,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3280,
																		"src": "2131:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3324,
																				"name": "badges",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3240,
																				"src": "2140:6:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct SimpleNFT.BadgeInfo memory[] memory"
																				}
																			},
																			"id": 3326,
																			"indexExpression": {
																				"id": 3325,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3269,
																				"src": "2147:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2140:9:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_BadgeInfo_$3187_memory_ptr",
																				"typeString": "struct SimpleNFT.BadgeInfo memory"
																			}
																		},
																		"id": 3327,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2150:9:17",
																		"memberName": "recipient",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3184,
																		"src": "2140:19:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3318,
																	"name": "TokenMinted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3236,
																	"src": "2100:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,uint256,address)"
																	}
																},
																"id": 3328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2100:60:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3329,
															"nodeType": "EmitStatement",
															"src": "2095:65:17"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3272,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3269,
														"src": "1682:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3273,
															"name": "badges",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3240,
															"src": "1686:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct SimpleNFT.BadgeInfo memory[] memory"
															}
														},
														"id": 3274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1693:6:17",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1686:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1682:17:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3331,
												"initializationExpression": {
													"assignments": [
														3269
													],
													"declarations": [
														{
															"constant": false,
															"id": 3269,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1675:1:17",
															"nodeType": "VariableDeclaration",
															"scope": 3331,
															"src": "1670:6:17",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3268,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1670:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3271,
													"initialValue": {
														"hexValue": "30",
														"id": 3270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1679:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1670:10:17"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1701:3:17",
														"subExpression": {
															"id": 3276,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3269,
															"src": "1701:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3278,
													"nodeType": "ExpressionStatement",
													"src": "1701:3:17"
												},
												"nodeType": "ForStatement",
												"src": "1665:503:17"
											},
											{
												"expression": {
													"id": 3332,
													"name": "badgeTokenPairs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3259,
													"src": "2181:15:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SimpleNFT.BadgeTokenPair memory[] memory"
													}
												},
												"functionReturnParameters": 3246,
												"id": 3333,
												"nodeType": "Return",
												"src": "2174:22:17"
											}
										]
									},
									"functionSelector": "5f6c96a0",
									"id": 3335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNFT",
									"nameLocation": "1390:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "badges",
												"nameLocation": "1417:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "1398:25:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SimpleNFT.BadgeInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 3238,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3237,
															"name": "BadgeInfo",
															"nameLocations": [
																"1398:9:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3187,
															"src": "1398:9:17"
														},
														"referencedDeclaration": 3187,
														"src": "1398:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BadgeInfo_$3187_storage_ptr",
															"typeString": "struct SimpleNFT.BadgeInfo"
														}
													},
													"id": 3239,
													"nodeType": "ArrayTypeName",
													"src": "1398:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BadgeInfo_$3187_storage_$dyn_storage_ptr",
														"typeString": "struct SimpleNFT.BadgeInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:27:17"
									},
									"returnParameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "1460:23:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_BadgeTokenPair_$3192_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SimpleNFT.BadgeTokenPair[]"
												},
												"typeName": {
													"baseType": {
														"id": 3243,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3242,
															"name": "BadgeTokenPair",
															"nameLocations": [
																"1460:14:17"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3192,
															"src": "1460:14:17"
														},
														"referencedDeclaration": 3192,
														"src": "1460:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BadgeTokenPair_$3192_storage_ptr",
															"typeString": "struct SimpleNFT.BadgeTokenPair"
														}
													},
													"id": 3244,
													"nodeType": "ArrayTypeName",
													"src": "1460:16:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_BadgeTokenPair_$3192_storage_$dyn_storage_ptr",
														"typeString": "struct SimpleNFT.BadgeTokenPair[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:25:17"
									},
									"scope": 3345,
									"src": "1381:883:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3343,
										"nodeType": "Block",
										"src": "2376:36:17",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3340,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2394:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2398:6:17",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2394:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3339,
												"id": 3342,
												"nodeType": "Return",
												"src": "2387:17:17"
											}
										]
									},
									"functionSelector": "7a6ce2e1",
									"id": 3344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMsgSender",
									"nameLocation": "2329:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:17"
									},
									"returnParameters": {
										"id": 3339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3344,
												"src": "2367:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2367:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2366:9:17"
									},
									"scope": 3345,
									"src": "2320:92:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3346,
							"src": "250:2165:17",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								24,
								167,
								174,
								1341,
								1350,
								1359,
								3236
							]
						}
					],
					"src": "33:2384:17"
				},
				"id": 17
			}
		}
	}
}